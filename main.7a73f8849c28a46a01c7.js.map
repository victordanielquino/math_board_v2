{"version":3,"file":"main.7a73f8849c28a46a01c7.js","mappings":"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","sources":["webpack://mathboard/webpack/runtime/chunk loaded","webpack://mathboard/./src/context/AppContext.js","webpack://mathboard/./src/context/AppContextLapiz.js","webpack://mathboard/./src/context/AppContextBorrador.js","webpack://mathboard/./src/context/AppContextCuadrado.js","webpack://mathboard/./src/context/AppContextMover.js","webpack://mathboard/./src/context/AppContextCanvas.js","webpack://mathboard/./src/context/AppContextLinea.js","webpack://mathboard/./src/context/AppContextPlano.js","webpack://mathboard/./src/hooks/useInitialState.js","webpack://mathboard/./src/hooks/useMover.js","webpack://mathboard/./src/hooks/useLapiz.js","webpack://mathboard/./src/hooks/useBorrador.js","webpack://mathboard/./src/hooks/useCuadrado.js","webpack://mathboard/./src/hooks/useCanvas.js","webpack://mathboard/./src/hooks/useLinea.js","webpack://mathboard/./src/hooks/usePlano.js","webpack://mathboard/./src/containers/Menu1.jsx","webpack://mathboard/./src/containers/MenuPlano.jsx","webpack://mathboard/./src/containers/MenuMover.jsx","webpack://mathboard/./src/components/PaletaColor.jsx","webpack://mathboard/./src/components/PaletaGrosor.jsx","webpack://mathboard/./src/containers/MenuLapiz.jsx","webpack://mathboard/./src/containers/MenuBorrador.jsx","webpack://mathboard/./src/containers/MenuCuadrado.jsx","webpack://mathboard/./src/containers/MenuCuadricula.jsx","webpack://mathboard/./src/containers/MenuLinea.jsx","webpack://mathboard/./src/components/Header.jsx","webpack://mathboard/./src/components/key.jsx","webpack://mathboard/./src/components/KeySvg.jsx","webpack://mathboard/./src/components/KeyTxt.jsx","webpack://mathboard/./src/containers/Keyboard.jsx","webpack://mathboard/./src/components/NavIzq.jsx","webpack://mathboard/./src/utils/UtilsCuadricula.js","webpack://mathboard/./src/utils/UtilsCuadrado.js","webpack://mathboard/./src/utils/UtilsLinea.js","webpack://mathboard/./src/utils/UtilsLapiz.js","webpack://mathboard/./src/utils/UtilsPlano.js","webpack://mathboard/./src/utils/UtilsMover.js","webpack://mathboard/./src/utils/UtilsMoverLapiz.js","webpack://mathboard/./src/components/PaintMover.jsx","webpack://mathboard/./src/components/PaintBorrador.jsx","webpack://mathboard/./src/components/Canvas.jsx","webpack://mathboard/./src/components/PaintCuadricula.jsx","webpack://mathboard/./src/components/PaintLapiz.jsx","webpack://mathboard/./src/components/PaintCuadrado.jsx","webpack://mathboard/./src/components/PaintLinea.jsx","webpack://mathboard/./src/components/PaintPlano.jsx","webpack://mathboard/./src/pages/Home.jsx","webpack://mathboard/./src/containers/Layout.jsx","webpack://mathboard/./src/routes/App.jsx","webpack://mathboard/./src/index.js","webpack://mathboard/webpack/bootstrap","webpack://mathboard/webpack/runtime/define property getters","webpack://mathboard/webpack/runtime/global","webpack://mathboard/webpack/runtime/hasOwnProperty shorthand","webpack://mathboard/webpack/runtime/jsonp chunk loading","webpack://mathboard/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import React from 'react';\n\nconst AppContext = React.createContext({});\n\nexport default AppContext;\n","import React from 'react';\n\nconst AppContextLapiz = React.createContext({});\n\nexport default AppContextLapiz;\n","import React from 'react';\n\nconst AppContextBorrador = React.createContext({});\n\nexport default AppContextBorrador;\n","import React from 'react';\n\nconst AppContextCuadrado = React.createContext({});\n\nexport default AppContextCuadrado;\n","import React from 'react';\n\nconst AppContextMover = React.createContext({});\n\nexport default AppContextMover;\n","import React from 'react';\n\nconst AppContextCanvas = React.createContext({});\n\nexport default AppContextCanvas;\n","import React from 'react';\n\nconst AppContextLinea = React.createContext({});\n\nexport default AppContextLinea;\n","import React from 'react';\n\nconst AppContextPlano = React.createContext({});\n\nexport default AppContextPlano;\n","import { useState } from 'react';\n\nconst initialState = {\n\talfabetoMay: [\n\t\t'QWERTYUIOP'.split(''),\n\t\t'ASDFGHJKLÑ'.split(''),\n\t\t'ZXCVBNM,'.split(''),\n\t],\n\talfabetoMin: [\n\t\t'qwertyuiop'.split(''),\n\t\t'asdfghjklñ'.split(''),\n\t\t'zxcvbnm.'.split(''),\n\t],\n\talfabeto: [\n\t\t'QWERTYUIOP'.split(''),\n\t\t'ASDFGHJKLÑ'.split(''),\n\t\t'ZXCVBNM,'.split(''),\n\t],\n\tactive: '',\n\tcolor: 'black',\n\tcolorFondo: 'green',\n\tgrosor: 1,\n};\nconst useInitialState = () => {\n\tconst [state, setState] = useState(initialState);\n\n\tconst toLowerCase = () => {\n\t\tconst auxArray = state.alfabetoMin;\n\t\tsetState({\n\t\t\t...state,\n\t\t\talfabeto: auxArray,\n\t\t});\n\t};\n\tconst toUpperCase = () => {\n\t\tconst auxArray = state.alfabetoMay;\n\t\tsetState({\n\t\t\t...state,\n\t\t\talfabeto: auxArray,\n\t\t});\n\t};\n\n\t// ACTIVA Y DESACTIVA LA OPCION SELECCIONADA DE LA PALETA DE LA PIZARRA\n\tconst updateCanvasPaleta = (optionIcon) => {\n\t\tswitch (optionIcon) {\n\t\t\tcase 'moverIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'moverIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'lapizIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'lapizIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'borradorIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'borradorIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'lineaIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'lineaIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'cuadradoIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'cuadradoIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'planoIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'planoIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'cuadriculaIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'cuadriculaIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('Opcion no registrada / useInitialState!!!');\n\t\t\t\tbreak;\n\t\t}\n\t};\n\tconst updateColor = (valor) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tcolor: valor,\n\t\t});\n\t};\n\tconst updateGrosor = (valor) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\tconst updateColorFondo = (valor) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tcolorFondo: valor,\n\t\t});\n\t};\n\n\treturn {\n\t\tstate,\n\t\ttoLowerCase,\n\t\ttoUpperCase,\n\t\tupdateCanvasPaleta,\n\t\tupdateColor,\n\t\tupdateColorFondo,\n\t\tupdateGrosor,\n\t};\n};\n\nexport default useInitialState;\n","import { useState } from 'react';\nconst initialStateMover = {\n\tactive: false,\n};\n\nconst useMover = () => {\n\tconst [stateMover, setStateMover] = useState(initialStateMover);\n\n\tconst updateMoverActive = (valor) => {\n\t\tsetStateMover({\n\t\t\t...stateMover,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\treturn {\n\t\tstateMover,\n\t\tupdateMoverActive,\n\t};\n};\n\nexport default useMover;\n","import { useState } from 'react';\nconst initialStateLapiz = {\n\tid: 0,\n\tactive: false,\n\tcolor: 'black',\n\tgrosor: 4,\n\thistoriaLapiz: [],\n};\n\nconst useLapiz = () => {\n\tconst [stateLapiz, setStateLapiz] = useState(initialStateLapiz);\n\n\tconst updateLapizActive = (valor) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateLapizColor = (valor) => {\n\t\tconsole.log('color util:', valor);\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tcolor: valor,\n\t\t});\n\t\tconsole.log('color:', stateLapiz);\n\t};\n\tconst updateLapizGrosor = (valor) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\tconst add_historiaLapiz = (valor) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\thistoriaLapiz: [...stateLapiz.historiaLapiz, valor],\n\t\t});\n\t};\n\tconst add_historiaLapizId = (lapiz, id) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tid: id,\n\t\t\thistoriaLapiz: [...stateLapiz.historiaLapiz, lapiz],\n\t\t});\n\t};\n\tconst updateLapizColorGrosor = (valor1, valor2) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tcolor: valor1,\n\t\t\tgrosor: valor2,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateLapiz,\n\t\tupdateLapizActive,\n\t\tupdateLapizColor,\n\t\tupdateLapizGrosor,\n\t\tadd_historiaLapiz,\n\t\tupdateLapizColorGrosor,\n\t\tadd_historiaLapizId,\n\t};\n};\n\nexport default useLapiz;\n","import { useState } from 'react';\nconst initialStateBorrador = {\n\tactive: false,\n\tcolor: 'white',\n\tgrosor: 10,\n\thistorialBorrador: [],\n};\n\nconst useBorrador = () => {\n\tconst [stateBorrador, setStateBorrador] = useState(initialStateBorrador);\n\n\tconst updateBorradorActive = (valor) => {\n\t\tsetStateBorrador({\n\t\t\t...stateBorrador,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateBorradorColor = (valor) => {\n\t\tsetStateBorrador({\n\t\t\t...stateBorrador,\n\t\t\tcolor: valor,\n\t\t});\n\t};\n\tconst updateBorradorGrosor = (valor) => {\n\t\tsetStateBorrador({\n\t\t\t...stateBorrador,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateBorrador,\n\t\tupdateBorradorActive,\n\t\tupdateBorradorColor,\n\t\tupdateBorradorGrosor,\n\t};\n};\n\nexport default useBorrador;\n","import { useState } from 'react';\nconst initialStateCuadrado = {\n\tactive: false,\n\tbordeEstado: true, // si tendra borde\n\tbordeGrosor: 5,\n\tbordeColor: 'yellow',\n\tfondoEstado: true, // si tendra fondo\n\tfondoColor: 'black',\n\tx_ini: 0,\n\ty_ini: 0,\n\twidth: 10,\n\theight: 10,\n\thistoriaCuadrado: [],\n};\n\nconst useCuadrado = () => {\n\tconst [stateCuadrado, setStateCuadrado] = useState(initialStateCuadrado);\n\n\tconst updateCuadradoActive = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\t// UPDATE GENERAL(HEADER - PALETA):\n\tconst updateCuadradoBordeGrosor = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeGrosor: valor,\n\t\t});\n\t};\n\tconst updateCuadradoBordeEstado = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeEstado: valor,\n\t\t});\n\t};\n\tconst updateCuadradoBorde_ColorEstado = (color, estado) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeColor: color,\n\t\t\tbordeEstado: estado,\n\t\t});\n\t};\n\tconst updateCuadradoFondoEstado = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tfondoEstado: valor,\n\t\t});\n\t};\n\tconst updateCuadradoFondo_ColorEstado = (color, estado) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tfondoColor: color,\n\t\t\tfondoEstado: estado,\n\t\t});\n\t};\n\t// CREATE: ADD_IN:\thistoriaCuadrado[]\n\tconst add_cuadrado_en_historia = (cuadrado) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\thistoriaCuadrado: [...stateCuadrado.historiaCuadrado, cuadrado],\n\t\t});\n\t};\n\t// DELETE: DELETE_IN:\thistoriaCuadrado[]\n\t// UPDATE: UPDATE_IN:\thistoriaCuadrado[]\n\tconst update_cuadrado_en_historia = (array) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\thistoriaCuadrado: array,\n\t\t});\n\t};\n\tconst update_cuadradoH = (array) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\thistoriaCuadrado: array,\n\t\t});\n\t};\n\tconst update_all = (\n\t\tcolorBorde,\n\t\tcolorFondo,\n\t\tbordeGrosor,\n\t\tbordeEstadoIn,\n\t\tfondoEstadoIn\n\t) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeColor: colorBorde,\n\t\t\tfondoColor: colorFondo,\n\t\t\tbordeGrosor: bordeGrosor,\n\t\t\tbordeEstado: bordeEstadoIn,\n\t\t\tfondoEstado: fondoEstadoIn,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateCuadrado,\n\t\tupdateCuadradoActive,\n\t\tupdateCuadradoBordeGrosor,\n\t\tupdateCuadradoBordeEstado,\n\t\tupdateCuadradoBorde_ColorEstado,\n\t\tupdateCuadradoFondoEstado,\n\t\tupdateCuadradoFondo_ColorEstado,\n\t\tadd_cuadrado_en_historia,\n\t\tupdate_cuadrado_en_historia,\n\t\tupdate_all,\n\t\tupdate_cuadradoH, // new\n\t};\n};\n\nexport default useCuadrado;\n","import { useState } from 'react';\n\nconst initialStateCanvas = {\n\tactive: false,\n\tid: 0,\n\twidth: 0,\n\theight: 0,\n\tcuadriculaWidth: 30,\n\tfondoColor: 'white',\n\tlineaColor: '#d5dbdb',\n\tlineaGrosor: 1,\n\ttipoCuadricula: 'cuadricula', // cuadricula, linea, ninguno\n};\n\nconst useCanvas = () => {\n\tconst [stateCanvas, setStateCanvas] = useState(initialStateCanvas);\n\n\tconst updateCuadriculaActive = (valor) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateCuadriculaWidth = (valor) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\tcuadriculaWidth: valor,\n\t\t});\n\t};\n\tconst update_width_height = (width, height) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t});\n\t};\n\tconst updateTipoCuadricula = (valor) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\ttipoCuadricula: valor,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateCanvas,\n\t\tupdateCuadriculaActive,\n\t\tupdateCuadriculaWidth,\n\t\tupdate_width_height,\n\t\tupdateTipoCuadricula,\n\t};\n};\n\nexport default useCanvas;\n","import { useState } from 'react';\nconst initialStateLinea = {\n\tactive: false,\n\tcolor: 'black',\n\tgrosor: 2,\n\tid: 0,\n\thistoriaLinea: [],\n};\n\nconst useLinea = () => {\n\tconst [stateLinea, setStateLinea] = useState(initialStateLinea);\n\n\tconst updateLineaActive = (valor) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateLineaColor = (valor) => {\n\t\tconsole.log('color util:', valor);\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tcolor: valor,\n\t\t});\n\t\tconsole.log('color:', stateLinea);\n\t};\n\tconst updateLineaGrosor = (valor) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\tconst add_historiaLinea = (valor) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\thistoriaLinea: [...stateLinea.historiaLinea, valor],\n\t\t});\n\t};\n\tconst add_historiaLinea_id = (valor, id) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tid: id,\n\t\t\thistoriaLinea: [...stateLinea.historiaLinea, valor],\n\t\t});\n\t};\n\tconst updateLineaColorGrosor = (valor1, valor2) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tcolor: valor1,\n\t\t\tgrosor: valor2,\n\t\t});\n\t};\n\tconst s_lineaUpdateH = (array) => {\n\t\tsetStateLinea({\n\t\t\t...setStateLinea,\n\t\t\thistoriaLinea: array,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateLinea,\n\t\tupdateLineaActive,\n\t\tupdateLineaColor,\n\t\tupdateLineaGrosor,\n\t\tadd_historiaLinea,\n\t\tadd_historiaLinea_id,\n\t\tupdateLineaColorGrosor,\n\t\ts_lineaUpdateH,\n\t};\n};\n\nexport default useLinea;\n","import { useState } from 'react';\nconst initialStatePlano = {\n\tactive: false,\n\tid: 0,\n\tx_min: -10,\n\ty_max: 10,\n\tsalto: 1,\n\tcolor_cuadricula: '#abb2b9',\n\twidth_cuadricula: 20,\n\thistoriaPlano: [],\n};\n\nconst usePlano = () => {\n\tconst [statePlano, setStatePlano] = useState(initialStatePlano);\n\n\tconst updatePlanoActive = (valor) => {\n\t\tsetStatePlano({\n\t\t\t...statePlano,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst add_plano_en_historia = (valor) => {\n\t\tsetStatePlano({\n\t\t\t...statePlano,\n\t\t\thistoriaPlano: [...statePlano.historiaPlano, valor],\n\t\t});\n\t};\n\tconst add_plano_en_historiaId = (valor, id) => {\n\t\tsetStatePlano({\n\t\t\t...statePlano,\n\t\t\tid: id,\n\t\t\thistoriaPlano: [...statePlano.historiaPlano, valor],\n\t\t});\n\t};\n\treturn {\n\t\tstatePlano,\n\t\tupdatePlanoActive,\n\t\tadd_plano_en_historia,\n\t\tadd_plano_en_historiaId,\n\t};\n};\n\nexport default usePlano;\n","import React from 'react';\n\nconst MenuLapizAux = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h1>BIENVENIDO A LA PIZARRA DIGITAL WEB</h1>\n\t\t</div>\n\t);\n};\n\nexport default MenuLapizAux;\n","import React, { useContext, useEffect } from 'react';\n\nimport '../styles/MenuPlano.scss';\n\n// CONTEXT:\nimport AppContextPlano from '../context/AppContextPlano';\n\nconst MenuPlano = () => {\n\t// useContext:\n\tconst { statePlano } = useContext(AppContextPlano);\n\n\t// LOGICA\n\tconst handleAdd = () => {\n\t\tconsole.log('press add');\n\t};\n\t// LOGICA END.\n\n\t// useEffect\n\tuseEffect(() => {}, []);\n\treturn (\n\t\t<article className=\"article__menuPlano\">\n\t\t\t<div className=\"article__menuPlano__limites\">\n\t\t\t\t<div className=\"article__menuPlano__limites__minMay\">\n\t\t\t\t\t<span>X_MIN: </span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tdefaultValue={statePlano.x_min}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input type=\"button\" value=\"-\" />\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input type=\"button\" value=\"+\" />\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"article__menuPlano__limites__minMay\">\n\t\t\t\t\t<span>Y_MAY:</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tdefaultValue={statePlano.y_max}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input type=\"button\" value=\"-\" />\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input type=\"button\" value=\"+\" />\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"article__menuPlano__salto\">\n\t\t\t\t<div className=\"article__menuPlano__salto__minMay\">\n\t\t\t\t\t<span>PRESS:</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tdefaultValue=\"ADD\"\n\t\t\t\t\t\t\tonClick={() => handleAdd()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default MenuPlano;\n","import React from 'react';\n\nconst MenuMover = () => {\n\treturn <div>mover</div>;\n};\n\nexport default MenuMover;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\n\n// styles:\nimport '../styles/PaletaColor.scss';\nimport iconLineaNone from '../assets/icons/lineaNone.svg';\n\nconst PaletaColor = (value) => {\n\t// useContext:\n\tconst { state, updateColor, updateColorFondo } = useContext(AppContext);\n\n\t// LOGICA:\n\tconst arrayPaletaColor = [\n\t\t{ colorLine: 'white', id: `colorNone-${value.tipo}` },\n\t\t{ colorLine: 'black', id: `colorBlack-${value.tipo}` },\n\t\t{ colorLine: 'red', id: `colorRed-${value.tipo}` },\n\t\t{ colorLine: 'green', id: `colorGreen-${value.tipo}` },\n\t\t{ colorLine: 'blue', id: `colorBlue-${value.tipo}` },\n\t\t{ colorLine: 'yellow', id: `colorYellow-${value.tipo}` },\n\t];\n\tconst updatePaletaColor = (color) => {\n\t\tarrayPaletaColor.forEach((dato) =>\n\t\t\tdocument.getElementById(dato.id).classList.remove('activePaletaColor')\n\t\t);\n\t\tlet elem = arrayPaletaColor.find((elem) => elem.colorLine == color);\n\t\tdocument.getElementById(elem.id).classList.add('activePaletaColor');\n\t};\n\tconst handlePaletaColor = (color) => {\n\t\tupdatePaletaColor(color);\n\t\tvalue.tipo == 'linea'\n\t\t\t? updateColor(color) // CONTEXT COLOR\n\t\t\t: updateColorFondo(color); // CONTEXT colorFondo\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t// se ejecuta solo la 1ra vez que se carga el componente.\n\t\tvalue.tipo == 'linea'\n\t\t\t? updatePaletaColor(state.color)\n\t\t\t: updatePaletaColor(state.colorFondo);\n\t}, [updateColor, updateColorFondo]);\n\n\treturn (\n\t\t<div className=\"article__menuLapiz__paletaColor\">\n\t\t\t<div>\n\t\t\t\t<span>{value.title}: </span>\n\t\t\t</div>\n\t\t\t<div className=\"article__menuLapiz__paletaColor__container\">\n\t\t\t\t{arrayPaletaColor.map((elem) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`color activePaletaColor ${elem.colorLine}`}\n\t\t\t\t\t\tid={elem.id}\n\t\t\t\t\t\tonClick={() => handleColor('colorNegro')}\n\t\t\t\t\t\tkey={elem.id}\n\t\t\t\t\t\tonClick={() => handlePaletaColor(elem.colorLine)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{elem.colorLine == 'white' && <img src={iconLineaNone} />}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default PaletaColor;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\n\n// styles:\nimport '../styles/PaletaGrosor.scss';\n//import iconLineaNone from '../assets/icons/lineaNone.svg';\nimport iconLineaS from '../assets/icons/lineaS.svg';\nimport iconLineaM from '../assets/icons/lineaM.svg';\nimport iconLineaL from '../assets/icons/lineaL.svg';\nimport iconLineaXL from '../assets/icons/lineaXL.svg';\nimport iconLineaXXL from '../assets/icons/lineaXXL.svg';\n\nconst PaletaGrosor = (title) => {\n\t// useContext:\n\tconst { state, updateGrosor } = useContext(AppContext);\n\n\t// LOGICA:\n\tconst arrayIconLinea = [\n\t\t//{ iconLine: iconLineaNone, grosor: 0, id: 'iconLineaNone' },\n\t\t{ iconLine: iconLineaS, grosor: 1, id: 'iconLineaS' },\n\t\t{ iconLine: iconLineaM, grosor: 2, id: 'iconLineaM' },\n\t\t{ iconLine: iconLineaL, grosor: 4, id: 'iconLineaL' },\n\t\t{ iconLine: iconLineaXL, grosor: 6, id: 'iconLineaXL' },\n\t\t{ iconLine: iconLineaXXL, grosor: 10, id: 'iconLineaXXL' },\n\t];\n\tconst updatePaletaGrosor = (grosor) => {\n\t\tconst array = document.querySelectorAll('.activeIconLinea');\n\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\tarray[i].classList.remove('activeIconLinea');\n\t\t}\n\t\tlet elem = arrayIconLinea.find((elem) => elem.grosor == grosor);\n\t\tdocument.getElementById(elem.id).classList.add('activeIconLinea');\n\t};\n\tconst handleLineaGrosor = (grosor) => {\n\t\tupdatePaletaGrosor(grosor);\n\t\tupdateGrosor(grosor); // CONTEXT\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t// se ejecuta solo la 1ra vez que se carga el componente.\n\t\tupdatePaletaGrosor(state.grosor);\n\t}, []);\n\n\treturn (\n\t\t<div className=\"article__menuLapiz__tamano\">\n\t\t\t<span htmlFor=\"\">{title.title}: </span>\n\t\t\t<div className=\"article__menuLapiz__tamano__icons\">\n\t\t\t\t{arrayIconLinea.map((elem) => (\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"article__menuLapiz__tamano__icons__icon \"\n\t\t\t\t\t\tsrc={elem.iconLine}\n\t\t\t\t\t\tid={elem.id}\n\t\t\t\t\t\tkey={`key-${elem.id}`}\n\t\t\t\t\t\tonClick={() => handleLineaGrosor(elem.grosor)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default PaletaGrosor;\n","import React, { useContext, useEffect } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\nimport AppContextLapiz from '../context/AppContextLapiz';\n\n// components:\nimport PaletaColor from '../components/PaletaColor';\nimport PaletaGrosor from '../components/PaletaGrosor';\n\n// styles:\nimport '../styles/MenuLapiz.scss';\n\nconst MenuLapiz = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\tconst { updateLapizColorGrosor } = useContext(AppContextLapiz);\n\n\t// LOGICA:\n\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tupdateLapizColorGrosor(state.color, state.grosor);\n\t}, [state]);\n\tuseEffect(() => {\n\t\t//console.log('STATE LAPIZ:', stateLapiz);\n\t}, []);\n\n\treturn (\n\t\t<article className=\"article__menuLapiz\">\n\t\t\t{<PaletaGrosor title=\"LINEA\" />}\n\t\t\t{<PaletaColor tipo=\"linea\" title=\"Color\" />}\n\t\t</article>\n\t);\n};\n\nexport default MenuLapiz;\n","import React, { useContext, useEffect } from 'react';\n\n// context:\nimport AppContextBorrador from '../context/AppContextBorrador';\n\n// style:\nimport '../styles/MenuBorrador.scss';\n\nconst MenuBorrador = () => {\n\t// useContext:\n\tconst { stateBorrador, updateBorradorGrosor } =\n\t\tuseContext(AppContextBorrador);\n\n\t// LOGICA:\n\tconst updatePaletaGrosor = (grosor) => {\n\t\tdocument.getElementById('grosorBorrador').value = grosor;\n\t};\n\tconst handleGrosor = (opMatematica) => {\n\t\tlet valor = parseInt(document.getElementById('grosorBorrador').value);\n\t\tlet update = true;\n\t\tswitch (opMatematica) {\n\t\t\tcase '+':\n\t\t\t\tvalor + 1 < 20 ? (valor = valor + 1) : (update = false);\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\tvalor - 1 > 0 ? (valor = valor - 1) : (update = false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tif (update) {\n\t\t\tdocument.getElementById('grosorBorrador').value = valor;\n\t\t\tupdateBorradorGrosor(valor); // CONTEXT\n\t\t} else {\n\t\t\tconsole.log('limite');\n\t\t}\n\t};\n\t// LOGICA END.\n\n\t// EFFECT:\n\tuseEffect(() => {\n\t\tupdatePaletaGrosor(stateBorrador.grosor);\n\t}, [stateBorrador, updateBorradorGrosor]);\n\n\treturn (\n\t\t<article className=\"article__menuBorrador\">\n\t\t\t<div className=\"article__menuBorrador__tamano\">\n\t\t\t\t<span htmlFor=\"\">TAMAÑO DEL BORRADOR: </span>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\tid=\"grosorBorrador\"\n\t\t\t\t\tplaceholder=\"2\"\n\t\t\t\t\tdefaultValue=\"4\"\n\t\t\t\t\tdisabled\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\tid=\"button1_txt\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tvalue=\"+\"\n\t\t\t\t\tonClick={() => handleGrosor('+')}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\tid=\"button2_txt\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tvalue=\"-\"\n\t\t\t\t\tonClick={() => handleGrosor('-')}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default MenuBorrador;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\n\n// styles:\nimport '../styles/MenuCuadrado.scss';\n\n// components:\nimport PaletaGrosor from '../components/PaletaGrosor';\nimport PaletaColorBorde from '../components/PaletaColor';\nimport PaletaColorFondo from '../components/PaletaColor';\n\nconst MenuCuadrado = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\tconst {\n\t\tstateCuadrado,\n\t\tupdateCuadradoBordeGrosor,\n\t\tupdateCuadradoBorde_ColorEstado,\n\t\tupdateCuadradoFondo_ColorEstado,\n\t\tupdate_all,\n\t} = useContext(AppContextCuadrado);\n\n\t// LOGICA:\n\t// LOGICA END\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t// solo 1 vez al cargar el componente:\n\t}, []);\n\tuseEffect(() => {\n\t\t// solo cuando se modifica [stateCuadrado]:\n\t}, [stateCuadrado]);\n\n\tuseEffect(() => {\n\t\t// se ejecuta cada vez que se modifica el state.color\n\t\tupdateCuadradoBorde_ColorEstado(state.color, state.color != 'white');\n\t}, [state.color]);\n\n\tuseEffect(() => {\n\t\t// se ejecuta cada vez que se modifica el state\n\t\tupdateCuadradoFondo_ColorEstado(\n\t\t\tstate.colorFondo,\n\t\t\tstate.colorFondo != 'white'\n\t\t);\n\t}, [state.colorFondo]);\n\n\tuseEffect(() => {\n\t\tupdateCuadradoBordeGrosor(state.grosor);\n\t}, [state.grosor]);\n\n\tuseEffect(() => {\n\t\tupdate_all(\n\t\t\tstate.color,\n\t\t\tstate.colorFondo,\n\t\t\tstate.grosor,\n\t\t\tstate.color != 'white',\n\t\t\tstate.colorFondo != 'white'\n\t\t);\n\t}, []);\n\treturn (\n\t\t<article className=\"article__menuCuadrado\">\n\t\t\t{<PaletaGrosor title=\"BORDE\" />}\n\t\t\t{<PaletaColorBorde tipo=\"linea\" title=\"Borde\" />}\n\t\t\t{<PaletaColorFondo tipo=\"fondo\" title=\"Fondo\" />}\n\t\t</article>\n\t);\n};\n\nexport default MenuCuadrado;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContextCanvas from '../context/AppContextCanvas';\n\n// styles:\nimport '../styles/MenuCuadricula.scss';\nimport iconCuadricula from '../assets/icons/cuadricula.svg';\nimport iconCuadriculaSin from '../assets/icons/cuadriculaSin.svg';\nimport iconCuadriculaNone from '../assets/icons/lineaNone.svg';\n\nconst MenuCuadricula = () => {\n\t// useContext:\n\tconst { stateCanvas, updateTipoCuadricula, updateCuadriculaWidth } =\n\t\tuseContext(AppContextCanvas);\n\n\t// LOGICA:\n\tconst arrayIconCuadricula = [\n\t\t{\n\t\t\ticonCuadricula: iconCuadricula,\n\t\t\ttipo: 'cuadricula',\n\t\t\tid: 'iconCuadricula',\n\t\t},\n\t\t{\n\t\t\ticonCuadricula: iconCuadriculaSin,\n\t\t\ttipo: 'linea',\n\t\t\tid: 'iconCuadriculaSin',\n\t\t},\n\t\t{\n\t\t\ticonCuadricula: iconCuadriculaNone,\n\t\t\ttipo: 'ninguno',\n\t\t\tid: 'iconCuadriculaNone',\n\t\t},\n\t];\n\tconst updatePaleta_tipoCuadricula = (tipo) => {\n\t\tconst array = document.querySelectorAll('.activeIconCuadricula');\n\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\tarray[i].classList.remove('activeIconCuadricula');\n\t\t}\n\t\tlet elem = arrayIconCuadricula.find((elem) => elem.tipo == tipo);\n\t\tdocument.getElementById(elem.id).classList.add('activeIconCuadricula');\n\t};\n\tconst handleCuadriculaTipo = (tipo) => {\n\t\tupdatePaleta_tipoCuadricula(tipo);\n\t\tupdateTipoCuadricula(tipo);\n\t};\n\tconst handleBtnAncho = (op) => {\n\t\top == '-' && stateCanvas.cuadriculaWidth > 10\n\t\t\t? updateCuadriculaWidth(stateCanvas.cuadriculaWidth - 10)\n\t\t\t: '';\n\t\top == '+' ? updateCuadriculaWidth(stateCanvas.cuadriculaWidth + 10) : '';\n\t};\n\t// LOGICA END.\n\n\t// useEffect\n\tuseEffect(() => {\n\t\tupdatePaleta_tipoCuadricula(stateCanvas.tipoCuadricula);\n\t}, []);\n\n\treturn (\n\t\t<article className=\"article__menuCuadricula\">\n\t\t\t<div className=\"article__menuCuadricula__paletaTipo\">\n\t\t\t\t<div>\n\t\t\t\t\t<span>Cuadricula: </span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"article__menuCuadricula__paletaTipo__icons\">\n\t\t\t\t\t{arrayIconCuadricula.map((elem) => (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName=\"article__menuCuadricula__paletaTipo__icons__icon \"\n\t\t\t\t\t\t\tsrc={elem.iconCuadricula}\n\t\t\t\t\t\t\tid={elem.id}\n\t\t\t\t\t\t\tkey={`key-${elem.id}`}\n\t\t\t\t\t\t\tonClick={() => handleCuadriculaTipo(elem.tipo)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"article__menuCuadricula__paletaAncho\">\n\t\t\t\t<div>\n\t\t\t\t\t<span>Tamaño: </span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputButton\">\n\t\t\t\t\t<input type=\"button\" value=\"-\" onClick={() => handleBtnAncho('-')} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputButton\">\n\t\t\t\t\t<input type=\"button\" value=\"+\" onClick={() => handleBtnAncho('+')} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default MenuCuadricula;\n","import React, { useContext, useEffect } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\nimport AppContextLinea from '../context/AppContextLinea';\n\n// components:\nimport PaletaColor from '../components/PaletaColor';\nimport PaletaGrosor from '../components/PaletaGrosor';\n\n// styles:\nimport '../styles/MenuLinea.scss';\n\nconst MenuLinea = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\tconst { updateLineaColorGrosor } = useContext(AppContextLinea);\n\n\t// LOGICA:\n\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tupdateLineaColorGrosor(state.color, state.grosor);\n\t}, [state]);\n\tuseEffect(() => {\n\t\t//console.log('STATE Linea:', stateLinea);\n\t}, []);\n\n\treturn (\n\t\t<article className=\"article__menuLinea\">\n\t\t\t{<PaletaGrosor title=\"LINEA\" />}\n\t\t\t{<PaletaColor tipo=\"linea\" title=\"Color\" />}\n\t\t</article>\n\t);\n};\n\nexport default MenuLinea;\n","import React, { useEffect, useContext, useState } from 'react';\n\n// estilos:\nimport '../styles/Header.scss';\n\n// containers:\nimport Menu1 from '../containers/Menu1';\nimport MenuPlano from '../containers/MenuPlano';\nimport MenuMover from '../containers/MenuMover';\nimport MenuLapiz from '../containers/MenuLapiz';\nimport MenuBorrador from '../containers/MenuBorrador';\nimport MenuCuadrado from '../containers/MenuCuadrado';\nimport MenuCuadricula from '../containers/MenuCuadricula';\nimport MenuLinea from '../containers/MenuLinea';\n\n// context:\nimport AppContext from '../context/AppContext';\n\n// iconos:\n\nconst Header = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\n\t// useState:\n\tconst [toggleMenu1, setToggleMenu1] = useState(false);\n\t//const [toggleMenu2, setToggleMenu2] = useState(false);\n\tconst [toggleMenuMover, setToggleMenuMover] = useState(false);\n\tconst [toggleMenuLapiz, setToggleMenuLapiz] = useState(false);\n\tconst [toggleMenuBorrador, setToggleMenuBorrador] = useState(false);\n\tconst [toggleMenuCuadrado, setToggleMenuCuadrado] = useState(false);\n\tconst [toggleMenuCuadricula, setToggleMenuCuadricula] = useState(false);\n\tconst [toggleMenuLinea, setToggleMenuLinea] = useState(false);\n\tconst [toggleMenuPlano, setToggleMenuPlano] = useState(false);\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tswitch (state.active) {\n\t\t\tcase 'moverIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(true);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lapizIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(true);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tbreak;\n\t\t\tcase 'borradorIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(true);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadradoIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(true);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lineaIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(true);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tbreak;\n\t\t\tcase 'planoIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(true);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadriculaIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(true);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetToggleMenu1(true);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tbreak;\n\t\t}\n\t}, [state]);\n\treturn (\n\t\t<nav className=\"header__nav\">\n\t\t\t<div className=\"navbar-left\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"/\">MathBoard</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div className=\"navbar-central\">\n\t\t\t\t{toggleMenu1 && <Menu1 />}\n\t\t\t\t{toggleMenuPlano && <MenuPlano />}\n\t\t\t\t{toggleMenuMover && <MenuMover />}\n\t\t\t\t{toggleMenuLapiz && <MenuLapiz />}\n\t\t\t\t{toggleMenuBorrador && <MenuBorrador />}\n\t\t\t\t{toggleMenuCuadrado && <MenuCuadrado />}\n\t\t\t\t{toggleMenuCuadricula && <MenuCuadricula />}\n\t\t\t\t{toggleMenuLinea && <MenuLinea />}\n\t\t\t</div>\n\t\t\t<div className=\"navbar-right\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li className=\"navbar-email\">UMSA / INFORMÁTICA</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\n\nexport default Header;\n","import React from 'react';\n\nimport '../styles/Key.scss';\n\nconst Key = (valor) => {\n\tconst handleClick = (key) => {\n\t\tconsole.log(key);\n\t};\n\n\treturn (\n\t\t<input\n\t\t\ttype=\"button\"\n\t\t\tvalue={valor.element}\n\t\t\tclassName={`key ${valor.element}`}\n\t\t\tonClick={() => handleClick(valor.element)}\n\t\t/>\n\t);\n};\n\nexport default Key;\n","import React, { useState, useContext } from 'react';\n\nimport AppContext from '../context/AppContext';\n\nimport '../styles/KeySvg.scss';\n\nconst KeySvg = (svg) => {\n\tconst [toggleShift, setToggleShift] = useState(false);\n\n\tconst { toLowerCase, toUpperCase } = useContext(AppContext);\n\n\tconst handleClick = (option) => {\n\t\tswitch (option) {\n\t\t\tcase 'shift-fill':\n\t\t\t\tconsole.log(option);\n\t\t\t\tsetToggleShift(!toggleShift);\n\t\t\t\ttoggleShift ? toUpperCase() : toLowerCase();\n\t\t\t\tbreak;\n\t\t\tcase 'DEL':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tcase 'caret-left':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tcase 'caret-right':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tcase 'backspace':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\treturn (\n\t\t<input\n\t\t\ttype=\"button\"\n\t\t\tvalue=\"\"\n\t\t\tclassName={`keySvg ${svg.element}`}\n\t\t\tid={svg.element}\n\t\t\tonClick={() => handleClick(svg.element)}\n\t\t/>\n\t);\n};\n\nexport default KeySvg;\n","import React from 'react';\n\nimport '../styles/KeySvg.scss';\n\nconst KeyTxt = (txt) => {\n\tconst handleClick = (option) => {\n\t\tconsole.log(option);\n\t};\n\n\treturn (\n\t\t<input\n\t\t\ttype=\"button\"\n\t\t\tvalue={txt.element}\n\t\t\tclassName={`keySvg ${txt.element}`}\n\t\t\tid={txt.element}\n\t\t\tonClick={() => handleClick(txt.element)}\n\t\t/>\n\t);\n};\n\nexport default KeyTxt;\n","import React, { useState, useContext } from 'react';\n\nimport AppContext from '../context/AppContext';\n\nimport Key from '../components/key';\nimport KeySvg from '../components/KeySvg';\nimport KeyTxt from '../components/KeyTxt';\n\nimport '../styles/Keyboard.scss';\n\nconst Keyboard = () => {\n\tconst { state } = useContext(AppContext);\n\tconst array = state.alfabeto;\n\n\tconst arrayNumbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n\treturn (\n\t\t<aside className=\"keyboard\">\n\t\t\t<div className=\"keyboard__alfaNumerico\">\n\t\t\t\t<div>\n\t\t\t\t\t{arrayNumbers.map((element) => (\n\t\t\t\t\t\t<Key element={element} key={`key-${element}`} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{array[0].map((elm) => (\n\t\t\t\t\t\t<Key element={elm} key={`key-${elm}`} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{array[1].map((elm) => (\n\t\t\t\t\t\t<Key element={elm} key={`key-${elm}`} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"keyboard__alfaNumerico__flex\">\n\t\t\t\t\t<KeySvg element={'shift-fill'} key={`key-fill`} />\n\t\t\t\t\t{array[2].map((elm) => (\n\t\t\t\t\t\t<Key element={elm} key={`key-${elm}`} />\n\t\t\t\t\t))}\n\t\t\t\t\t<KeySvg element={'backspace'} key={`key-backspace`} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"keyboard__alfaNumerico__flex\">\n\t\t\t\t\t<KeyTxt element={'DEL'} key={`key-del`} />\n\t\t\t\t\t<Key element={'espacio'} key={`key-espacio`} />\n\t\t\t\t\t<KeySvg element={'caret-left'} key={`key-caret-left`} />\n\t\t\t\t\t<KeySvg element={'caret-right'} key={`key-caret-right`} />\n\t\t\t\t\t<KeyTxt element={'INI'} key={`key-ini`} />\n\t\t\t\t\t<KeyTxt element={'FIN'} key={`key-fin`} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"keyboard__simbolos\">simbolos</div>\n\t\t</aside>\n\t);\n};\n\nexport default Keyboard;\n","import React, { useState, useContext, useEffect } from 'react';\n\nimport AppContext from '../context/AppContext';\nimport AppContextMover from '../context/AppContextMover';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextBorrador from '../context/AppContextBorrador';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextCuadricula from '../context/AppContextCanvas';\nimport AppContextPlano from '../context/AppContextPlano';\n\nimport Keyboard from '../containers/Keyboard';\n\nimport '../styles/NavIzq.scss';\nimport moverIcon from '../assets/icons/move1.svg';\nimport lapizIcon from '../assets/icons/pen1.svg';\nimport borradorIcon from '../assets/icons/eraser1.svg';\nimport calculadoraIcon from '../assets/icons/calculator.svg';\nimport planoIcon from '../assets/icons/graph-up.svg';\nimport plusIcon from '../assets/icons/plus-square.svg';\nimport textIcon from '../assets/icons/textarea.svg';\nimport zoomInIcon from '../assets/icons/zoom-in.svg';\nimport zoomOutIcon from '../assets/icons/zoom-out.svg';\nimport cuadradoIcon from '../assets/icons/square.svg';\nimport lineaIcon from '../assets/icons/linea.svg';\nimport funcionIcon from '../assets/icons/function1.svg';\nimport sumatoriaIcon from '../assets/icons/sumatoria1.svg';\nimport imageIcon from '../assets/icons/image1.svg';\n\nimport cuadriculaIcon from '../assets/icons/cuadricula.svg';\nimport keyboardIcon from '../assets/icons/keyboard1.svg';\n\nconst NavIzq = () => {\n\t// useContext:\n\tconst { state, updateCanvasPaleta } = useContext(AppContext);\n\tconst { updateMoverActive } = useContext(AppContextMover);\n\tconst { updateLapizActive } = useContext(AppContextLapiz);\n\tconst { updateBorradorActive } = useContext(AppContextBorrador);\n\tconst { updateCuadradoActive } = useContext(AppContextCuadrado);\n\tconst { updateCuadriculaActive } = useContext(AppContextCuadricula);\n\tconst { updateLineaActive } = useContext(AppContextLinea);\n\tconst { updatePlanoActive } = useContext(AppContextPlano);\n\n\t// useState:\n\tconst [toggleKeyboard, setToggleKeyboard] = useState(false);\n\n\tconst iconosPaleta = [\n\t\t[moverIcon, 'moverIcon'],\n\t\t[lapizIcon, 'lapizIcon'],\n\t\t[borradorIcon, 'borradorIcon'],\n\t\t// [funcionIcon, 'funcionIcon'],\n\t\t// [sumatoriaIcon, 'sumatoriaIcon'],\n\t\t// [textIcon, 'textIcon'],\n\t\t[lineaIcon, 'lineaIcon'],\n\t\t[cuadradoIcon, 'cuadradoIcon'],\n\t\t// [calculadoraIcon, 'calculadoraIcon'],\n\t\t[planoIcon, 'planoIcon'],\n\t\t// [imageIcon, 'imageIcon'],\n\t\t// [zoomInIcon, 'zoomInIcon'],\n\t\t// [zoomOutIcon, 'zoomOutIcon'],\n\t\t[cuadriculaIcon, 'cuadriculaIcon'],\n\t];\n\n\tconst handleIcon = (icon) => {\n\t\t// HOOKS - useInitialState:\n\t\tupdateCanvasPaleta(icon);\n\n\t\t// HOOKS - useLapiz:\n\t\tswitch (icon) {\n\t\t\tcase 'moverIcon':\n\t\t\t\tupdateMoverActive(true);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lapizIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(true);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'borradorIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(true);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lineaIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(true);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadradoIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(true);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'planoIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(true);\n\t\t\t\tupdateCuadriculaActive(true);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadriculaIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('Opcion no registrada!!!');\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t//console.log('useEffect: [state]');\n\t\ticonosPaleta.map((elem) => {\n\t\t\tif (state.active == elem[1]) {\n\t\t\t\tdocument.getElementById(elem[1]).classList.add('navIzq__nav__active');\n\t\t\t} else {\n\t\t\t\tdocument\n\t\t\t\t\t.getElementById(elem[1])\n\t\t\t\t\t.classList.remove('navIzq__nav__active');\n\t\t\t}\n\t\t});\n\t\treturn () => {\n\t\t\t//console.log('return useEffect: [state]');\n\t\t};\n\t}, [state]);\n\n\treturn (\n\t\t<nav className=\"navIzq__nav\">\n\t\t\t<div className=\"navIzq__nav__top\">\n\t\t\t\t{iconosPaleta.map((elem) => (\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={elem[0]}\n\t\t\t\t\t\tonClick={() => handleIcon(elem[1])}\n\t\t\t\t\t\tkey={elem[1]}\n\t\t\t\t\t\tid={elem[1]}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"navIzq__nav__botton\">\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"navIzq__nav__div__keyboard\"\n\t\t\t\t\tsrc={keyboardIcon}\n\t\t\t\t\tonClick={() => setToggleKeyboard(!toggleKeyboard)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{toggleKeyboard && <Keyboard />}\n\t\t</nav>\n\t);\n};\n\nexport default NavIzq;\n","const utilsCuadricula_graficaCuadricula = (context, canvas) => {\n\tcontext.lineWidth = canvas.lineaGrosor; // lineaGrosor\n\tcontext.strokeStyle = canvas.lineaColor; // lineaColor\n\tcontext.fillStyle = 'white';\n\tcontext.setLineDash([0, 0]);\n\n\tcontext.beginPath();\n\tcontext.moveTo(0, 0); // (x_ini, y_ini)\n\tcontext.lineTo(canvas.width, 0); // (x_fin, y_ini)\n\tcontext.lineTo(canvas.width, canvas.height); // (x_fin, y_ini)\n\tcontext.lineTo(0, canvas.height); // (x_fin, y_ini)\n\tcontext.lineTo(0, 0); // (x_fin, y_ini)\n\tcontext.fill();\n\tcontext.stroke(); // bordeColor = true\n\tcontext.closePath();\n\n\t// VERTICAL: |\n\tif (canvas.tipoCuadricula == 'cuadricula') {\n\t\tlet nroLineasV = canvas.width / canvas.cuadriculaWidth - 1;\n\t\tlet incV = canvas.cuadriculaWidth;\n\t\tlet i = 0;\n\t\tfor (i = 0; i < nroLineasV; i++) {\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(incV, 0); // (x_ini, y_ini)\n\t\t\tcontext.lineTo(incV, canvas.height); // (x_fin, y_ini)\n\t\t\tcontext.stroke(); // bordeColor = true\n\t\t\tincV = incV + canvas.cuadriculaWidth;\n\t\t}\n\t}\n\t// HORIZONTAL: -\n\tif (\n\t\tcanvas.tipoCuadricula == 'cuadricula' ||\n\t\tcanvas.tipoCuadricula == 'linea'\n\t) {\n\t\tlet nroLineasH = canvas.height / canvas.cuadriculaWidth - 1;\n\t\tlet incH = canvas.cuadriculaWidth;\n\t\tlet i = 0;\n\t\tfor (i = 0; i < nroLineasH; i++) {\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(0, incH); // (x_ini, y_ini)\n\t\t\tcontext.lineTo(canvas.width, incH); // (x_fin, y_ini)\n\t\t\tcontext.stroke(); // bordeColor = true\n\t\t\tincH = incH + canvas.cuadriculaWidth;\n\t\t}\n\t}\n};\n\nexport { utilsCuadricula_graficaCuadricula };\n","// cuadrado segmentado:\nconst utilsCuadrado_graficaCuadradoSegmentado = (context, cuadrado) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.fillStyle = 'yellow'; // fondo Color\n\tcontext.lineWidth = 1; // borde grosor de linea\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\tlet width = cuadrado.x_fin - cuadrado.x_ini;\n\tlet height = cuadrado.y_fin - cuadrado.y_ini;\n\n\tcontext.beginPath();\n\tcontext.strokeRect(cuadrado.x_ini, cuadrado.y_ini, width, height);\n\tcontext.fillRect(cuadrado.x_ini, cuadrado.y_ini, width, height);\n\tcontext.closePath();\n};\n\n// limpia el canvas:\nconst utilsCuadrado_LimpiaCuadrado = (context, cuadrado) => {\n\tlet width = cuadrado.x_fin - cuadrado.x_ini;\n\tlet height = cuadrado.y_fin - cuadrado.y_ini;\n\tcontext.clearRect(cuadrado.x_ini, cuadrado.y_ini, width, height);\n};\n\n// cuadrado:\nconst utilsCuadrado_graficaCuadrado = (context, cuadrado) => {\n\tcontext.strokeStyle = cuadrado.bordeColor; // bordeColor\n\tcontext.fillStyle = cuadrado.fondoColor; // fondoColor\n\tcontext.lineWidth = cuadrado.bordeGrosor; // bordeGrosor\n\tcontext.setLineDash([0, 0]); // lineas no segmentadas\n\n\tcontext.beginPath();\n\tcontext.moveTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\n\tcuadrado.fondoEstado ? context.fill() : ''; // fondoColor = true\n\tcuadrado.bordeEstado ? context.stroke() : ''; // bordeColor = true\n\tcontext.closePath();\n};\n\n// GRAFICA CUADRADOS - HISORIA:\nconst utilsCuadrado_graficaCuadradoHistoria = (context, array) => {\n\tarray.forEach((element) => utilsCuadrado_graficaCuadrado(context, element));\n};\nconst u_cuadradoGraficaH = (context, array) => {\n\tarray.forEach((element) => utilsCuadrado_graficaCuadrado(context, element));\n};\n\n// GRAFICA CUADRADOS - HISORIA MENOS EL I-ESIMO id:\nconst UC_graficaCuadradoHistoria_menosI = (context, array, i) => {\n\tarray.forEach((element) =>\n\t\telement.id != i ? utilsCuadrado_graficaCuadrado(context, element) : ''\n\t);\n};\n\n// CUADRADO: GET\nconst u_cuadradoGet = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((elem) =>\n\t\telem.x_ini < x && x < elem.x_fin && elem.y_ini < y && y < elem.y_fin\n\t\t\t? (resp = elem)\n\t\t\t: ''\n\t);\n\treturn resp;\n};\n// CUADRADO: DELETE POR ID\nconst u_cuadradoDeleteById = (array, cuadradoId) => {\n\tconsole.log('id:', cuadradoId);\n\tlet arrayNew = [];\n\tarray.forEach((element) => {\n\t\telement.id != cuadradoId ? arrayNew.push(element) : '';\n\t});\n\treturn arrayNew;\n};\n\nexport {\n\tutilsCuadrado_graficaCuadrado,\n\tutilsCuadrado_graficaCuadradoHistoria,\n\tutilsCuadrado_graficaCuadradoSegmentado,\n\tutilsCuadrado_LimpiaCuadrado,\n\tUC_graficaCuadradoHistoria_menosI,\n\tu_cuadradoGet,\n\tu_cuadradoDeleteById,\n\tu_cuadradoGraficaH,\n};\n","// LINEA:\nconst utilsLinea_graficaLinea = (context, linea) => {\n\tif (linea.visible) {\n\t\tcontext.lineWidth = linea.grosor;\n\t\tcontext.strokeStyle = linea.color;\n\t\tcontext.setLineDash([0, 0]);\n\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(linea.x_ini, linea.y_ini);\n\t\tcontext.lineTo(linea.x_fin, linea.y_fin);\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t}\n};\n\n// LAPIZ - HISORIA:\nconst utilsLinea_graficaLineaHistoria = (context, array) => {\n\tarray.forEach((element) => {\n\t\tutilsLinea_graficaLinea(context, element);\n\t});\n};\n// LINEA: GET\nconst u_lineaGet = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((elem) => {\n\t\tif (elem.visible) {\n\t\t\tlet p = {\n\t\t\t\tx1: elem.x_ini,\n\t\t\t\ty1: elem.y_ini,\n\t\t\t\tx2: elem.x_fin,\n\t\t\t\ty2: elem.y_fin,\n\t\t\t};\n\t\t\tlet a = p.y1 - p.y2;\n\t\t\tlet b = p.x2 - p.x1;\n\t\t\tlet c = p.y1 * (p.x1 - p.x2) - p.x1 * (p.y1 - p.y2);\n\t\t\tlet dnum = a * x + b * y + c;\n\t\t\tdnum < 0 ? (dnum = dnum * -1) : '';\n\t\t\tlet dden = Math.sqrt(a * a + b * b);\n\t\t\tlet d = dnum / dden;\n\t\t\tif (d < 20) resp = elem;\n\t\t}\n\t});\n\treturn resp;\n};\n// LINEA: GRAFICA HISOTORIA\nconst u_lineaGraficaH = (context, array) => {\n\tarray.forEach((element) => {\n\t\tutilsLinea_graficaLinea(context, element);\n\t});\n};\n// LINEA: DELETE POR ID\nconst u_lineaDeleteById = (array, linea_id) => {\n\tarray.forEach((element) => {\n\t\telement.id == linea_id ? (element.visible = false) : '';\n\t});\n\treturn array;\n};\n\nexport {\n\tutilsLinea_graficaLinea,\n\tutilsLinea_graficaLineaHistoria,\n\tu_lineaDeleteById,\n\tu_lineaGraficaH,\n\tu_lineaGet,\n};\n","// LAPIZ: GRAFICA\nconst utilsLapiz_graficaLapiz = (context, lapiz) => {\n\tif (lapiz.visible) {\n\t\tcontext.lineWidth = lapiz.grosor;\n\t\tcontext.strokeStyle = lapiz.color;\n\t\tcontext.setLineDash([0, 0]);\n\t\tcontext.beginPath();\n\t\tlet sw = true;\n\t\tlapiz.historiaLinea.forEach((element) => {\n\t\t\tsw ? context.moveTo(element[0], element[1]) : '';\n\t\t\tsw = false;\n\t\t\tcontext.lineTo(element[2], element[3]);\n\t\t});\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t}\n};\n// LAPIZ: GRAFICA HISORIA:\nconst utilsLapiz_graficaLapizHistoria = (context, array) => {\n\tarray.forEach((element) => utilsLapiz_graficaLapiz(context, element));\n};\n\n// LAPIZ: GET\nconst u_lapizGet = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((lapiz) => {\n\t\tif (lapiz.visible) {\n\t\t\tlet x1 = lapiz.x_min;\n\t\t\tlet y1 = lapiz.y_min;\n\t\t\tlet x2 = lapiz.x_may;\n\t\t\tlet y2 = lapiz.y_may;\n\t\t\tif (x1 - 20 < x && x < x2 + 20 && y1 - 20 < y && y < y2 + 20) {\n\t\t\t\tresp = lapiz;\n\t\t\t}\n\t\t}\n\t});\n\treturn resp;\n};\n// LAPIZ: ELIMINA LAPIZ POR ID\nconst u_lapizDeleteById = (array, lapiz_id) => {\n\tarray.forEach((element) => {\n\t\telement.id == lapiz_id ? (element.visible = false) : '';\n\t});\n};\nconst u_lapizGraficaH = (context, array) => {\n\tarray.forEach((element) => utilsLapiz_graficaLapiz(context, element));\n};\n\nexport {\n\tutilsLapiz_graficaLapiz,\n\tutilsLapiz_graficaLapizHistoria,\n\tu_lapizGet,\n\tu_lapizDeleteById,\n\tu_lapizGraficaH,\n};\n","const Texto = {\n\ttexto: 'Hola mundo', //texto de prueba\n\ttexto_color: 'black', //color externo\n\ttexto_fondo: 'black', //color de relleno\n\ttexto_font: 'bold 20px arial', //estilo de texto\n};\nconst generaRango = (start, stop, step) =>\n\tArray.from({ length: (stop - start) / step + 1 }, (_, i) => start + i * step);\n// ej. let array = generaRango(inicio, fin, salto);\n\nconst uPlano_graficaNumeros = (context, plano) => {\n\tlet arrayX = [];\n\tlet width = plano.x_fin - plano.x_ini;\n\tlet n = parseInt(width / plano.width_cuadricula);\n\tlet x = plano.x_min;\n\tfor (let i = 0; i < n - 1; i++) {\n\t\tarrayX.push(x);\n\t\tx = x + plano.salto;\n\t}\n\tcontext.fillStyle = 'black'; //color de relleno\n\tcontext.font = '11px arial'; //estilo de texto\n\tcontext.beginPath(); //iniciar ruta\n\tlet x1 = plano.x_ini + plano.width_cuadricula - 3;\n\tlet y1 = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula + 11;\n\tarrayX.forEach((x) => {\n\t\tx != 0\n\t\t\t? context.fillText(x, x1, y1) //texto con método stroke\n\t\t\t: context.fillText(x, x1 - 5, y1);\n\t\tx1 = x1 + plano.width_cuadricula;\n\t});\n\tcontext.closePath();\n\n\tlet arrayY = [];\n\tlet heigth = plano.y_fin - plano.y_ini;\n\tn = parseInt(heigth / plano.width_cuadricula);\n\tlet y = plano.y_max;\n\tfor (let i = 0; i < n; i++) {\n\t\tarrayY.push(y);\n\t\ty = y - plano.salto;\n\t}\n\tx1 = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula - 3;\n\ty1 = plano.y_ini + plano.width_cuadricula + 5;\n\n\tcontext.textAlign = 'end';\n\tcontext.beginPath(); //iniciar ruta\n\tarrayY.forEach((y) => {\n\t\tif (y != 0) context.fillText(y, x1, y1); //texto con método stroke\n\t\ty1 = y1 + plano.width_cuadricula;\n\t});\n\tcontext.closePath();\n\n\tcontext.textAlign = 'start';\n\tcontext.beginPath(); //iniciar ruta\n\tx1 = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula + 8;\n\ty1 = plano.y_ini + 12;\n\tcontext.fillText('Y', x1, y1);\n\tx1 = plano.x_fin - 12;\n\ty1 = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula - 10;\n\tcontext.fillText('X', x1, y1);\n\tcontext.closePath();\n};\nconst utilsPlano_graficaCuadricula = (context, plano) => {\n\tcontext.lineWidth = 1; // lineaGrosor\n\t//context.strokeStyle = plano.color_cuadricula; // lineaColor\n\tcontext.strokeStyle = '#d5dbdb'; // lineaColor\n\tcontext.setLineDash([0, 0]);\n\tlet width = plano.x_fin - plano.x_ini;\n\tlet width_cuadricula = plano.width_cuadricula;\n\t// VERTICAL: |\n\tlet nroLineasV = width / width_cuadricula - 1;\n\tlet incV = width_cuadricula;\n\tlet x1 = plano.x_ini + incV;\n\tlet y1 = plano.y_ini;\n\tlet y2 = plano.y_fin;\n\tlet i = 0;\n\tfor (i = 0; i < nroLineasV; i++) {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(x1, y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(x1, y2); // (x_fin, y_ini)\n\t\tcontext.stroke(); // bordeColor = true\n\t\tx1 = x1 + incV;\n\t}\n\t// HORIZONTAL: -\n\tlet height = plano.y_fin - plano.y_ini;\n\tlet nroLineasH = height / width_cuadricula - 1;\n\tlet incH = width_cuadricula;\n\tx1 = plano.x_ini;\n\tlet x2 = plano.x_fin;\n\ty1 = plano.y_ini + incH;\n\n\tfor (i = 0; i < nroLineasH; i++) {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(x1, y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(x2, y1); // (x_fin, y_ini)\n\t\tcontext.stroke(); // bordeColor = true\n\t\ty1 = y1 + incH;\n\t}\n};\n// PLANO SIN EJES:\nconst uPlano_graficaCuadrado = (context, cuadrado) => {\n\tcontext.strokeStyle = cuadrado.bordeColor; // bordeColor\n\tcontext.fillStyle = cuadrado.fondoColor; // fondoColor\n\tcontext.lineWidth = cuadrado.bordeGrosor; // bordeGrosor\n\tcontext.setLineDash([0, 0]); // lineas no segmentadas\n\n\tcontext.beginPath();\n\tcontext.moveTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\n\tcuadrado.fondoEstado ? context.fill() : ''; // fondoColor = true\n\tcuadrado.bordeEstado ? context.stroke() : ''; // bordeColor = true\n\tcontext.closePath();\n};\n// LINEA:\nconst utilsLinea_graficaLinea = (context, linea) => {\n\tcontext.lineWidth = linea.grosor;\n\tcontext.strokeStyle = linea.color;\n\tcontext.setLineDash([0, 0]);\n\n\tcontext.beginPath();\n\tcontext.moveTo(linea.x_ini, linea.y_ini);\n\tcontext.lineTo(linea.x_fin, linea.y_fin);\n\tcontext.stroke();\n\tcontext.closePath();\n};\n// TRIANGULO:\nconst utilsPlano_graficaTriangulo = (context, plano) => {\n\tlet x1 = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula;\n\tlet y1 = plano.y_ini + 2;\n\tlet x2 = x1 - 5;\n\tlet y2 = y1 + 5;\n\tlet x3 = x1 + 5;\n\tlet y3 = y1 + 5;\n\tcontext.beginPath();\n\tcontext.fillStyle = 'black';\n\tcontext.moveTo(x1, y1);\n\tcontext.lineTo(x2, y2);\n\tcontext.lineTo(x3, y3);\n\tcontext.closePath();\n\tcontext.stroke();\n\tcontext.fill();\n\n\tx1 = plano.x_fin - 2;\n\ty1 = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula;\n\tx2 = x1 - 5;\n\ty2 = y1 - 5;\n\tx3 = x1 - 5;\n\ty3 = y1 + 5;\n\tcontext.beginPath();\n\tcontext.fillStyle = 'black';\n\tcontext.moveTo(x1, y1);\n\tcontext.lineTo(x2, y2);\n\tcontext.lineTo(x3, y3);\n\tcontext.closePath();\n\tcontext.stroke();\n\tcontext.fill();\n};\nconst uPlano_graficaCuadradoConEjes = (context, plano) => {\n\tif (plano.visible) {\n\t\tcontext.strokeStyle = plano.bordeColor; // bordeColor\n\t\tcontext.fillStyle = plano.fondoColor; // fondoColor\n\t\tcontext.lineWidth = plano.bordeGrosor; // bordeGrosor\n\t\tcontext.setLineDash([0, 0]); // lineas no segmentadas\n\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(plano.x_ini, plano.y_ini); // (x_ini, y_ini)\n\t\tcontext.lineTo(plano.x_fin, plano.y_ini); // (x_fin, y_ini)\n\t\tcontext.lineTo(plano.x_fin, plano.y_fin); // (x_fin, y_fin)\n\t\tcontext.lineTo(plano.x_ini, plano.y_fin); // (x_ini, y_fin)\n\t\tcontext.lineTo(plano.x_ini, plano.y_ini); // (x_ini, y_ini)\n\n\t\tplano.fondoEstado ? context.fill() : ''; // fondoColor = true\n\t\tplano.bordeEstado ? context.stroke() : ''; // bordeColor = true\n\t\tcontext.closePath();\n\n\t\tutilsPlano_graficaCuadricula(context, plano);\n\t\tlet Linea = {\n\t\t\tid: 0,\n\t\t\tgrosor: 1,\n\t\t\tcolor: 'black',\n\t\t\tx_ini: 0,\n\t\t\ty_ini: 0,\n\t\t\tx_fin: 0,\n\t\t\ty_fin: 0,\n\t\t};\n\t\tLinea.x_ini = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula;\n\t\tLinea.x_fin = Linea.x_ini;\n\t\tLinea.y_ini = plano.y_ini;\n\t\tLinea.y_fin = plano.y_fin;\n\t\tutilsLinea_graficaLinea(context, Linea); // VERTICAL\n\t\tLinea.x_ini = plano.x_ini;\n\t\tLinea.x_fin = plano.x_fin;\n\t\tLinea.y_ini = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula;\n\t\tLinea.y_fin = Linea.y_ini;\n\t\tutilsLinea_graficaLinea(context, Linea); // HORIZONTAL\n\n\t\tutilsPlano_graficaTriangulo(context, plano);\n\t\t// NUMEROS:\n\t\tuPlano_graficaNumeros(context, plano);\n\t}\n};\n\n// GRAFICA PLANOS - HISORIA:\nconst uPlano_graficaCuadradoHistoria = (context, array) => {\n\tarray.forEach((element) => uPlano_graficaCuadrado(context, element));\n};\nconst uPlano_graficaCuadradoHistoriaConEjes = (context, array) => {\n\tarray.forEach((element) => uPlano_graficaCuadradoConEjes(context, element));\n};\n// PLANO: GET\nconst u_planoGet = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((plano) => {\n\t\tif (plano.visible) {\n\t\t\tplano.x_ini < x && x < plano.x_fin && plano.y_ini < y && y < plano.y_fin\n\t\t\t\t? (resp = plano)\n\t\t\t\t: '';\n\t\t}\n\t});\n\treturn resp;\n};\n// PLANO: GRAFICA PLANO\nconst u_planoGraficaH = (context, array) => {\n\tarray.forEach((element) => uPlano_graficaCuadradoConEjes(context, element));\n};\n// PLANO: DELETE POR ID\nconst u_planoDeleteById = (array, id) => {\n\tarray.forEach((element) => {\n\t\telement.id == id ? (element.visible = false) : '';\n\t});\n};\nexport {\n\tuPlano_graficaCuadrado,\n\tuPlano_graficaCuadradoConEjes,\n\tuPlano_graficaCuadradoHistoria,\n\tuPlano_graficaCuadradoHistoriaConEjes,\n\tu_planoGet,\n\tu_planoGraficaH,\n\tu_planoDeleteById,\n};\n","// SELECT CUADRADO DE HISTORIA:\nconst u_getCuadrado = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((elem) => {\n\t\tif (elem.visible) {\n\t\t\telem.x_ini < x && x < elem.x_fin && elem.y_ini < y && y < elem.y_fin\n\t\t\t\t? (resp = elem)\n\t\t\t\t: '';\n\t\t}\n\t});\n\treturn resp;\n};\n// MUEVE CUADRADO SELECT:\nconst u_moverCuadrado = (cuadrado, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tcuadrado.x_ini = cuadrado.x_ini + recorrido_x;\n\tcuadrado.y_ini = cuadrado.y_ini + recorrido_y;\n\tcuadrado.x_fin = cuadrado.x_fin + recorrido_x;\n\tcuadrado.y_fin = cuadrado.y_fin + recorrido_y;\n\treturn cuadrado;\n};\n// UPDATE ZISE CUADRADO SELECT:\nconst u_updateZiseCuadrado = (cuadrado, mouse) => {\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tswitch (mouse.cuadrado_pto) {\n\t\tcase 'top':\n\t\t\tcuadrado.y_ini = cuadrado.y_ini + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'right':\n\t\t\tcuadrado.x_fin = cuadrado.x_fin + recorrido_x;\n\t\t\tbreak;\n\t\tcase 'button':\n\t\t\tcuadrado.y_fin = cuadrado.y_fin + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'lefth':\n\t\t\tcuadrado.x_ini = cuadrado.x_ini + recorrido_x;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log('ocurrio un error');\n\t\t\tbreak;\n\t}\n\treturn cuadrado;\n};\n// CUADRADOS PEQUEÑOS PAR UPDATE DEL CUADRADO:\nconst get_pts_redimencion = (cuadrado) => {\n\tlet width_p = 10;\n\tlet width_c = 2;\n\n\tlet x_ini = cuadrado.x_ini - width_c;\n\tlet y_ini = cuadrado.y_ini - width_c;\n\tlet x_fin = cuadrado.x_fin + width_c;\n\tlet y_fin = cuadrado.y_fin + width_c;\n\n\tlet vectorPuntosCuadrado = [\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_ini - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_ini + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_fin - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_fin + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_fin - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_fin + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_ini + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t];\n\treturn vectorPuntosCuadrado;\n};\n// CUADRADO SEGMENTADO:\nconst u_cuadradoSegmentado = (context, cuadrado) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 2; // borde grosor de linea\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet x_ini = cuadrado.x_ini - 2;\n\tlet y_ini = cuadrado.y_ini - 2;\n\tlet x_fin = cuadrado.x_fin + 2;\n\tlet y_fin = cuadrado.y_fin + 2;\n\n\tcontext.beginPath();\n\tcontext.moveTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(x_fin, y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(x_fin, y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(x_ini, y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.stroke();\n\tcontext.closePath();\n\n\tcontext.fillStyle = 'red'; // borde Color\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet array = get_pts_redimencion(cuadrado);\n\tarray.forEach((elem) => {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y1); // (x_fin, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y2); // (x_fin, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y2); // (x_ini, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.fill();\n\t\tcontext.closePath();\n\t});\n};\n\n// SELECT LINEA DE HISTORIA:\nconst u_getLinea = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((elem) => {\n\t\tif (elem.visible) {\n\t\t\tlet p = {\n\t\t\t\tx1: elem.x_ini,\n\t\t\t\ty1: elem.y_ini,\n\t\t\t\tx2: elem.x_fin,\n\t\t\t\ty2: elem.y_fin,\n\t\t\t};\n\t\t\tlet a = p.y1 - p.y2;\n\t\t\tlet b = p.x2 - p.x1;\n\t\t\tlet c = p.y1 * (p.x1 - p.x2) - p.x1 * (p.y1 - p.y2);\n\t\t\tlet dnum = a * x + b * y + c;\n\t\t\tdnum < 0 ? (dnum = dnum * -1) : '';\n\t\t\tlet dden = Math.sqrt(a * a + b * b);\n\t\t\tlet d = dnum / dden;\n\t\t\tif (d < 20) resp = elem;\n\t\t}\n\t});\n\treturn resp;\n};\n// CUADRADOS PARA UPDATE LINEA:\nconst get_pts_redimencion_linea = (linea) => {\n\tlet width_p = 10;\n\n\tlet x_ini = linea.x_ini;\n\tlet y_ini = linea.y_ini;\n\tlet x_fin = linea.x_fin;\n\tlet y_fin = linea.y_fin;\n\n\tlet vectorPuntosLinea = [\n\t\t{\n\t\t\tx1: x_ini - width_p,\n\t\t\ty1: y_ini - width_p,\n\t\t\tx2: x_ini + width_p,\n\t\t\ty2: y_ini + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_fin - width_p,\n\t\t\ty1: y_fin - width_p,\n\t\t\tx2: x_fin + width_p,\n\t\t\ty2: y_fin + width_p,\n\t\t},\n\t];\n\treturn vectorPuntosLinea;\n};\n// LINEA SEGMENTADO:\nconst u_lineaSegmentado = (context, linea) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 1; // borde grosor de linea\n\tcontext.setLineDash([10, 4]); // lineas segmentadas\n\n\tlet x_ini = linea.x_ini;\n\tlet y_ini = linea.y_ini;\n\tlet x_fin = linea.x_fin;\n\tlet y_fin = linea.y_fin;\n\n\tlet inc = 20;\n\n\tcontext.beginPath();\n\tcontext.moveTo(x_ini - inc, y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(x_ini + inc, y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(x_fin + inc, y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(x_fin - inc, y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(x_ini - inc, y_ini); // (x_ini, y_ini)\n\tcontext.stroke();\n\tcontext.closePath();\n\n\tcontext.fillStyle = 'red'; // borde Color\n\tcontext.setLineDash([10, 4]); // lineas segmentadas\n\n\tlet array = get_pts_redimencion_linea(linea);\n\tarray.forEach((elem) => {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y1); // (x_fin, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y2); // (x_fin, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y2); // (x_ini, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.fill();\n\t\tcontext.closePath();\n\t});\n};\n// MUEVE LINEA SELECT:\nconst u_moverLinea = (linea, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tlinea.x_ini = linea.x_ini + recorrido_x;\n\tlinea.y_ini = linea.y_ini + recorrido_y;\n\tlinea.x_fin = linea.x_fin + recorrido_x;\n\tlinea.y_fin = linea.y_fin + recorrido_y;\n\treturn linea;\n};\n// UPDATE ZISE LINEA SELECT:\nconst u_updateZiseLinea = (linea, mouse) => {\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tswitch (mouse.linea_pto) {\n\t\tcase 'ini':\n\t\t\tlinea.x_ini = linea.x_ini + recorrido_x;\n\t\t\tlinea.y_ini = linea.y_ini + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'fin':\n\t\t\tlinea.x_fin = linea.x_fin + recorrido_x;\n\t\t\tlinea.y_fin = linea.y_fin + recorrido_y;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log('ocurrio un error');\n\t\t\tbreak;\n\t}\n\treturn linea;\n};\n\n// PLANO:\nconst u_getPlano = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((plano) => {\n\t\tif (plano.visible) {\n\t\t\tplano.x_ini < x && x < plano.x_fin && plano.y_ini < y && y < plano.y_fin\n\t\t\t\t? (resp = plano)\n\t\t\t\t: '';\n\t\t}\n\t});\n\treturn resp;\n};\n// PLANO SEGMENTADO:\nconst u_planoSegmentado = (context, cuadrado) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 2; // borde grosor de linea\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet x_ini = cuadrado.x_ini - 2;\n\tlet y_ini = cuadrado.y_ini - 2;\n\tlet x_fin = cuadrado.x_fin + 2;\n\tlet y_fin = cuadrado.y_fin + 2;\n\n\tcontext.beginPath();\n\tcontext.moveTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(x_fin, y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(x_fin, y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(x_ini, y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.stroke();\n\tcontext.closePath();\n\n\tcontext.fillStyle = 'red'; // borde Color\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet array = get_pts_redimencion(cuadrado);\n\tarray.forEach((elem) => {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y1); // (x_fin, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y2); // (x_fin, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y2); // (x_ini, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.fill();\n\t\tcontext.closePath();\n\t});\n};\n// MUEVE PLANO SELECT:\nconst u_moverPlano = (plano, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tplano.x_ini = plano.x_ini + recorrido_x;\n\tplano.y_ini = plano.y_ini + recorrido_y;\n\tplano.x_fin = plano.x_fin + recorrido_x;\n\tplano.y_fin = plano.y_fin + recorrido_y;\n\treturn plano;\n};\n// CUADRADOS PEQUEÑOS PAR UPDATE DEL PLANO:\nconst get_pts_redimencion_plano = (cuadrado) => {\n\tlet width_p = 10;\n\tlet width_c = 2;\n\n\tlet x_ini = cuadrado.x_ini - width_c;\n\tlet y_ini = cuadrado.y_ini - width_c;\n\tlet x_fin = cuadrado.x_fin + width_c;\n\tlet y_fin = cuadrado.y_fin + width_c;\n\n\tlet vectorPuntosCuadrado = [\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_ini - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_ini + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_fin - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_fin + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_fin - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_fin + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_ini + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t];\n\treturn vectorPuntosCuadrado;\n};\n// UPDATE ZISE CUADRADO SELECT:\nconst u_updateZisePlano = (plano, mouse) => {\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tswitch (mouse.plano_pto) {\n\t\tcase 'top':\n\t\t\tplano.y_ini = plano.y_ini + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'right':\n\t\t\tplano.x_fin = plano.x_fin + recorrido_x;\n\t\t\tbreak;\n\t\tcase 'button':\n\t\t\tplano.y_fin = plano.y_fin + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'lefth':\n\t\t\tplano.x_ini = plano.x_ini + recorrido_x;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log('ocurrio un error');\n\t\t\tbreak;\n\t}\n\treturn plano;\n};\nexport {\n\tu_getCuadrado,\n\tu_moverCuadrado,\n\tu_cuadradoSegmentado,\n\tget_pts_redimencion,\n\tu_updateZiseCuadrado,\n\tu_getLinea,\n\tu_lineaSegmentado,\n\tu_moverLinea,\n\tget_pts_redimencion_linea,\n\tu_updateZiseLinea,\n\tu_getPlano,\n\tu_planoSegmentado,\n\tu_moverPlano,\n\tget_pts_redimencion_plano,\n\tu_updateZisePlano,\n};\n","const u_getLapiz = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((lapiz) => {\n\t\tif (lapiz.visible) {\n\t\t\tlet x1 = lapiz.x_min;\n\t\t\tlet y1 = lapiz.y_min;\n\t\t\tlet x2 = lapiz.x_may;\n\t\t\tlet y2 = lapiz.y_may;\n\t\t\tif (x1 - 20 < x && x < x2 + 20 && y1 - 20 < y && y < y2 + 20) {\n\t\t\t\tresp = lapiz;\n\t\t\t}\n\t\t}\n\t});\n\treturn resp;\n};\n// CUADRADO SEGMENTADO:\nconst u_lapizSegmentado = (context, lapiz) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 1; // borde grosor de linea\n\tcontext.setLineDash([10, 4]); // lineas segmentadas\n\n\tcontext.beginPath();\n\tcontext.moveTo(lapiz.x_min - 20, lapiz.y_min - 20); // (x_ini, y_ini)\n\tcontext.lineTo(lapiz.x_may + 20, lapiz.y_min - 20); // (x_fin, y_ini)\n\tcontext.lineTo(lapiz.x_may + 20, lapiz.y_may + 20); // (x_fin, y_fin)\n\tcontext.lineTo(lapiz.x_min - 20, lapiz.y_may + 20); // (x_ini, y_fin)\n\tcontext.lineTo(lapiz.x_min - 20, lapiz.y_min - 20); // (x_ini, y_ini)\n\tcontext.stroke();\n\tcontext.closePath();\n};\n// MUEVE LAPIZ SELECT:\nconst u_moverLapiz = (lapiz, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tlapiz.historiaLinea.forEach((linea) => {\n\t\tlinea[0] = linea[0] + recorrido_x;\n\t\tlinea[1] = linea[1] + recorrido_y;\n\t\tlinea[2] = linea[2] + recorrido_x;\n\t\tlinea[3] = linea[3] + recorrido_y;\n\t});\n\tlapiz.x_min = lapiz.x_min + recorrido_x;\n\tlapiz.x_may = lapiz.x_may + recorrido_x;\n\tlapiz.y_min = lapiz.y_min + recorrido_y;\n\tlapiz.y_may = lapiz.y_may + recorrido_y;\n\treturn lapiz;\n};\n\nexport { u_getLapiz, u_lapizSegmentado, u_moverLapiz };\n","import { useContext, useEffect } from 'react';\n\n// CONTEXT:\nimport AppContextMover from '../context/AppContextMover';\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport { utilsCuadrado_graficaCuadradoHistoria } from '../utils/UtilsCuadrado';\nimport { utilsLinea_graficaLineaHistoria } from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\nimport { uPlano_graficaCuadradoHistoriaConEjes } from '../utils/UtilsPlano';\nimport {\n\tu_getCuadrado,\n\tu_moverCuadrado,\n\tu_cuadradoSegmentado,\n\tget_pts_redimencion,\n\tu_updateZiseCuadrado,\n\tu_getLinea, // linea\n\tu_lineaSegmentado,\n\tu_moverLinea,\n\tget_pts_redimencion_linea,\n\tu_updateZiseLinea,\n\tu_getPlano,\n\tu_planoSegmentado,\n\tu_moverPlano,\n\tget_pts_redimencion_plano,\n\tu_updateZisePlano,\n} from '../utils/UtilsMover';\nimport {\n\tu_getLapiz,\n\tu_lapizSegmentado,\n\tu_moverLapiz,\n} from '../utils/UtilsMoverLapiz';\n\nconst PaintMover = (id_canvas) => {\n\t// useContext\n\tconst { stateMover } = useContext(AppContextMover);\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\n\t// LOGICA:\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tuPlano_graficaCuadradoHistoriaConEjes(context, statePlano.historiaPlano); // plano cartesiano\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t};\n\tlet canvas = '';\n\tlet context = '';\n\tlet cuadradoSelect = {};\n\tlet lineaSelect = {};\n\tlet lapizSelect = {};\n\tlet planoSelect = {};\n\n\tconst mouse = {\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t\tclick: false,\n\t\t// CUADRADO\n\t\tmover_cuadrado: false,\n\t\tseleccionar_cuadrado_pts: false,\n\t\tcuadrado_punto_mover: false,\n\t\tcuadrado_pto: '',\n\t\t// LINEA\n\t\tmover_linea: false,\n\t\tseleccionar_linea_pts: false,\n\t\tlinea_punto_mover: false,\n\t\tlinea_pto: '',\n\t\t// LAPIZ\n\t\tactive: true,\n\t\tmover_lapiz: false,\n\t\t// PLANO:\n\t\tplano_mover: false,\n\t\tplano_seleccionar_pts: false,\n\t\tplano_pto_mover: false,\n\t\tplano_pto: '',\n\t};\n\tconst canvasMoverDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\tconst x_real = x - canvasMoverDatos.left;\n\t\tconst y_real = y - canvasMoverDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\t};\n\tconst busca_cuadrado_ptoClick = (x, y, array) => {\n\t\tlet resp = '';\n\t\tif (\n\t\t\tarray[0].x1 < x &&\n\t\t\tx < array[0].x2 &&\n\t\t\tarray[0].y1 < y &&\n\t\t\ty < array[0].y2\n\t\t)\n\t\t\tresp = 'top';\n\t\telse if (\n\t\t\tarray[1].x1 < x &&\n\t\t\tx < array[1].x2 &&\n\t\t\tarray[1].y1 < y &&\n\t\t\ty < array[1].y2\n\t\t)\n\t\t\tresp = 'right';\n\t\telse if (\n\t\t\tarray[2].x1 < x &&\n\t\t\tx < array[2].x2 &&\n\t\t\tarray[2].y1 < y &&\n\t\t\ty < array[2].y2\n\t\t)\n\t\t\tresp = 'button';\n\t\telse if (\n\t\t\tarray[3].x1 < x &&\n\t\t\tx < array[3].x2 &&\n\t\t\tarray[3].y1 < y &&\n\t\t\ty < array[3].y2\n\t\t)\n\t\t\tresp = 'lefth';\n\t\treturn resp;\n\t};\n\tconst busca_linea_ptoClick = (x, y, array) => {\n\t\tlet resp = '';\n\t\tif (\n\t\t\tarray[0].x1 < x &&\n\t\t\tx < array[0].x2 &&\n\t\t\tarray[0].y1 < y &&\n\t\t\ty < array[0].y2\n\t\t)\n\t\t\tresp = 'ini';\n\t\telse if (\n\t\t\tarray[1].x1 < x &&\n\t\t\tx < array[1].x2 &&\n\t\t\tarray[1].y1 < y &&\n\t\t\ty < array[1].y2\n\t\t)\n\t\t\tresp = 'fin';\n\t\treturn resp;\n\t};\n\tconst clickSobreLapiz = () => {\n\t\tlapizSelect || cuadradoSelect || lineaSelect ? paint() : '';\n\t\tlapizSelect = u_getLapiz(\n\t\t\tstateLapiz.historiaLapiz,\n\t\t\tmouse.pos.x,\n\t\t\tmouse.pos.y\n\t\t);\n\t\tif (lapizSelect) {\n\t\t\tu_lapizSegmentado(context, lapizSelect);\n\t\t\tmouse.mover_lapiz = true;\n\t\t}\n\t};\n\t// 1:\n\tconst mouseDownMover = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\n\t\t// LAPIZ:\n\t\tclickSobreLapiz();\n\t\tif (!lapizSelect) {\n\t\t\t// no se hizo click sobre el lapiz.\n\t\t\t// LINEA:\n\t\t\tif (mouse.seleccionar_linea_pts) {\n\t\t\t\t// selecciono previamente una linea\n\t\t\t\tlet arrayPts = get_pts_redimencion_linea(lineaSelect);\n\t\t\t\tmouse.linea_pto = busca_linea_ptoClick(\n\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\tmouse.pos.y,\n\t\t\t\t\tarrayPts\n\t\t\t\t);\n\t\t\t\tif (mouse.linea_pto != '') {\n\t\t\t\t\t// hizo click sobre uno de los puntos de la linea\n\t\t\t\t\tmouse.linea_punto_mover = true;\n\t\t\t\t\tmouse.mover_linea = false;\n\t\t\t\t} else {\n\t\t\t\t\t// no hizo click sobre los puntos de la linea\n\t\t\t\t\tmouse.linea_punto_mover = false;\n\t\t\t\t\tmouse.mover_linea = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!mouse.linea_punto_mover) {\n\t\t\t\t// no tiene seleccionado una linea previamente\n\t\t\t\tlineaSelect = u_getLinea(\n\t\t\t\t\tstateLinea.historiaLinea,\n\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\tmouse.pos.y\n\t\t\t\t);\n\t\t\t\tif (lineaSelect) {\n\t\t\t\t\t// selecciono una linea\n\t\t\t\t\tmouse.seleccionar_linea_pts = true;\n\t\t\t\t\tmouse.mover_linea = true;\n\t\t\t\t\tmouse.linea_punto_mover = false;\n\t\t\t\t\tu_lineaSegmentado(context, lineaSelect);\n\t\t\t\t} else {\n\t\t\t\t\t// no selecciono una linea\n\t\t\t\t\tmouse.seleccionar_linea_pts = false;\n\t\t\t\t\tmouse.mover_linea = false;\n\t\t\t\t\tmouse.linea_punto_mover = false;\n\t\t\t\t\t//paint();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!lineaSelect) {\n\t\t\t\t// no hizo click sobre una linea\n\t\t\t\t// CUADRADO:\n\t\t\t\tif (mouse.seleccionar_cuadrado_pts) {\n\t\t\t\t\t// ya tiene seleccionado un cuadrado previamente\n\t\t\t\t\tlet arrayPts = get_pts_redimencion(cuadradoSelect);\n\t\t\t\t\tmouse.cuadrado_pto = busca_cuadrado_ptoClick(\n\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\tmouse.pos.y,\n\t\t\t\t\t\tarrayPts\n\t\t\t\t\t);\n\t\t\t\t\tif (mouse.cuadrado_pto != '') {\n\t\t\t\t\t\tconsole.log(mouse.cuadrado_pto);\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = true; // se movera el lado seleccionado\n\t\t\t\t\t\tmouse.mover_cuadrado = false; // no se movera el cuadrado\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = false; // move_size\n\t\t\t\t\t\tmouse.mover_cuadrado = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!mouse.cuadrado_punto_mover) {\n\t\t\t\t\t// no tiene seleccionando un cuadrado aun\n\t\t\t\t\tcuadradoSelect = u_getCuadrado(\n\t\t\t\t\t\tstateCuadrado.historiaCuadrado,\n\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\tmouse.pos.y\n\t\t\t\t\t);\n\t\t\t\t\tif (cuadradoSelect) {\n\t\t\t\t\t\t// encontro un cuadrado donde hizo click\n\t\t\t\t\t\tmouse.seleccionar_cuadrado_pts = true;\n\t\t\t\t\t\tmouse.mover_cuadrado = true;\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = false;\n\t\t\t\t\t\tu_cuadradoSegmentado(context, cuadradoSelect);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// no encontro un cuadrado donde hizo click\n\t\t\t\t\t\tmouse.seleccionar_cuadrado_pts = false;\n\t\t\t\t\t\tmouse.mover_cuadrado = false;\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = false;\n\t\t\t\t\t\t//paint();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!cuadradoSelect) {\n\t\t\t\t\t// no hizo click sobre un cuadrado.\n\t\t\t\t\t// PLANO:\n\t\t\t\t\tif (mouse.plano_seleccionar_pts) {\n\t\t\t\t\t\tconsole.log('selection plano preview');\n\t\t\t\t\t\t// ya tiene seleccionado un plano previamente\n\t\t\t\t\t\tlet arrayPts = get_pts_redimencion_plano(planoSelect);\n\t\t\t\t\t\tmouse.plano_pto = busca_cuadrado_ptoClick(\n\t\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\t\tmouse.pos.y,\n\t\t\t\t\t\t\tarrayPts\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (mouse.plano_pto != '') {\n\t\t\t\t\t\t\tconsole.log(mouse.plano_pto);\n\t\t\t\t\t\t\tmouse.plano_pto_mover = true; // se movera el lado seleccionado\n\t\t\t\t\t\t\tmouse.plano_mover = false; // no se movera el cuadrado\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmouse.plano_pto_mover = false; // move_size\n\t\t\t\t\t\t\tmouse.plano_mover = false;\n\t\t\t\t\t\t\tmouse.plano_seleccionar_pts = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!mouse.plano_seleccionar_pts) {\n\t\t\t\t\t\t// no tiene seleccionado un plano aun\n\t\t\t\t\t\tplanoSelect = u_getPlano(\n\t\t\t\t\t\t\tstatePlano.historiaPlano,\n\t\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\t\tmouse.pos.y\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (planoSelect) {\n\t\t\t\t\t\t\tconsole.log('selection plano');\n\t\t\t\t\t\t\t// hizo click sobre un plano\n\t\t\t\t\t\t\tmouse.plano_seleccionar_pts = true;\n\t\t\t\t\t\t\tmouse.plano_mover = true;\n\t\t\t\t\t\t\tmouse.plano_pto_mover = false;\n\t\t\t\t\t\t\tu_planoSegmentado(context, planoSelect);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!lapizSelect && !lineaSelect && !cuadradoSelect && !planoSelect) {\n\t\t\tconsole.log('paint');\n\t\t\tpaint();\n\t\t}\n\t};\n\t// 2:\n\tconst mouseMoveMover = (e) => {\n\t\tif (mouse.click) {\n\t\t\tif (mouse.mover_cuadrado) {\n\t\t\t\t// CUADRADO:\n\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\tcuadradoSelect = u_moverCuadrado(cuadradoSelect, mouse);\n\t\t\t\tpaint();\n\t\t\t\tu_cuadradoSegmentado(context, cuadradoSelect);\n\t\t\t} else {\n\t\t\t\t// CUADRADO PTOS:\n\t\t\t\tif (mouse.cuadrado_punto_mover) {\n\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\tcuadradoSelect = u_updateZiseCuadrado(cuadradoSelect, mouse);\n\t\t\t\t\tpaint();\n\t\t\t\t\tu_cuadradoSegmentado(context, cuadradoSelect);\n\t\t\t\t} else {\n\t\t\t\t\t// LINEA:\n\t\t\t\t\tif (mouse.mover_linea) {\n\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\tlineaSelect = u_moverLinea(lineaSelect, mouse);\n\t\t\t\t\t\tpaint();\n\t\t\t\t\t\tu_lineaSegmentado(context, lineaSelect);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// LINEA PTOS:\n\t\t\t\t\t\tif (mouse.linea_punto_mover) {\n\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\tlineaSelect = u_updateZiseLinea(lineaSelect, mouse);\n\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\tu_lineaSegmentado(context, lineaSelect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// LAPIZ:\n\t\t\t\t\t\t\tif (mouse.mover_lapiz) {\n\t\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\t\tlapizSelect = u_moverLapiz(lapizSelect, mouse);\n\t\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\t\tu_lapizSegmentado(context, lapizSelect);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// PLANO:\n\t\t\t\t\t\t\t\tif (mouse.plano_mover) {\n\t\t\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\t\t\tplanoSelect = u_moverPlano(planoSelect, mouse);\n\t\t\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\t\t\tu_planoSegmentado(context, planoSelect);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// PLANO PTOS:\n\t\t\t\t\t\t\t\t\tif (mouse.plano_pto_mover) {\n\t\t\t\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\t\t\t\tplanoSelect = u_updateZisePlano(planoSelect, mouse);\n\t\t\t\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\t\t\t\tu_planoSegmentado(context, planoSelect);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t// 3:\n\tconst mouseUpMover = (e) => {\n\t\tif (mouse.cuadrado_punto_mover) {\n\t\t\tif (cuadradoSelect.x_fin < cuadradoSelect.x_ini) {\n\t\t\t\tlet aux = cuadradoSelect.x_fin;\n\t\t\t\tcuadradoSelect.x_fin = cuadradoSelect.x_ini;\n\t\t\t\tcuadradoSelect.x_ini = aux;\n\t\t\t}\n\t\t\tif (cuadradoSelect.y_fin < cuadradoSelect.y_ini) {\n\t\t\t\tlet aux = cuadradoSelect.y_fin;\n\t\t\t\tcuadradoSelect.y_fin = cuadradoSelect.y_ini;\n\t\t\t\tcuadradoSelect.y_ini = aux;\n\t\t\t}\n\t\t}\n\t\tmouse.click = false;\n\t\t// CUADRADO:\n\t\tmouse.mover_cuadrado = false;\n\t\tmouse.cuadrado_punto_mover = false;\n\t\tmouse.cuadrado_pto = '';\n\t\t// LINEA:\n\t\tmouse.mover_linea = false;\n\t\tmouse.linea_punto_mover = false;\n\t\tmouse.linea_pto = '';\n\t\t// LAPIZ:\n\t\tmouse.mover_lapiz = false;\n\t\t// PLANO:\n\t\tmouse.plano_mover = false;\n\t\tmouse.plano_pto_mover = false;\n\t\tmouse.plano_pto = '';\n\t};\n\tconst update_canvasMoverDatos = () => {\n\t\tcanvasMoverDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasMoverDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasMoverDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasMoverDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (stateMover.active) {\n\t\t\tupdate_canvasMoverDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownMover);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveMover);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpMover);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownMover);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveMover);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpMover);\n\t\t};\n\t}, [stateCuadrado, stateLinea]);\n\n\t// RENDER:\n\t// return console.log('paint mover');\n};\n\nexport default PaintMover;\n","import React, { useEffect, useContext } from 'react';\n\n// CONTEXT:\nimport AppContextBorrador from '../context/AppContextBorrador';\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\n\n// UTILS:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport {\n\tu_cuadradoGet,\n\tu_cuadradoDeleteById,\n\tu_cuadradoGraficaH,\n} from '../utils/UtilsCuadrado';\nimport {\n\tu_lapizGet,\n\tu_lapizDeleteById,\n\tu_lapizGraficaH,\n} from '../utils/UtilsLapiz';\nimport {\n\tu_lineaGet,\n\tu_lineaDeleteById,\n\tu_lineaGraficaH,\n} from '../utils/UtilsLinea';\nimport {\n\tu_planoGet,\n\tu_planoDeleteById,\n\tu_planoGraficaH,\n} from '../utils/UtilsPlano';\n\nconst PaintBorrador = (id_canvas) => {\n\t// useContext:\n\tconst { stateBorrador } = useContext(AppContextBorrador);\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { statePlano } = useContext(AppContextPlano);\n\n\t// LOGICA:\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tu_cuadradoGraficaH(context, stateCuadrado.historiaCuadrado);\n\t\tu_lapizGraficaH(context, stateLapiz.historiaLapiz);\n\t\tu_lineaGraficaH(context, stateLinea.historiaLinea);\n\t\tu_planoGraficaH(context, statePlano.historiaPlano);\n\t};\n\tlet canvas = '';\n\tlet context = '';\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst capturaPosPosprev = (e) => {\n\t\tlet x = e.clientX;\n\t\tlet y = e.clientY;\n\t\tlet x_real = x - canvasBorradorDatos.left;\n\t\tlet y_real = y - canvasBorradorDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\t};\n\tconst cuadradoDelete = () => {\n\t\tlet res = false;\n\t\tlet array = stateCuadrado.historiaCuadrado;\n\t\tlet cuadrado = u_cuadradoGet(array, mouse.pos.x, mouse.pos.y);\n\t\tif (cuadrado) {\n\t\t\tstateCuadrado.historiaCuadrado = u_cuadradoDeleteById(array, cuadrado.id);\n\t\t\t// paint();\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst lapizDelete = () => {\n\t\tlet res = false;\n\t\tlet array = stateLapiz.historiaLapiz;\n\t\tlet lapiz = u_lapizGet(array, mouse.pos.x, mouse.pos.y);\n\t\tif (lapiz) {\n\t\t\tu_lapizDeleteById(array, lapiz.id);\n\t\t\t// paint();\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst lineaDelete = () => {\n\t\tlet res = false;\n\t\tlet array = stateLinea.historiaLinea;\n\t\tlet linea = u_lineaGet(array, mouse.pos.x, mouse.pos.y);\n\t\tif (linea) {\n\t\t\tu_lineaDeleteById(array, linea.id);\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst planoDelete = () => {\n\t\tlet res = false;\n\t\tlet array = statePlano.historiaPlano;\n\t\tlet plano = u_planoGet(array, mouse.pos.x, mouse.pos.y);\n\t\tif (plano) {\n\t\t\tu_planoDeleteById(array, plano.id);\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst mouseDownBorrador = (e) => {\n\t\tconsole.log('click borrador');\n\t\tcapturaPosPosprev(e);\n\t\t// LAPIZ:\n\t\tlet res = lapizDelete();\n\t\tif (res) {\n\t\t\tpaint();\n\t\t} else {\n\t\t\t// LINEA:\n\t\t\tres = lineaDelete();\n\t\t\tif (res) {\n\t\t\t\tpaint();\n\t\t\t} else {\n\t\t\t\t// CUADRADO\n\t\t\t\tres = cuadradoDelete();\n\t\t\t\tif (res) {\n\t\t\t\t\tpaint();\n\t\t\t\t} else {\n\t\t\t\t\t// plano\n\t\t\t\t\tres = planoDelete();\n\t\t\t\t\tif (res) {\n\t\t\t\t\t\tpaint();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tconst canvasBorradorDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst update_canvasBorradorDatos = () => {\n\t\tcanvasBorradorDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasBorradorDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasBorradorDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasBorradorDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (stateBorrador.active) {\n\t\t\tupdate_canvasBorradorDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownBorrador);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownBorrador);\n\t\t};\n\t}, [stateBorrador]);\n\t// RENDER:\n\t// return console.log('hola soy el borrador');\n};\n\nexport default PaintBorrador;\n","import React, { useState, useEffect, useContext } from 'react';\n\n// context:\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextCanvas from '../context/AppContextCanvas';\n\n// styles:\nimport '../styles/Canvas.scss';\n\n// components:\nimport PaintMover from './PaintMover';\nimport PainLapiz from '../components/PaintLapiz';\nimport PaintBorrador from './PaintBorrador';\nimport PaintLinea from './PaintLinea';\nimport PaintCuadrado from './PaintCuadrado';\nimport PaintCuadricula from './PaintCuadricula';\nimport PaintPlano from './PaintPlano';\n\nconst Canvas = () => {\n\t// useContext:\n\tconst { update_width_height } = useContext(AppContextCanvas);\n\n\t// useState:\n\tconst [canvasWidth, setCanvasWidth] = useState(window.innerWidth - 75);\n\tconst [canvasHeight, setCanvasHeight] = useState(window.innerHeight - 90);\n\n\t// LOGICA:\n\t// update_width_height;\n\n\tPaintCuadricula('canvas-1');\n\tPaintMover('canvas-1');\n\tPainLapiz('canvas-1');\n\tPaintBorrador('canvas-1');\n\tPaintCuadrado('canvas-1');\n\tPaintLinea('canvas-1');\n\tPaintPlano('canvas-1');\n\n\tconst updateCanvasWidth = () => setCanvasWidth(window.innerWidth - 75);\n\tconst updateCanvasHeight = () => setCanvasHeight(window.innerHeight - 90);\n\t// LOGICA END.\n\n\t// useEfect:\n\tuseEffect(() => {\n\t\t// redimencionamos el canvas la primera vez:\n\t\twindow.addEventListener('resize', updateCanvasWidth);\n\t\twindow.addEventListener('resize', updateCanvasHeight);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', updateCanvasWidth);\n\t\t\twindow.removeEventListener('resize', updateCanvasHeight);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tupdate_width_height(canvasWidth, canvasHeight);\n\t}, [canvasWidth, canvasHeight]);\n\n\treturn (\n\t\t<canvas\n\t\t\tclassName=\"canvas\"\n\t\t\twidth={canvasWidth}\n\t\t\theight={canvasHeight}\n\t\t\tid=\"canvas-1\"\n\t\t></canvas>\n\t);\n};\n\nexport default Canvas;\n","import { useEffect, useContext } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport { utilsCuadrado_graficaCuadradoHistoria } from '../utils/UtilsCuadrado';\nimport { utilsLinea_graficaLineaHistoria } from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\nimport { uPlano_graficaCuadradoHistoriaConEjes } from '../utils/UtilsPlano';\n\nconst PaintCuadricula = (canvasId) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\n\t// LOGICA:\n\tlet context = '';\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas);\n\t\tuPlano_graficaCuadradoHistoriaConEjes(context, statePlano.historiaPlano);\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz);\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcontext = document.getElementById(canvasId).getContext('2d');\n\t\tpaint();\n\t}, [\n\t\tstateCanvas.width,\n\t\tstateCanvas.height,\n\t\tstateCanvas.tipoCuadricula,\n\t\tstateCanvas.cuadriculaWidth,\n\t]);\n};\n//const saludar = () => console.log('hola daniel');\n\nexport default PaintCuadricula;\n","import React, { useEffect, useContext } from 'react';\n\n// useContext:\nimport AppContextLapiz from '../context/AppContextLapiz';\n\nconst PaintLapiz = (id_canvas) => {\n\t// useContext:\n\tconst { stateLapiz, add_historiaLapizId } = useContext(AppContextLapiz);\n\n\t// LOGICA:\n\tlet canvas = '';\n\tlet context = '';\n\tconst lapizNew = {\n\t\tid: stateLapiz.id,\n\t\tvisible: true,\n\t\tgrosor: stateLapiz.grosor,\n\t\tcolor: stateLapiz.color,\n\t\thistoriaLinea: [],\n\t\tx_min: 2000,\n\t\tx_may: 0,\n\t\ty_min: 2000,\n\t\ty_may: 0,\n\t};\n\tconst lapizLinea = {\n\t\tgrosor: stateLapiz.grosor,\n\t\tcolor: stateLapiz.color,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\t};\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst canvasLapizDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\n\t\tconst x_real = x - canvasLapizDatos.left;\n\t\tconst y_real = y - canvasLapizDatos.top;\n\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\n\t\tlapizLinea.x_ini = mouse.pos_prev.x;\n\t\tlapizLinea.y_ini = mouse.pos_prev.y;\n\t\tlapizLinea.x_fin = mouse.pos.x;\n\t\tlapizLinea.y_fin = mouse.pos.y;\n\t};\n\n\tconst graficaLinea = (linea) => {\n\t\tcontext.strokeStyle = linea.color;\n\t\tcontext.lineWidth = linea.grosor;\n\t\tcontext.setLineDash([0, 0]);\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(linea.x_ini, linea.y_ini);\n\t\tcontext.lineTo(linea.x_fin, linea.y_fin);\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t\t// busca cotas minimas X:\n\t\tlinea.x_ini < lapizNew.x_min ? (lapizNew.x_min = linea.x_ini) : '';\n\t\tlinea.x_fin < lapizNew.x_min ? (lapizNew.x_min = linea.x_fin) : '';\n\t\t// busca cotas maximas X:\n\t\tlinea.x_ini > lapizNew.x_may ? (lapizNew.x_may = linea.x_ini) : '';\n\t\tlinea.x_fin > lapizNew.x_may ? (lapizNew.x_may = linea.x_fin) : '';\n\t\t// busca cotas minimas Y:\n\t\tlinea.y_ini < lapizNew.y_min ? (lapizNew.y_min = linea.y_ini) : '';\n\t\tlinea.y_fin < lapizNew.y_min ? (lapizNew.y_min = linea.y_fin) : '';\n\t\t// busca cotas maximas Y:\n\t\tlinea.y_ini > lapizNew.y_may ? (lapizNew.y_may = linea.y_ini) : '';\n\t\tlinea.y_fin > lapizNew.y_may ? (lapizNew.y_may = linea.y_fin) : '';\n\t};\n\tconst mouseDownLapiz = (e) => {\n\t\tstateLapiz.grosor > 0\n\t\t\t? (mouse.click = true)\n\t\t\t: console.log('el grosor es 0.');\n\t\tcaptura_Pos_Posprev(e);\n\t};\n\tconst mouseMoveLapiz = (e) => {\n\t\tif (mouse.click) {\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\tgraficaLinea(lapizLinea);\n\t\t\tlapizNew.historiaLinea.push([\n\t\t\t\tlapizLinea.x_ini,\n\t\t\t\tlapizLinea.y_ini,\n\t\t\t\tlapizLinea.x_fin,\n\t\t\t\tlapizLinea.y_fin,\n\t\t\t]);\n\t\t}\n\t};\n\tconst mouseUpLapiz = (e) => {\n\t\tif (mouse.click) {\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\tgraficaLinea(lapizLinea);\n\t\t\tlapizNew.historiaLinea.push([\n\t\t\t\tlapizLinea.x_ini,\n\t\t\t\tlapizLinea.y_ini,\n\t\t\t\tlapizLinea.x_fin,\n\t\t\t\tlapizLinea.y_fin,\n\t\t\t]);\n\t\t\t//lapizNew.id = stateLapiz.id;\n\t\t\tadd_historiaLapizId(lapizNew, stateLapiz.id + 1);\n\t\t}\n\t\tmouse.click = false;\n\t};\n\tconst update_canvasLapizDatos = () => {\n\t\tcanvasLapizDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasLapizDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasLapizDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasLapizDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\n\t\tif (stateLapiz.active) {\n\t\t\tupdate_canvasLapizDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownLapiz);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveLapiz);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpLapiz);\n\t\t}\n\t\treturn () => {\n\t\t\t//canvasLapiz.removeEventListener('click', saludar);\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownLapiz);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveLapiz);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpLapiz);\n\t\t};\n\t}, [stateLapiz]);\n\n\t// return console.log('hola soy lapiz');\n};\n\nexport default PaintLapiz;\n","import React, { useContext, useEffect } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport {\n\tutilsCuadrado_graficaCuadrado,\n\tutilsCuadrado_graficaCuadradoHistoria,\n} from '../utils/UtilsCuadrado';\nimport { utilsLinea_graficaLineaHistoria } from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\nimport { uPlano_graficaCuadradoHistoriaConEjes } from '../utils/UtilsPlano';\n\nconst PaintCuadrado = (id_canvas) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado, add_cuadrado_en_historia } =\n\t\tuseContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\n\t// LOGICA:\n\tlet canvas = '';\n\tlet context = '';\n\tconst cuadrado = {\n\t\tid: stateCuadrado.id,\n\t\tvisible: true,\n\t\tbordeEstado: stateCuadrado.bordeEstado,\n\t\tbordeGrosor: stateCuadrado.bordeGrosor,\n\t\tbordeColor: stateCuadrado.bordeColor,\n\t\tfondoEstado: stateCuadrado.fondoEstado,\n\t\tfondoColor: stateCuadrado.fondoColor,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\t};\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tprimerClick: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst mouseReinicia = () => {\n\t\tmouse.click = false;\n\t\tmouse.move = false;\n\t\tmouse.primerClick = false;\n\t\tmouse.pos.x = 0;\n\t\tmouse.pos_prev.x = 0;\n\t\tmouse.pos.y = 0;\n\t\tmouse.pos_prev.y = 0;\n\t};\n\n\tconst canvasCuadradoDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\tconst x_real = x - canvasCuadradoDatos.left;\n\t\tconst y_real = y - canvasCuadradoDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\n\t\tif (mouse.primerClick) {\n\t\t\tcuadrado.x_ini = mouse.pos_prev.x;\n\t\t\tcuadrado.y_ini = mouse.pos_prev.y;\n\t\t\tmouse.primerClick = false;\n\t\t}\n\t\tcuadrado.x_fin = mouse.pos.x;\n\t\tcuadrado.y_fin = mouse.pos.y;\n\t};\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tuPlano_graficaCuadradoHistoriaConEjes(context, statePlano.historiaPlano); // plano cartesiano\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t};\n\tconst mouseDownCuadrado = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\t};\n\tconst mouseMoveCuadrado = (e) => {\n\t\tif (mouse.click) {\n\t\t\tif (!mouse.move) {\n\t\t\t\tmouse.primerClick = true;\n\t\t\t\tmouse.move = true;\n\t\t\t}\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\tpaint();\n\t\t\tutilsCuadrado_graficaCuadrado(context, cuadrado);\n\t\t}\n\t};\n\tconst mouseUpCuadrado = (e) => {\n\t\t//captura_Pos_Posprev(e);\n\t\tif (mouse.click && mouse.pos_prev.x != 0 && mouse.pos_prev.y != 0) {\n\t\t\tcuadrado.id = stateCuadrado.historiaCuadrado.length;\n\t\t\tif (cuadrado.x_ini > cuadrado.x_fin) {\n\t\t\t\tlet aux = cuadrado.x_ini;\n\t\t\t\tcuadrado.x_ini = cuadrado.x_fin;\n\t\t\t\tcuadrado.x_fin = aux;\n\t\t\t}\n\t\t\tif (cuadrado.y_ini > cuadrado.y_fin) {\n\t\t\t\tlet aux = cuadrado.y_ini;\n\t\t\t\tcuadrado.y_ini = cuadrado.y_fin;\n\t\t\t\tcuadrado.y_fin = aux;\n\t\t\t}\n\t\t\tpaint();\n\t\t\tadd_cuadrado_en_historia(cuadrado);\n\t\t\tutilsCuadrado_graficaCuadrado(context, cuadrado);\n\t\t}\n\t\tmouseReinicia();\n\t};\n\tconst update_canvasCuadradoDatos = () => {\n\t\tcanvasCuadradoDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasCuadradoDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasCuadradoDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasCuadradoDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\n\t\tif (stateCuadrado.active) {\n\t\t\tupdate_canvasCuadradoDatos();\n\n\t\t\tcanvas.addEventListener('mousedown', mouseDownCuadrado);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveCuadrado);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpCuadrado);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownCuadrado);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveCuadrado);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpCuadrado);\n\t\t};\n\t}, [stateCuadrado]);\n\tuseEffect(() => {\n\t\t// console.log(stateCuadrado);\n\t}, [add_cuadrado_en_historia]);\n\n\t// return console.log('soy el paintCuadrado');\n};\n\nexport default PaintCuadrado;\n","import { useContext, useEffect } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport { utilsCuadrado_graficaCuadradoHistoria } from '../utils/UtilsCuadrado';\nimport {\n\tutilsLinea_graficaLinea,\n\tutilsLinea_graficaLineaHistoria,\n} from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\nimport { uPlano_graficaCuadradoHistoriaConEjes } from '../utils/UtilsPlano';\n\nconst PaintLinea = (id_canvas) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea, add_historiaLinea_id } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\n\t// LOGICA:\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tuPlano_graficaCuadradoHistoriaConEjes(context, statePlano.historiaPlano); // plano cartesiano\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t};\n\tlet canvas = '';\n\tlet context = '';\n\n\tconst canvasLineaDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst update_canvasLineaDatos = () => {\n\t\tcanvasLineaDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasLineaDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasLineaDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasLineaDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tprimerClick: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst mouseReinicia = () => {\n\t\tmouse.click = false;\n\t\tmouse.move = false;\n\t\tmouse.primerClick = false;\n\t\tmouse.pos.x = 0;\n\t\tmouse.pos_prev.x = 0;\n\t\tmouse.pos.y = 0;\n\t\tmouse.pos_prev.y = 0;\n\t};\n\tconst Linea = {\n\t\tid: stateLinea.id,\n\t\tvisible: true,\n\t\tgrosor: stateLinea.grosor,\n\t\tcolor: stateLinea.color,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\tconst x_real = x - canvasLineaDatos.left;\n\t\tconst y_real = y - canvasLineaDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\n\t\tif (mouse.primerClick) {\n\t\t\tLinea.x_ini = mouse.pos_prev.x;\n\t\t\tLinea.y_ini = mouse.pos_prev.y;\n\t\t\tmouse.primerClick = false;\n\t\t}\n\t\tLinea.x_fin = mouse.pos.x;\n\t\tLinea.y_fin = mouse.pos.y;\n\t};\n\tconst mouseDownLinea = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\t};\n\tconst mouseMoveLinea = (e) => {\n\t\tif (mouse.click) {\n\t\t\tif (!mouse.move) {\n\t\t\t\tmouse.primerClick = true;\n\t\t\t\tmouse.move = true;\n\t\t\t}\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\tpaint();\n\t\t\tutilsLinea_graficaLinea(context, Linea); // utilsPaint_graficaLinea\n\t\t}\n\t};\n\tconst mouseUpLinea = () => {\n\t\tif (mouse.click && mouse.pos_prev.x != 0 && mouse.pos_prev.y != 0) {\n\t\t\tLinea.id = stateLinea.id;\n\t\t\tpaint();\n\t\t\tadd_historiaLinea_id(Linea, stateLinea.id + 1);\n\t\t\tutilsLinea_graficaLinea(context, Linea);\n\t\t}\n\t\tmouseReinicia();\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (stateLinea.active) {\n\t\t\tupdate_canvasLineaDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownLinea);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveLinea);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpLinea);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownLinea);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveLinea);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpLinea);\n\t\t};\n\t}, [stateLinea]);\n};\n\nexport default PaintLinea;\n","import React, { useEffect, useContext } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport { utilsCuadrado_graficaCuadradoHistoria } from '../utils/UtilsCuadrado';\nimport { utilsLinea_graficaLineaHistoria } from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\n\nimport {\n\tuPlano_graficaCuadrado,\n\tuPlano_graficaCuadradoConEjes,\n\tuPlano_graficaCuadradoHistoria,\n\tu_planoGraficaH,\n} from '../utils/UtilsPlano';\n\nconst PaintPlano = (id_canvas) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano, add_plano_en_historiaId } = useContext(AppContextPlano);\n\n\t// LOGICA:\n\tlet canvas = '';\n\tlet context = '';\n\tconst canvasPlanoDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst update_canvasPlanoDatos = () => {\n\t\tcanvasPlanoDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasPlanoDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasPlanoDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasPlanoDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\t// uPlano_graficaCuadradoHistoria(context, statePlano.historiaPlano);\n\t\tu_planoGraficaH(context, statePlano.historiaPlano);\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t};\n\tlet mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tprimerClick: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst mouseReinicia = () => {\n\t\tmouse.click = false;\n\t\tmouse.move = false;\n\t\tmouse.primerClick = false;\n\t\tmouse.pos.x = 0;\n\t\tmouse.pos_prev.x = 0;\n\t\tmouse.pos.y = 0;\n\t\tmouse.pos_prev.y = 0;\n\t};\n\tconst plano = {\n\t\tid: statePlano.id,\n\t\tvisible: true,\n\t\tbordeEstado: true,\n\t\tbordeGrosor: 2,\n\t\tbordeColor: statePlano.color_cuadricula,\n\t\tfondoEstado: true,\n\t\tfondoColor: 'white',\n\t\twidth_cuadricula: statePlano.width_cuadricula,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\n\t\tx_min: statePlano.x_min,\n\t\ty_max: statePlano.y_max,\n\t\tsalto: statePlano.salto,\n\t};\n\tlet captura_Pos_Posprev = (e) => {\n\t\tlet x = e.clientX;\n\t\tlet y = e.clientY;\n\t\tlet x_real = x - canvasPlanoDatos.left;\n\t\tlet y_real = y - canvasPlanoDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\n\t\tif (mouse.primerClick) {\n\t\t\tplano.x_ini = mouse.pos_prev.x;\n\t\t\tplano.y_ini = mouse.pos_prev.y;\n\t\t\tmouse.primerClick = false;\n\t\t}\n\t\tplano.x_fin = mouse.pos.x;\n\t\tplano.y_fin = mouse.pos.y;\n\t};\n\t// 1:\n\tconst mouseDownPlano = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\t\tconsole.log('click');\n\t};\n\t// 2:\n\tconst mouseMovePlano = (e) => {\n\t\t// if (mouse.click) {\n\t\t// \tif (!mouse.move) {\n\t\t// \t\tmouse.primerClick = true;\n\t\t// \t\tmouse.move = true;\n\t\t// \t}\n\t\t// \tcaptura_Pos_Posprev(e);\n\t\t// \tpaint();\n\t\t// \tuPlano_graficaCuadrado(context, plano);\n\t\t// }\n\t};\n\t// 3:\n\tlet mouseUpPlano = (e) => {\n\t\tcaptura_Pos_Posprev(e);\n\t\tconsole.log('solto click');\n\t\tconsole.log(mouse);\n\t\tif (mouse.pos_prev.x != 0 && mouse.pos_prev.y != 0) {\n\t\t\tconsole.log('solto click');\n\t\t\tconsole.log(mouse);\n\t\t\tplano.x_ini = mouse.pos.x - 150;\n\t\t\tplano.y_ini = mouse.pos.y - 150;\n\t\t\tplano.x_fin = mouse.pos.x + 150;\n\t\t\tplano.y_fin = mouse.pos.y + 150;\n\t\t\tpaint();\n\t\t\t//uPlano_graficaCuadrado(context, plano);\n\t\t\t//paint();\n\t\t\t//paint();\n\t\t\tuPlano_graficaCuadradoConEjes(context, plano);\n\t\t\tadd_plano_en_historiaId(plano, statePlano.id + 1);\n\t\t}\n\t\tmouseReinicia();\n\t};\n\t// LOGICA END.\n\n\t// EFFECT:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (statePlano.active) {\n\t\t\tupdate_canvasPlanoDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownPlano);\n\t\t\tcanvas.addEventListener('mousemove', mouseMovePlano);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpPlano);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownPlano);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMovePlano);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpPlano);\n\t\t};\n\t}, [statePlano]);\n\tuseEffect(() => {\n\t\t//console.log('hola');\n\t}, []);\n};\n\nexport default PaintPlano;\n","import React from 'react';\nimport Canvas from '../components/Canvas';\n\nimport '../styles/Home.scss';\n\nconst Home = () => {\n\t// const heightPantalla = screen.height - 180;\n\t// const widthPantalla = screen.width - 55;\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t<Canvas />\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import React from 'react';\nimport Header from '../components/Header';\nimport NavIzq from '../components/NavIzq';\nimport Home from '../pages/Home';\n\nconst Layout = ({ children }) => {\n\treturn (\n\t\t<div className=\"Layout\">\n\t\t\t<Header />\n\t\t\t<NavIzq />\n\t\t\t<Home />\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nexport default Layout;\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\n// CONTEXT:\nimport AppContext from '../context/AppContext';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextBorrador from '../context/AppContextBorrador';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextMover from '../context/AppContextMover';\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextPlano from '../context/AppContextPlano';\n\n// HOOKS:\nimport useInitialState from '../hooks/useInitialState';\nimport useMover from '../hooks/useMover';\nimport useLapiz from '../hooks/useLapiz';\nimport useBorrador from '../hooks/useBorrador';\nimport useCuadrado from '../hooks/useCuadrado';\nimport useCanvas from '../hooks/useCanvas';\nimport useLinea from '../hooks/useLinea';\nimport usePlano from '../hooks/usePlano';\n\nimport Layout from '../containers/Layout';\nimport Home from '../pages/Home';\nimport '../styles/global.css';\n\nconst App = () => {\n\tconst initialState = useInitialState();\n\tconst initialStateMover = useMover();\n\tconst initialStateLapiz = useLapiz();\n\tconst initialStateBorrador = useBorrador();\n\tconst initialStateCuadrado = useCuadrado();\n\tconst initialStateCanvas = useCanvas();\n\tconst initialStateLinea = useLinea();\n\tconst initialStatePlano = usePlano();\n\n\treturn (\n\t\t<AppContext.Provider value={initialState}>\n\t\t\t<AppContextCanvas.Provider value={initialStateCanvas}>\n\t\t\t\t<AppContextMover.Provider value={initialStateMover}>\n\t\t\t\t\t<AppContextLapiz.Provider value={initialStateLapiz}>\n\t\t\t\t\t\t<AppContextBorrador.Provider value={initialStateBorrador}>\n\t\t\t\t\t\t\t<AppContextCuadrado.Provider value={initialStateCuadrado}>\n\t\t\t\t\t\t\t\t<AppContextLinea.Provider value={initialStateLinea}>\n\t\t\t\t\t\t\t\t\t<AppContextPlano.Provider value={initialStatePlano}>\n\t\t\t\t\t\t\t\t\t\t<BrowserRouter>\n\t\t\t\t\t\t\t\t\t\t\t<Layout>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <Routes>\n\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/\" element={<Home />} />\n\t\t\t\t\t\t\t\t\t</Routes> */}\n\t\t\t\t\t\t\t\t\t\t\t</Layout>\n\t\t\t\t\t\t\t\t\t\t</BrowserRouter>\n\t\t\t\t\t\t\t\t\t</AppContextPlano.Provider>\n\t\t\t\t\t\t\t\t</AppContextLinea.Provider>\n\t\t\t\t\t\t\t</AppContextCuadrado.Provider>\n\t\t\t\t\t\t</AppContextBorrador.Provider>\n\t\t\t\t\t</AppContextLapiz.Provider>\n\t\t\t\t</AppContextMover.Provider>\n\t\t\t</AppContextCanvas.Provider>\n\t\t</AppContext.Provider>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './routes/App';\n\nReactDom.render(<App />, document.getElementById('app'));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmathboard\"] = self[\"webpackChunkmathboard\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [829], function() { return __webpack_require__(6310); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","React","initialState","alfabetoMay","split","alfabetoMin","alfabeto","active","color","colorFondo","grosor","state","setState","useState","toLowerCase","auxArray","toUpperCase","updateCanvasPaleta","optionIcon","console","log","updateColor","valor","updateColorFondo","updateGrosor","initialStateMover","stateMover","setStateMover","updateMoverActive","initialStateLapiz","id","historiaLapiz","stateLapiz","setStateLapiz","updateLapizActive","updateLapizColor","updateLapizGrosor","add_historiaLapiz","updateLapizColorGrosor","valor1","valor2","add_historiaLapizId","lapiz","initialStateBorrador","historialBorrador","stateBorrador","setStateBorrador","updateBorradorActive","updateBorradorColor","updateBorradorGrosor","initialStateCuadrado","bordeEstado","bordeGrosor","bordeColor","fondoEstado","fondoColor","x_ini","y_ini","width","height","historiaCuadrado","stateCuadrado","setStateCuadrado","updateCuadradoActive","updateCuadradoBordeGrosor","updateCuadradoBordeEstado","updateCuadradoBorde_ColorEstado","estado","updateCuadradoFondoEstado","updateCuadradoFondo_ColorEstado","add_cuadrado_en_historia","cuadrado","update_cuadrado_en_historia","array","update_all","colorBorde","bordeEstadoIn","fondoEstadoIn","update_cuadradoH","initialStateCanvas","cuadriculaWidth","lineaColor","lineaGrosor","tipoCuadricula","stateCanvas","setStateCanvas","updateCuadriculaActive","updateCuadriculaWidth","update_width_height","updateTipoCuadricula","initialStateLinea","historiaLinea","stateLinea","setStateLinea","updateLineaActive","updateLineaColor","updateLineaGrosor","add_historiaLinea","add_historiaLinea_id","updateLineaColorGrosor","s_lineaUpdateH","initialStatePlano","x_min","y_max","salto","color_cuadricula","width_cuadricula","historiaPlano","statePlano","setStatePlano","updatePlanoActive","add_plano_en_historia","add_plano_en_historiaId","useContext","AppContextPlano","useEffect","className","type","defaultValue","value","onClick","AppContext","arrayPaletaColor","colorLine","tipo","updatePaletaColor","forEach","dato","document","getElementById","classList","remove","elem","find","add","title","map","handleColor","handlePaletaColor","src","iconLineaNone","arrayIconLinea","iconLine","iconLineaS","iconLineaM","iconLineaL","iconLineaXL","iconLineaXXL","updatePaletaGrosor","querySelectorAll","i","length","htmlFor","handleLineaGrosor","AppContextLapiz","AppContextBorrador","handleGrosor","opMatematica","parseInt","update","placeholder","disabled","AppContextCuadrado","AppContextCanvas","arrayIconCuadricula","iconCuadricula","iconCuadriculaSin","iconCuadriculaNone","updatePaleta_tipoCuadricula","handleBtnAncho","op","handleCuadriculaTipo","AppContextLinea","toggleMenu1","setToggleMenu1","toggleMenuMover","setToggleMenuMover","toggleMenuLapiz","setToggleMenuLapiz","toggleMenuBorrador","setToggleMenuBorrador","toggleMenuCuadrado","setToggleMenuCuadrado","toggleMenuCuadricula","setToggleMenuCuadricula","toggleMenuLinea","setToggleMenuLinea","toggleMenuPlano","setToggleMenuPlano","href","Menu1","element","key","handleClick","svg","toggleShift","setToggleShift","option","txt","elm","AppContextMover","AppContextCuadricula","toggleKeyboard","setToggleKeyboard","iconosPaleta","moverIcon","lapizIcon","borradorIcon","lineaIcon","cuadradoIcon","planoIcon","cuadriculaIcon","icon","handleIcon","keyboardIcon","utilsCuadricula_graficaCuadricula","context","canvas","lineWidth","strokeStyle","fillStyle","setLineDash","beginPath","moveTo","lineTo","fill","stroke","closePath","nroLineasV","incV","nroLineasH","incH","utilsCuadrado_graficaCuadrado","x_fin","y_fin","utilsCuadrado_graficaCuadradoHistoria","utilsLinea_graficaLinea","linea","visible","utilsLinea_graficaLineaHistoria","utilsLapiz_graficaLapiz","sw","utilsLapiz_graficaLapizHistoria","uPlano_graficaCuadradoConEjes","plano","x1","y1","y2","x2","utilsPlano_graficaCuadricula","Linea","x3","y3","utilsPlano_graficaTriangulo","arrayX","n","x","push","font","fillText","arrayY","heigth","y","textAlign","uPlano_graficaNumeros","uPlano_graficaCuadradoHistoriaConEjes","u_planoGraficaH","get_pts_redimencion","width_p","u_cuadradoSegmentado","get_pts_redimencion_linea","u_lineaSegmentado","u_planoSegmentado","u_lapizSegmentado","y_min","x_may","y_may","id_canvas","paint","u_cuadradoGraficaH","u_lapizGraficaH","u_lineaGraficaH","mouse","click","move","pos","pos_prev","mouseDownBorrador","e","clientX","clientY","x_real","canvasBorradorDatos","left","y_real","top","capturaPosPosprev","res","resp","u_lapizGet","lapiz_id","u_lapizDeleteById","lapizDelete","p","a","b","c","dnum","Math","sqrt","u_lineaGet","linea_id","u_lineaDeleteById","lineaDelete","u_cuadradoGet","cuadradoId","arrayNew","u_cuadradoDeleteById","cuadradoDelete","u_planoGet","u_planoDeleteById","planoDelete","getContext","getBoundingClientRect","addEventListener","removeEventListener","canvasWidth","setCanvasWidth","window","innerWidth","canvasHeight","setCanvasHeight","innerHeight","canvasId","PaintCuadricula","cuadradoSelect","lineaSelect","lapizSelect","planoSelect","mover_cuadrado","seleccionar_cuadrado_pts","cuadrado_punto_mover","cuadrado_pto","mover_linea","seleccionar_linea_pts","linea_punto_mover","linea_pto","mover_lapiz","plano_mover","plano_seleccionar_pts","plano_pto_mover","plano_pto","canvasMoverDatos","captura_Pos_Posprev","busca_cuadrado_ptoClick","mouseDownMover","u_getLapiz","arrayPts","busca_linea_ptoClick","u_getLinea","u_getCuadrado","get_pts_redimencion_plano","u_getPlano","mouseMoveMover","recorrido_x","recorrido_y","u_moverCuadrado","u_updateZiseCuadrado","u_moverLinea","u_updateZiseLinea","u_moverLapiz","u_moverPlano","u_updateZisePlano","mouseUpMover","aux","PaintMover","lapizNew","lapizLinea","canvasLapizDatos","graficaLinea","mouseDownLapiz","mouseMoveLapiz","mouseUpLapiz","PainLapiz","PaintBorrador","primerClick","canvasCuadradoDatos","mouseDownCuadrado","mouseMoveCuadrado","mouseUpCuadrado","PaintCuadrado","canvasLineaDatos","mouseDownLinea","mouseMoveLinea","mouseUpLinea","PaintLinea","canvasPlanoDatos","mouseDownPlano","mouseMovePlano","mouseUpPlano","PaintPlano","updateCanvasWidth","updateCanvasHeight","children","useInitialState","useMover","useLapiz","useBorrador","useCuadrado","useCanvas","useLinea","usePlano","ReactDom","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}
{"version":3,"file":"main.b1503fde54bba1ea1951.js","mappings":"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","sources":["webpack://mathboard/webpack/runtime/chunk loaded","webpack://mathboard/./src/context/AppContext.js","webpack://mathboard/./src/context/AppContextLapiz.js","webpack://mathboard/./src/context/AppContextBorrador.js","webpack://mathboard/./src/context/AppContextCuadrado.js","webpack://mathboard/./src/context/AppContextMover.js","webpack://mathboard/./src/context/AppContextCanvas.js","webpack://mathboard/./src/context/AppContextLinea.js","webpack://mathboard/./src/context/AppContextPlano.js","webpack://mathboard/./src/context/AppContextText.js","webpack://mathboard/./src/hooks/useInitialState.js","webpack://mathboard/./src/hooks/useMover.js","webpack://mathboard/./src/hooks/useLapiz.js","webpack://mathboard/./src/hooks/useBorrador.js","webpack://mathboard/./src/hooks/useCuadrado.js","webpack://mathboard/./src/hooks/useCanvas.js","webpack://mathboard/./src/hooks/useLinea.js","webpack://mathboard/./src/hooks/usePlano.js","webpack://mathboard/./src/hooks/useText.js","webpack://mathboard/./src/containers/Menu1.jsx","webpack://mathboard/./src/containers/MenuPlano.jsx","webpack://mathboard/./src/containers/MenuMover.jsx","webpack://mathboard/./src/components/PaletaColor.jsx","webpack://mathboard/./src/components/PaletaGrosor.jsx","webpack://mathboard/./src/containers/MenuLapiz.jsx","webpack://mathboard/./src/containers/MenuBorrador.jsx","webpack://mathboard/./src/containers/MenuCuadrado.jsx","webpack://mathboard/./src/containers/MenuCuadricula.jsx","webpack://mathboard/./src/containers/MenuLinea.jsx","webpack://mathboard/./src/containers/MenuText.jsx","webpack://mathboard/./src/components/Header.jsx","webpack://mathboard/./src/components/key.jsx","webpack://mathboard/./src/components/KeySvg.jsx","webpack://mathboard/./src/components/KeyTxt.jsx","webpack://mathboard/./src/containers/Keyboard.jsx","webpack://mathboard/./src/components/NavIzq.jsx","webpack://mathboard/./src/utils/UtilsCuadricula.js","webpack://mathboard/./src/utils/UtilsPlano.js","webpack://mathboard/./src/utils/UtilsCuadrado.js","webpack://mathboard/./src/utils/UtilsLinea.js","webpack://mathboard/./src/utils/UtilsLapiz.js","webpack://mathboard/./src/utils/UtilsText.js","webpack://mathboard/./src/components/PaintMover.jsx","webpack://mathboard/./src/components/PaintBorrador.jsx","webpack://mathboard/./src/components/Canvas.jsx","webpack://mathboard/./src/components/PaintCuadricula.jsx","webpack://mathboard/./src/components/PaintLapiz.jsx","webpack://mathboard/./src/components/PaintCuadrado.jsx","webpack://mathboard/./src/components/PaintLinea.jsx","webpack://mathboard/./src/components/PaintPlano.jsx","webpack://mathboard/./src/pages/Home.jsx","webpack://mathboard/./src/containers/Layout.jsx","webpack://mathboard/./src/routes/App.jsx","webpack://mathboard/./src/index.js","webpack://mathboard/webpack/bootstrap","webpack://mathboard/webpack/runtime/define property getters","webpack://mathboard/webpack/runtime/global","webpack://mathboard/webpack/runtime/hasOwnProperty shorthand","webpack://mathboard/webpack/runtime/jsonp chunk loading","webpack://mathboard/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import React from 'react';\n\nconst AppContext = React.createContext({});\n\nexport default AppContext;\n","import React from 'react';\n\nconst AppContextLapiz = React.createContext({});\n\nexport default AppContextLapiz;\n","import React from 'react';\n\nconst AppContextBorrador = React.createContext({});\n\nexport default AppContextBorrador;\n","import React from 'react';\n\nconst AppContextCuadrado = React.createContext({});\n\nexport default AppContextCuadrado;\n","import React from 'react';\n\nconst AppContextMover = React.createContext({});\n\nexport default AppContextMover;\n","import React from 'react';\n\nconst AppContextCanvas = React.createContext({});\n\nexport default AppContextCanvas;\n","import React from 'react';\n\nconst AppContextLinea = React.createContext({});\n\nexport default AppContextLinea;\n","import React from 'react';\n\nconst AppContextPlano = React.createContext({});\n\nexport default AppContextPlano;\n","import React from 'react';\n\nconst AppContextText = React.createContext({});\n\nexport default AppContextText;\n","import { useState } from 'react';\n\nconst initialState = {\n\talfabetoMay: [\n\t\t'QWERTYUIOP'.split(''),\n\t\t'ASDFGHJKLÑ'.split(''),\n\t\t'ZXCVBNM,'.split(''),\n\t],\n\talfabetoMin: [\n\t\t'qwertyuiop'.split(''),\n\t\t'asdfghjklñ'.split(''),\n\t\t'zxcvbnm.'.split(''),\n\t],\n\talfabeto: [\n\t\t'QWERTYUIOP'.split(''),\n\t\t'ASDFGHJKLÑ'.split(''),\n\t\t'ZXCVBNM,'.split(''),\n\t],\n\tactive: '',\n\tcolor: 'red',\n\tcolorFondo: 'yellow',\n\tgrosor: 2,\n};\nconst useInitialState = () => {\n\tconst [state, setState] = useState(initialState);\n\n\tconst toLowerCase = () => {\n\t\tconst auxArray = state.alfabetoMin;\n\t\tsetState({\n\t\t\t...state,\n\t\t\talfabeto: auxArray,\n\t\t});\n\t};\n\tconst toUpperCase = () => {\n\t\tconst auxArray = state.alfabetoMay;\n\t\tsetState({\n\t\t\t...state,\n\t\t\talfabeto: auxArray,\n\t\t});\n\t};\n\n\t// ACTIVA Y DESACTIVA LA OPCION SELECCIONADA DE LA PALETA DE LA PIZARRA\n\tconst updateCanvasPaleta = (optionIcon) => {\n\t\tswitch (optionIcon) {\n\t\t\tcase 'moverIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'moverIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'lapizIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'lapizIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'borradorIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'borradorIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'lineaIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'lineaIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'cuadradoIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'cuadradoIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'planoIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'planoIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'cuadriculaIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'cuadriculaIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'textIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'textIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('Opcion no registrada / useInitialState!!!');\n\t\t\t\tbreak;\n\t\t}\n\t};\n\tconst updateColor = (valor) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tcolor: valor,\n\t\t});\n\t};\n\tconst updateGrosor = (valor) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\tconst updateColorFondo = (valor) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tcolorFondo: valor,\n\t\t});\n\t};\n\n\treturn {\n\t\tstate,\n\t\ttoLowerCase,\n\t\ttoUpperCase,\n\t\tupdateCanvasPaleta,\n\t\tupdateColor,\n\t\tupdateColorFondo,\n\t\tupdateGrosor,\n\t};\n};\n\nexport default useInitialState;\n","import { useState } from 'react';\nconst initialStateMover = {\n\tactive: false,\n};\n\nconst useMover = () => {\n\tconst [stateMover, setStateMover] = useState(initialStateMover);\n\n\tconst updateMoverActive = (valor) => {\n\t\tsetStateMover({\n\t\t\t...stateMover,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\treturn {\n\t\tstateMover,\n\t\tupdateMoverActive,\n\t};\n};\n\nexport default useMover;\n","import { useState } from 'react';\nconst initialStateLapiz = {\n\tid: 0,\n\tactive: false,\n\tcolor: 'black',\n\tgrosor: 4,\n\thistoriaLapiz: [],\n};\n\nconst useLapiz = () => {\n\tconst [stateLapiz, setStateLapiz] = useState(initialStateLapiz);\n\n\tconst updateLapizActive = (valor) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateLapizColor = (valor) => {\n\t\tconsole.log('color util:', valor);\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tcolor: valor,\n\t\t});\n\t\tconsole.log('color:', stateLapiz);\n\t};\n\tconst updateLapizGrosor = (valor) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\tconst add_historiaLapiz = (valor) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\thistoriaLapiz: [...stateLapiz.historiaLapiz, valor],\n\t\t});\n\t};\n\tconst add_historiaLapizId = (lapiz, id) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tid: id,\n\t\t\thistoriaLapiz: [...stateLapiz.historiaLapiz, lapiz],\n\t\t});\n\t};\n\tconst s_lapizAddHId = (lapiz, id) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tid: id,\n\t\t\thistoriaLapiz: [...stateLapiz.historiaLapiz, lapiz],\n\t\t});\n\t};\n\tconst updateLapizColorGrosor = (valor1, valor2) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tcolor: valor1,\n\t\t\tgrosor: valor2,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateLapiz,\n\t\tupdateLapizActive,\n\t\tupdateLapizColor,\n\t\tupdateLapizGrosor,\n\t\t//add_historiaLapiz,\n\t\tupdateLapizColorGrosor,\n\t\t//add_historiaLapizId,\n\t\ts_lapizAddHId,\n\t};\n};\n\nexport default useLapiz;\n","import { useState } from 'react';\nconst initialStateBorrador = {\n\tactive: false,\n\tcolor: 'white',\n\tgrosor: 10,\n\thistorialBorrador: [],\n};\n\nconst useBorrador = () => {\n\tconst [stateBorrador, setStateBorrador] = useState(initialStateBorrador);\n\n\tconst updateBorradorActive = (valor) => {\n\t\tsetStateBorrador({\n\t\t\t...stateBorrador,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateBorradorColor = (valor) => {\n\t\tsetStateBorrador({\n\t\t\t...stateBorrador,\n\t\t\tcolor: valor,\n\t\t});\n\t};\n\tconst updateBorradorGrosor = (valor) => {\n\t\tsetStateBorrador({\n\t\t\t...stateBorrador,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateBorrador,\n\t\tupdateBorradorActive,\n\t\tupdateBorradorColor,\n\t\tupdateBorradorGrosor,\n\t};\n};\n\nexport default useBorrador;\n","import { useState } from 'react';\nconst initialStateCuadrado = {\n\tactive: false,\n\tid: 0,\n\tbordeEstado: true, // si tendra borde\n\tbordeGrosor: 5,\n\tbordeColor: 'yellow',\n\tfondoEstado: true, // si tendra fondo\n\tfondoColor: 'black',\n\tx_ini: 0,\n\ty_ini: 0,\n\twidth: 10,\n\theight: 10,\n\thistoriaCuadrado: [],\n};\n\nconst useCuadrado = () => {\n\tconst [stateCuadrado, setStateCuadrado] = useState(initialStateCuadrado);\n\n\tconst updateCuadradoActive = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\t// UPDATE GENERAL(HEADER - PALETA):\n\tconst updateCuadradoBordeGrosor = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeGrosor: valor,\n\t\t});\n\t};\n\tconst updateCuadradoBordeEstado = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeEstado: valor,\n\t\t});\n\t};\n\tconst updateCuadradoBorde_ColorEstado = (color, estado) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeColor: color,\n\t\t\tbordeEstado: estado,\n\t\t});\n\t};\n\tconst updateCuadradoFondoEstado = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tfondoEstado: valor,\n\t\t});\n\t};\n\tconst updateCuadradoFondo_ColorEstado = (color, estado) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tfondoColor: color,\n\t\t\tfondoEstado: estado,\n\t\t});\n\t};\n\t// CREATE: ADD_IN:\thistoriaCuadrado[]\n\tconst add_cuadrado_en_historia = (cuadrado) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\thistoriaCuadrado: [...stateCuadrado.historiaCuadrado, cuadrado],\n\t\t});\n\t};\n\tconst s_cuadradoAddH = (cuadrado) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\thistoriaCuadrado: [...stateCuadrado.historiaCuadrado, cuadrado],\n\t\t});\n\t};\n\tconst s_cuadradoAddHId = (cuadrado, id) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tid: id,\n\t\t\thistoriaCuadrado: [...stateCuadrado.historiaCuadrado, cuadrado],\n\t\t});\n\t};\n\t// DELETE: DELETE_IN:\thistoriaCuadrado[]\n\t// UPDATE: UPDATE_IN:\thistoriaCuadrado[]\n\tconst update_cuadrado_en_historia = (array) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\thistoriaCuadrado: array,\n\t\t});\n\t};\n\tconst update_cuadradoH = (array) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\thistoriaCuadrado: array,\n\t\t});\n\t};\n\tconst update_all = (\n\t\tcolorBorde,\n\t\tcolorFondo,\n\t\tbordeGrosor,\n\t\tbordeEstadoIn,\n\t\tfondoEstadoIn\n\t) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeColor: colorBorde,\n\t\t\tfondoColor: colorFondo,\n\t\t\tbordeGrosor: bordeGrosor,\n\t\t\tbordeEstado: bordeEstadoIn,\n\t\t\tfondoEstado: fondoEstadoIn,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateCuadrado,\n\t\tupdateCuadradoActive,\n\t\tupdateCuadradoBordeGrosor,\n\t\tupdateCuadradoBordeEstado,\n\t\tupdateCuadradoBorde_ColorEstado,\n\t\tupdateCuadradoFondoEstado,\n\t\tupdateCuadradoFondo_ColorEstado,\n\t\tadd_cuadrado_en_historia,\n\t\tupdate_cuadrado_en_historia,\n\t\tupdate_all,\n\t\tupdate_cuadradoH, // new\n\t\ts_cuadradoAddH,\n\t\ts_cuadradoAddHId,\n\t};\n};\n\nexport default useCuadrado;\n","import { useState } from 'react';\n\nconst initialStateCanvas = {\n\tactive: false,\n\tid: 0,\n\twidth: 0,\n\theight: 0,\n\tcuadriculaWidth: 30,\n\tfondoColor: 'white',\n\tlineaColor: '#d5dbdb',\n\tlineaGrosor: 1,\n\ttipoCuadricula: 'cuadricula', // cuadricula, linea, ninguno\n};\n\nconst useCanvas = () => {\n\tconst [stateCanvas, setStateCanvas] = useState(initialStateCanvas);\n\n\tconst updateCuadriculaActive = (valor) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateCuadriculaWidth = (valor) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\tcuadriculaWidth: valor,\n\t\t});\n\t};\n\tconst update_width_height = (width, height) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t});\n\t};\n\tconst updateTipoCuadricula = (valor) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\ttipoCuadricula: valor,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateCanvas,\n\t\tupdateCuadriculaActive,\n\t\tupdateCuadriculaWidth,\n\t\tupdate_width_height,\n\t\tupdateTipoCuadricula,\n\t};\n};\n\nexport default useCanvas;\n","import { useState } from 'react';\nconst initialStateLinea = {\n\tactive: false,\n\tcolor: 'black',\n\tgrosor: 2,\n\tid: 0,\n\thistoriaLinea: [],\n};\n\nconst useLinea = () => {\n\tconst [stateLinea, setStateLinea] = useState(initialStateLinea);\n\n\tconst updateLineaActive = (valor) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateLineaColor = (valor) => {\n\t\tconsole.log('color util:', valor);\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tcolor: valor,\n\t\t});\n\t\tconsole.log('color:', stateLinea);\n\t};\n\tconst updateLineaGrosor = (valor) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\tconst add_historiaLinea = (valor) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\thistoriaLinea: [...stateLinea.historiaLinea, valor],\n\t\t});\n\t};\n\tconst add_historiaLinea_id = (valor, id) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tid: id,\n\t\t\thistoriaLinea: [...stateLinea.historiaLinea, valor],\n\t\t});\n\t};\n\tconst s_lineaAddHId = (valor, id) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tid: id,\n\t\t\thistoriaLinea: [...stateLinea.historiaLinea, valor],\n\t\t});\n\t};\n\tconst updateLineaColorGrosor = (valor1, valor2) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tcolor: valor1,\n\t\t\tgrosor: valor2,\n\t\t});\n\t};\n\tconst s_lineaUpdateH = (array) => {\n\t\tsetStateLinea({\n\t\t\t...setStateLinea,\n\t\t\thistoriaLinea: array,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateLinea,\n\t\tupdateLineaActive,\n\t\tupdateLineaColor,\n\t\tupdateLineaGrosor,\n\t\tadd_historiaLinea,\n\t\t//add_historiaLinea_id,\n\t\tupdateLineaColorGrosor,\n\t\ts_lineaUpdateH,\n\t\ts_lineaAddHId,\n\t};\n};\n\nexport default useLinea;\n","import { useState } from 'react';\nconst initialStatePlano = {\n\tactive: false,\n\tid: 0,\n\tx_min: -7,\n\ty_max: 5,\n\tsalto: 1,\n\tcolor_cuadricula: '#abb2b9',\n\twidth_cuadricula: 30,\n\thistoriaPlano: [],\n};\n\nconst usePlano = () => {\n\tconst [statePlano, setStatePlano] = useState(initialStatePlano);\n\n\tconst updatePlanoActive = (valor) => {\n\t\tsetStatePlano({\n\t\t\t...statePlano,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst add_plano_en_historia = (valor) => {\n\t\tsetStatePlano({\n\t\t\t...statePlano,\n\t\t\thistoriaPlano: [...statePlano.historiaPlano, valor],\n\t\t});\n\t};\n\tconst s_planoAddHId = (valor, id) => {\n\t\tsetStatePlano({\n\t\t\t...statePlano,\n\t\t\tid: id,\n\t\t\thistoriaPlano: [...statePlano.historiaPlano, valor],\n\t\t});\n\t};\n\tconst s_planoUpdateXmin = (valor) => {\n\t\tsetStatePlano({\n\t\t\t...statePlano,\n\t\t\tx_min: valor,\n\t\t});\n\t};\n\tconst s_planoUpdateYmax = (valor) => {\n\t\tsetStatePlano({\n\t\t\t...statePlano,\n\t\t\ty_max: valor,\n\t\t});\n\t};\n\tconst s_planoUpdateWidthCuadricula = (valor) => {\n\t\tsetStatePlano({\n\t\t\t...statePlano,\n\t\t\twidth_cuadricula: valor,\n\t\t});\n\t};\n\treturn {\n\t\tstatePlano,\n\t\tupdatePlanoActive,\n\t\t//add_plano_en_historia,\n\t\ts_planoAddHId,\n\t\ts_planoUpdateXmin,\n\t\ts_planoUpdateYmax,\n\t\ts_planoUpdateWidthCuadricula,\n\t};\n};\n\nexport default usePlano;\n","import { useState } from 'react';\nconst initialStateText = {\n\tactive: false,\n\tid: 0,\n\ttamano: 20,\n\ttexto: 'new text',\n\tx_ini: 0,\n\ty_ini: 0,\n\tsalto: 1,\n\tcolor: 'black',\n\thistoriaText: [],\n};\n\nconst useText = () => {\n\tconst [stateText, setStateText] = useState(initialStateText);\n\n\tconst updateTextActive = (valor) => {\n\t\tsetStateText({\n\t\t\t...stateText,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst s_textAddH = (valor) => {\n\t\tsetStateText({\n\t\t\t...stateText,\n\t\t\thistoriaText: [...stateText.historiaText, valor],\n\t\t});\n\t};\n\tconst s_textAddHId = (valor, id) => {\n\t\tsetStateText({\n\t\t\t...stateText,\n\t\t\tid: id,\n\t\t\thistoriaText: [...stateText.historiaText, valor],\n\t\t});\n\t};\n\tconst s_textUpdateColor = (color) => {\n\t\tsetStateText({\n\t\t\t...stateText,\n\t\t\tcolor: color,\n\t\t});\n\t};\n\tconst s_textUpdateTamano = (tamano) => {\n\t\tsetStateText({\n\t\t\t...stateText,\n\t\t\ttamano: tamano,\n\t\t});\n\t};\n\tconst s_textUpdateText = (txt) => {\n\t\tsetStateText({\n\t\t\t...stateText,\n\t\t\ttexto: txt,\n\t\t});\n\t};\n\treturn {\n\t\tstateText,\n\t\tupdateTextActive,\n\t\ts_textAddH,\n\t\ts_textUpdateColor,\n\t\ts_textUpdateTamano,\n\t\ts_textUpdateText,\n\t\ts_textAddHId,\n\t};\n};\n\nexport default useText;\n","import React from 'react';\n\nconst MenuLapizAux = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h1>BIENVENIDO A LA PIZARRA DIGITAL WEB</h1>\n\t\t</div>\n\t);\n};\n\nexport default MenuLapizAux;\n","import React, { useContext, useEffect } from 'react';\n\nimport '../styles/MenuPlano.scss';\n\n// CONTEXT:\nimport AppContextPlano from '../context/AppContextPlano';\n\nconst MenuPlano = () => {\n\t// useContext:\n\tconst {\n\t\tstatePlano,\n\t\ts_planoUpdateXmin,\n\t\ts_planoUpdateYmax,\n\t\ts_planoUpdateWidthCuadricula,\n\t} = useContext(AppContextPlano);\n\n\t// LOGICA\n\tconst handleAdd = () => {\n\t\tconsole.log('press add');\n\t};\n\tconst handleXmin = (op) => {\n\t\tlet valor = parseInt(document.getElementById('plano_x_min').value);\n\t\top == '+' ? valor++ : valor--;\n\t\tif (valor > -1) {\n\t\t\tvalor = -1;\n\t\t} else {\n\t\t\tdocument.getElementById('plano_x_min').value = valor;\n\t\t\ts_planoUpdateXmin(valor);\n\t\t}\n\t};\n\tconst handleYmax = (op) => {\n\t\tlet valor = parseInt(document.getElementById('plano_y_max').value);\n\t\top == '+' ? valor++ : valor--;\n\t\tif (valor < 1) {\n\t\t\tvalor = 1;\n\t\t} else {\n\t\t\tdocument.getElementById('plano_y_max').value = valor;\n\t\t\ts_planoUpdateYmax(valor);\n\t\t}\n\t};\n\tconst handleWidth = (op) => {\n\t\tlet valor = parseInt(document.getElementById('plano_width').value);\n\t\top == '+' ? (valor = valor + 10) : (valor = valor - 10);\n\t\tif (valor < 10) {\n\t\t\tvalor = 10;\n\t\t} else {\n\t\t\tif (valor > 50) {\n\t\t\t\tvalor = 50;\n\t\t\t} else {\n\t\t\t\tdocument.getElementById('plano_width').value = valor;\n\t\t\t\ts_planoUpdateWidthCuadricula(valor);\n\t\t\t}\n\t\t}\n\t};\n\tconst updatePaletaInicio = () => {\n\t\tdocument.getElementById('plano_y_max').value = statePlano.y_max;\n\t\tdocument.getElementById('plano_x_min').value = statePlano.x_min;\n\t\tdocument.getElementById('plano_width').value = statePlano.width_cuadricula;\n\t};\n\t// LOGICA END.\n\n\t// useEffect\n\tuseEffect(() => {\n\t\tupdatePaletaInicio();\n\t}, []);\n\treturn (\n\t\t<article className=\"article__menuPlano\">\n\t\t\t<div className=\"article__menuPlano__limiteXY\">\n\t\t\t\t<span>- X: </span>\n\t\t\t\t<span>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tdefaultValue=\"-10\"\n\t\t\t\t\t\tid=\"plano_x_min\"\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<input type=\"button\" value=\"-\" onClick={() => handleXmin('-')} />\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<input type=\"button\" value=\"+\" onClick={() => handleXmin('+')} />\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className=\"article__menuPlano__limiteXY\">\n\t\t\t\t<span>+ Y:</span>\n\t\t\t\t<span>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tdefaultValue=\"10\"\n\t\t\t\t\t\tid=\"plano_y_max\"\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<input type=\"button\" value=\"-\" onClick={() => handleYmax('-')} />\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<input type=\"button\" value=\"+\" onClick={() => handleYmax('+')} />\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className=\"article__menuPlano__width\">\n\t\t\t\t<span>WIDTH:</span>\n\t\t\t\t<span>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tdefaultValue=\"10\"\n\t\t\t\t\t\tid=\"plano_width\"\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t/>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<input type=\"button\" value=\"-\" onClick={() => handleWidth('-')} />\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<input type=\"button\" value=\"+\" onClick={() => handleWidth('+')} />\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default MenuPlano;\n","import React from 'react';\n\nconst MenuMover = () => {\n\treturn <div>mover</div>;\n};\n\nexport default MenuMover;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\n\n// styles:\nimport '../styles/PaletaColor.scss';\nimport iconLineaNone from '../assets/icons/lineaNone.svg';\n\nconst PaletaColor = (value) => {\n\t// useContext:\n\tconst { state, updateColor, updateColorFondo } = useContext(AppContext);\n\n\t// LOGICA:\n\tconst arrayPaletaColor = [\n\t\t{ colorLine: 'white', id: `colorNone-${value.tipo}` },\n\t\t{ colorLine: 'black', id: `colorBlack-${value.tipo}` },\n\t\t{ colorLine: 'red', id: `colorRed-${value.tipo}` },\n\t\t{ colorLine: 'green', id: `colorGreen-${value.tipo}` },\n\t\t{ colorLine: 'blue', id: `colorBlue-${value.tipo}` },\n\t\t{ colorLine: 'yellow', id: `colorYellow-${value.tipo}` },\n\t];\n\tconst updatePaletaColor = (color) => {\n\t\tarrayPaletaColor.forEach((dato) =>\n\t\t\tdocument.getElementById(dato.id).classList.remove('activePaletaColor')\n\t\t);\n\t\tlet elem = arrayPaletaColor.find((elem) => elem.colorLine == color);\n\t\tdocument.getElementById(elem.id).classList.add('activePaletaColor');\n\t};\n\tconst handlePaletaColor = (color) => {\n\t\tupdatePaletaColor(color);\n\t\tvalue.tipo == 'linea'\n\t\t\t? updateColor(color) // CONTEXT COLOR\n\t\t\t: updateColorFondo(color); // CONTEXT colorFondo\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t// se ejecuta solo la 1ra vez que se carga el componente.\n\t\tvalue.tipo == 'linea'\n\t\t\t? updatePaletaColor(state.color)\n\t\t\t: updatePaletaColor(state.colorFondo);\n\t}, [updateColor, updateColorFondo]);\n\n\treturn (\n\t\t<div className=\"article__menuLapiz__paletaColor\">\n\t\t\t<div>\n\t\t\t\t<span>{value.title}: </span>\n\t\t\t</div>\n\t\t\t<div className=\"article__menuLapiz__paletaColor__container\">\n\t\t\t\t{arrayPaletaColor.map((elem) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`color activePaletaColor ${elem.colorLine}`}\n\t\t\t\t\t\tid={elem.id}\n\t\t\t\t\t\tonClick={() => handleColor('colorNegro')}\n\t\t\t\t\t\tkey={elem.id}\n\t\t\t\t\t\tonClick={() => handlePaletaColor(elem.colorLine)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{elem.colorLine == 'white' && <img src={iconLineaNone} />}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default PaletaColor;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\n\n// styles:\nimport '../styles/PaletaGrosor.scss';\n//import iconLineaNone from '../assets/icons/lineaNone.svg';\nimport iconLineaS from '../assets/icons/lineaS.svg';\nimport iconLineaM from '../assets/icons/lineaM.svg';\nimport iconLineaL from '../assets/icons/lineaL.svg';\nimport iconLineaXL from '../assets/icons/lineaXL.svg';\nimport iconLineaXXL from '../assets/icons/lineaXXL.svg';\n\nconst PaletaGrosor = (title) => {\n\t// useContext:\n\tconst { state, updateGrosor } = useContext(AppContext);\n\n\t// LOGICA:\n\tconst arrayIconLinea = [\n\t\t//{ iconLine: iconLineaNone, grosor: 0, id: 'iconLineaNone' },\n\t\t{ iconLine: iconLineaS, grosor: 1, id: 'iconLineaS' },\n\t\t{ iconLine: iconLineaM, grosor: 2, id: 'iconLineaM' },\n\t\t{ iconLine: iconLineaL, grosor: 4, id: 'iconLineaL' },\n\t\t{ iconLine: iconLineaXL, grosor: 6, id: 'iconLineaXL' },\n\t\t{ iconLine: iconLineaXXL, grosor: 10, id: 'iconLineaXXL' },\n\t];\n\tconst updatePaletaGrosor = (grosor) => {\n\t\tconst array = document.querySelectorAll('.activeIconLinea');\n\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\tarray[i].classList.remove('activeIconLinea');\n\t\t}\n\t\tlet elem = arrayIconLinea.find((elem) => elem.grosor == grosor);\n\t\tdocument.getElementById(elem.id).classList.add('activeIconLinea');\n\t};\n\tconst handleLineaGrosor = (grosor) => {\n\t\tupdatePaletaGrosor(grosor);\n\t\tupdateGrosor(grosor); // CONTEXT\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t// se ejecuta solo la 1ra vez que se carga el componente.\n\t\tupdatePaletaGrosor(state.grosor);\n\t}, []);\n\n\treturn (\n\t\t<div className=\"article__menuLapiz__tamano\">\n\t\t\t<span htmlFor=\"\">{title.title}: </span>\n\t\t\t<div className=\"article__menuLapiz__tamano__icons\">\n\t\t\t\t{arrayIconLinea.map((elem) => (\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"article__menuLapiz__tamano__icons__icon \"\n\t\t\t\t\t\tsrc={elem.iconLine}\n\t\t\t\t\t\tid={elem.id}\n\t\t\t\t\t\tkey={`key-${elem.id}`}\n\t\t\t\t\t\tonClick={() => handleLineaGrosor(elem.grosor)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default PaletaGrosor;\n","import React, { useContext, useEffect } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\nimport AppContextLapiz from '../context/AppContextLapiz';\n\n// components:\nimport PaletaColor from '../components/PaletaColor';\nimport PaletaGrosor from '../components/PaletaGrosor';\n\n// styles:\nimport '../styles/MenuLapiz.scss';\n\nconst MenuLapiz = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\tconst { updateLapizColorGrosor } = useContext(AppContextLapiz);\n\n\t// LOGICA:\n\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tupdateLapizColorGrosor(state.color, state.grosor);\n\t}, [state]);\n\tuseEffect(() => {\n\t\t//console.log('STATE LAPIZ:', stateLapiz);\n\t}, []);\n\n\treturn (\n\t\t<article className=\"article__menuLapiz\">\n\t\t\t{<PaletaGrosor title=\"LINEA\" />}\n\t\t\t{<PaletaColor tipo=\"linea\" title=\"Color\" />}\n\t\t</article>\n\t);\n};\n\nexport default MenuLapiz;\n","import React, { useContext, useEffect } from 'react';\n\n// context:\nimport AppContextBorrador from '../context/AppContextBorrador';\n\n// style:\nimport '../styles/MenuBorrador.scss';\n\nconst MenuBorrador = () => {\n\t// useContext:\n\tconst { stateBorrador, updateBorradorGrosor } =\n\t\tuseContext(AppContextBorrador);\n\n\t// LOGICA:\n\tconst updatePaletaGrosor = (grosor) => {\n\t\tdocument.getElementById('grosorBorrador').value = grosor;\n\t};\n\tconst handleGrosor = (opMatematica) => {\n\t\tlet valor = parseInt(document.getElementById('grosorBorrador').value);\n\t\tlet update = true;\n\t\tswitch (opMatematica) {\n\t\t\tcase '+':\n\t\t\t\tvalor + 1 < 20 ? (valor = valor + 1) : (update = false);\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\tvalor - 1 > 0 ? (valor = valor - 1) : (update = false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tif (update) {\n\t\t\tdocument.getElementById('grosorBorrador').value = valor;\n\t\t\tupdateBorradorGrosor(valor); // CONTEXT\n\t\t} else {\n\t\t\tconsole.log('limite');\n\t\t}\n\t};\n\t// LOGICA END.\n\n\t// EFFECT:\n\tuseEffect(() => {\n\t\t//updatePaletaGrosor(stateBorrador.grosor);\n\t}, [stateBorrador, updateBorradorGrosor]);\n\n\treturn (\n\t\t<article className=\"article__menuBorrador\">\n\t\t\t<div className=\"article__menuBorrador__tamano\">\n\t\t\t\t<span htmlFor=\"\">BORRADOR</span>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default MenuBorrador;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\n\n// styles:\nimport '../styles/MenuCuadrado.scss';\n\n// components:\nimport PaletaGrosor from '../components/PaletaGrosor';\nimport PaletaColorBorde from '../components/PaletaColor';\nimport PaletaColorFondo from '../components/PaletaColor';\n\nconst MenuCuadrado = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\tconst {\n\t\tstateCuadrado,\n\t\tupdateCuadradoBordeGrosor,\n\t\tupdateCuadradoBorde_ColorEstado,\n\t\tupdateCuadradoFondo_ColorEstado,\n\t\tupdate_all,\n\t} = useContext(AppContextCuadrado);\n\n\t// LOGICA:\n\t// LOGICA END\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t// solo 1 vez al cargar el componente:\n\t}, []);\n\tuseEffect(() => {\n\t\t// solo cuando se modifica [stateCuadrado]:\n\t}, [stateCuadrado]);\n\n\tuseEffect(() => {\n\t\t// se ejecuta cada vez que se modifica el state.color\n\t\tupdateCuadradoBorde_ColorEstado(state.color, state.color != 'white');\n\t}, [state.color]);\n\n\tuseEffect(() => {\n\t\t// se ejecuta cada vez que se modifica el state\n\t\tupdateCuadradoFondo_ColorEstado(\n\t\t\tstate.colorFondo,\n\t\t\tstate.colorFondo != 'white'\n\t\t);\n\t}, [state.colorFondo]);\n\n\tuseEffect(() => {\n\t\tupdateCuadradoBordeGrosor(state.grosor);\n\t}, [state.grosor]);\n\n\tuseEffect(() => {\n\t\tupdate_all(\n\t\t\tstate.color,\n\t\t\tstate.colorFondo,\n\t\t\tstate.grosor,\n\t\t\tstate.color != 'white',\n\t\t\tstate.colorFondo != 'white'\n\t\t);\n\t}, []);\n\treturn (\n\t\t<article className=\"article__menuCuadrado\">\n\t\t\t{<PaletaGrosor title=\"BORDE\" />}\n\t\t\t{<PaletaColorBorde tipo=\"linea\" title=\"Borde\" />}\n\t\t\t{<PaletaColorFondo tipo=\"fondo\" title=\"Fondo\" />}\n\t\t</article>\n\t);\n};\n\nexport default MenuCuadrado;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContextCanvas from '../context/AppContextCanvas';\n\n// styles:\nimport '../styles/MenuCuadricula.scss';\nimport iconCuadricula from '../assets/icons/cuadricula.svg';\nimport iconCuadriculaSin from '../assets/icons/cuadriculaSin.svg';\nimport iconCuadriculaNone from '../assets/icons/lineaNone.svg';\n\nconst MenuCuadricula = () => {\n\t// useContext:\n\tconst { stateCanvas, updateTipoCuadricula, updateCuadriculaWidth } =\n\t\tuseContext(AppContextCanvas);\n\n\t// LOGICA:\n\tconst arrayIconCuadricula = [\n\t\t{\n\t\t\ticonCuadricula: iconCuadricula,\n\t\t\ttipo: 'cuadricula',\n\t\t\tid: 'iconCuadricula',\n\t\t},\n\t\t{\n\t\t\ticonCuadricula: iconCuadriculaSin,\n\t\t\ttipo: 'linea',\n\t\t\tid: 'iconCuadriculaSin',\n\t\t},\n\t\t{\n\t\t\ticonCuadricula: iconCuadriculaNone,\n\t\t\ttipo: 'ninguno',\n\t\t\tid: 'iconCuadriculaNone',\n\t\t},\n\t];\n\tconst updatePaleta_tipoCuadricula = (tipo) => {\n\t\tconst array = document.querySelectorAll('.activeIconCuadricula');\n\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\tarray[i].classList.remove('activeIconCuadricula');\n\t\t}\n\t\tlet elem = arrayIconCuadricula.find((elem) => elem.tipo == tipo);\n\t\tdocument.getElementById(elem.id).classList.add('activeIconCuadricula');\n\t};\n\tconst handleCuadriculaTipo = (tipo) => {\n\t\tupdatePaleta_tipoCuadricula(tipo);\n\t\tupdateTipoCuadricula(tipo);\n\t};\n\tconst handleBtnAncho = (op) => {\n\t\top == '-' && stateCanvas.cuadriculaWidth > 10\n\t\t\t? updateCuadriculaWidth(stateCanvas.cuadriculaWidth - 10)\n\t\t\t: '';\n\t\top == '+' ? updateCuadriculaWidth(stateCanvas.cuadriculaWidth + 10) : '';\n\t};\n\t// LOGICA END.\n\n\t// useEffect\n\tuseEffect(() => {\n\t\tupdatePaleta_tipoCuadricula(stateCanvas.tipoCuadricula);\n\t}, []);\n\n\treturn (\n\t\t<article className=\"article__menuCuadricula\">\n\t\t\t<div className=\"article__menuCuadricula__paletaTipo\">\n\t\t\t\t<div>\n\t\t\t\t\t<span>Cuadricula: </span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"article__menuCuadricula__paletaTipo__icons\">\n\t\t\t\t\t{arrayIconCuadricula.map((elem) => (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName=\"article__menuCuadricula__paletaTipo__icons__icon \"\n\t\t\t\t\t\t\tsrc={elem.iconCuadricula}\n\t\t\t\t\t\t\tid={elem.id}\n\t\t\t\t\t\t\tkey={`key-${elem.id}`}\n\t\t\t\t\t\t\tonClick={() => handleCuadriculaTipo(elem.tipo)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"article__menuCuadricula__paletaAncho\">\n\t\t\t\t<div>\n\t\t\t\t\t<span>Tamaño: </span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputButton\">\n\t\t\t\t\t<input type=\"button\" value=\"-\" onClick={() => handleBtnAncho('-')} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputButton\">\n\t\t\t\t\t<input type=\"button\" value=\"+\" onClick={() => handleBtnAncho('+')} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default MenuCuadricula;\n","import React, { useContext, useEffect } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\nimport AppContextLinea from '../context/AppContextLinea';\n\n// components:\nimport PaletaColor from '../components/PaletaColor';\nimport PaletaGrosor from '../components/PaletaGrosor';\n\n// styles:\nimport '../styles/MenuLinea.scss';\n\nconst MenuLinea = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\tconst { updateLineaColorGrosor } = useContext(AppContextLinea);\n\n\t// LOGICA:\n\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tupdateLineaColorGrosor(state.color, state.grosor);\n\t}, [state]);\n\tuseEffect(() => {\n\t\t//console.log('STATE Linea:', stateLinea);\n\t}, []);\n\n\treturn (\n\t\t<article className=\"article__menuLinea\">\n\t\t\t{<PaletaGrosor title=\"LINEA\" />}\n\t\t\t{<PaletaColor tipo=\"linea\" title=\"Color\" />}\n\t\t</article>\n\t);\n};\n\nexport default MenuLinea;\n","import React, { useContext, useEffect } from 'react';\n\nimport AppContextText from '../context/AppContextText';\n\nimport '../styles/MenuText.scss';\n\nimport { u_textGrafica } from '../utils/UtilsText';\n\nconst MenuText = () => {\n\t// useContext:\n\tconst { s_textUpdateColor, stateText, s_textUpdateTamano, s_textAddHId } =\n\t\tuseContext(AppContextText);\n\n\t// LOGICA\n\tlet canvas = '';\n\tlet context = '';\n\tconst textoNew = {\n\t\tid: stateText.id,\n\t\ttamano: 11,\n\t\ttexto: 'new text',\n\t\tx_ini: 400,\n\t\ty_ini: 400,\n\t\tcolor: stateText.color,\n\t\tvisible: true,\n\t};\n\tconst arrayColorLinea = [\n\t\t{ colorLine: 'black', id: 'colorBlackText' },\n\t\t{ colorLine: 'red', id: 'colorRedText' },\n\t\t{ colorLine: 'green', id: 'colorGreenText' },\n\t\t{ colorLine: 'blue', id: 'colorBlueText' },\n\t\t{ colorLine: 'yellow', id: 'colorYellowText' },\n\t];\n\tconst graficaTexto = (context, obj) => {\n\t\tcontext.fillStyle = 'red'; //color de relleno\n\t\tcontext.font = `${obj.tamano}px arial`; //estilo de texto\n\t\tcontext.beginPath(); //iniciar ruta\n\t\tcontext.fillText(obj.texto, obj.x_ini, obj.y_ini); //texto con método stroke\n\t\tcontext.closePath();\n\t};\n\tconst graficaTexto2 = () => {\n\t\tcanvas = document.getElementById('canvas-1');\n\t\tcontext = canvas.getContext('2d');\n\t\tcontext.fillStyle = textoNew.color; //color de relleno\n\t\tcontext.font = `${textoNew.tamano}px arial`; //estilo de texto\n\t\tcontext.beginPath(); //iniciar ruta\n\t\tcontext.fillText(textoNew.texto, textoNew.x_ini, textoNew.y_ini); //texto con método stroke\n\t\tcontext.closePath();\n\t};\n\tconst updatePaletaColor = (color) => {\n\t\tconst array = document.querySelectorAll('.activeColorText');\n\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\tarray[i].classList.remove('activeColorText');\n\t\t}\n\t\tlet elem = arrayColorLinea.find((elem) => elem.colorLine == color);\n\t\tlet x = document.getElementById(elem.id);\n\t\tx.classList.add('activeColorText');\n\t\ttextoNew.color = color;\n\t};\n\tconst updatePaletaSize = (size) => {\n\t\tdocument.getElementById('t_inputTamano').value = size;\n\t};\n\tconst updatePaletaTexto = (txt) => {\n\t\tdocument.getElementById('t_inputTexto').value = txt;\n\t};\n\tconst handleColor = (color) => {\n\t\tupdatePaletaColor(color);\n\t\ts_textUpdateColor(color); // CONTEXT\n\t};\n\tconst handleAdd = () => {\n\t\tlet tamano = document.getElementById('t_inputTamano').value;\n\t\tlet texto = document.getElementById('t_inputTexto').value;\n\t\tlet color = stateText.color;\n\t\ttextoNew.texto = texto;\n\t\ttextoNew.color = color;\n\t\ttextoNew.tamano = tamano;\n\t\tgraficaTexto2();\n\t\t//u_textGrafica(context, textoNew);\n\t\ts_textAddHId(textoNew, stateText.id + 1);\n\t};\n\tconst handleSize = (op) => {\n\t\tlet tamano = parseInt(document.getElementById('t_inputTamano').value);\n\t\tif (op == '+') tamano++;\n\t\telse tamano--;\n\t\tdocument.getElementById('t_inputTamano').value = tamano;\n\t\ts_textUpdateTamano(tamano);\n\t};\n\n\t// LOGICA END\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById('canvas-1');\n\t\tcontext = canvas.getContext('2d');\n\t\tupdatePaletaColor(stateText.color);\n\t\tupdatePaletaSize(stateText.tamano);\n\t\tupdatePaletaTexto(stateText.texto);\n\t}, []);\n\treturn (\n\t\t<article className=\"article__menuText\">\n\t\t\t<div className=\"article__menuText__tamano\">\n\t\t\t\t<span htmlFor=\"\">TAMAÑO: </span>\n\t\t\t\t<input type=\"text\" defaultValue=\"11\" id=\"t_inputTamano\" />\n\t\t\t\t<input type=\"button\" value=\"-\" onClick={() => handleSize('-')} />\n\t\t\t\t<input type=\"button\" value=\"+\" onClick={() => handleSize('+')} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input type=\"text\" defaultValue=\"hola daniel\" id=\"t_inputTexto\" />\n\t\t\t\t<input type=\"button\" value=\"ADD\" onClick={() => handleAdd()} />\n\t\t\t</div>\n\t\t\t<div className=\"article__menuText__paletaColor\">\n\t\t\t\t<div>\n\t\t\t\t\t<span>COLOR: </span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"article__menuText__paletaColor__container\">\n\t\t\t\t\t{arrayColorLinea.map((elem) => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`color activeColorText ${elem.colorLine}`}\n\t\t\t\t\t\t\tid={elem.id}\n\t\t\t\t\t\t\tkey={elem.id}\n\t\t\t\t\t\t\tonClick={() => handleColor(elem.colorLine)}\n\t\t\t\t\t\t></div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default MenuText;\n","import React, { useEffect, useContext, useState } from 'react';\n\n// estilos:\nimport '../styles/Header.scss';\n\n// containers:\nimport Menu1 from '../containers/Menu1';\nimport MenuPlano from '../containers/MenuPlano';\nimport MenuMover from '../containers/MenuMover';\nimport MenuLapiz from '../containers/MenuLapiz';\nimport MenuBorrador from '../containers/MenuBorrador';\nimport MenuCuadrado from '../containers/MenuCuadrado';\nimport MenuCuadricula from '../containers/MenuCuadricula';\nimport MenuLinea from '../containers/MenuLinea';\nimport MenuText from '../containers/MenuText';\n\n// context:\nimport AppContext from '../context/AppContext';\n\n// iconos:\n\nconst Header = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\n\t// useState:\n\tconst [toggleMenu1, setToggleMenu1] = useState(false);\n\t//const [toggleMenu2, setToggleMenu2] = useState(false);\n\tconst [toggleMenuMover, setToggleMenuMover] = useState(false);\n\tconst [toggleMenuLapiz, setToggleMenuLapiz] = useState(false);\n\tconst [toggleMenuBorrador, setToggleMenuBorrador] = useState(false);\n\tconst [toggleMenuCuadrado, setToggleMenuCuadrado] = useState(false);\n\tconst [toggleMenuCuadricula, setToggleMenuCuadricula] = useState(false);\n\tconst [toggleMenuLinea, setToggleMenuLinea] = useState(false);\n\tconst [toggleMenuPlano, setToggleMenuPlano] = useState(false);\n\tconst [toggleMenuText, setToggleMenuText] = useState(false);\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tswitch (state.active) {\n\t\t\tcase 'moverIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(true);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lapizIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(true);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'borradorIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(true);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadradoIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(true);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lineaIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(true);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'planoIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(true);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadriculaIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(true);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'textIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetToggleMenu1(true);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tbreak;\n\t\t}\n\t}, [state]);\n\treturn (\n\t\t<nav className=\"header__nav\">\n\t\t\t<div className=\"navbar-left\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"/\">MathBoard</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div className=\"navbar-central\">\n\t\t\t\t{toggleMenu1 && <Menu1 />}\n\t\t\t\t{toggleMenuPlano && <MenuPlano />}\n\t\t\t\t{toggleMenuMover && <MenuMover />}\n\t\t\t\t{toggleMenuLapiz && <MenuLapiz />}\n\t\t\t\t{toggleMenuBorrador && <MenuBorrador />}\n\t\t\t\t{toggleMenuCuadrado && <MenuCuadrado />}\n\t\t\t\t{toggleMenuCuadricula && <MenuCuadricula />}\n\t\t\t\t{toggleMenuLinea && <MenuLinea />}\n\t\t\t\t{toggleMenuText && <MenuText />}\n\t\t\t</div>\n\t\t\t<div className=\"navbar-right\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li className=\"navbar-email\">UMSA / INFORMÁTICA</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\n\nexport default Header;\n","import React from 'react';\n\nimport '../styles/Key.scss';\n\nconst Key = (valor) => {\n\tconst handleClick = (key) => {\n\t\tconsole.log(key);\n\t};\n\n\treturn (\n\t\t<input\n\t\t\ttype=\"button\"\n\t\t\tvalue={valor.element}\n\t\t\tclassName={`key ${valor.element}`}\n\t\t\tonClick={() => handleClick(valor.element)}\n\t\t/>\n\t);\n};\n\nexport default Key;\n","import React, { useState, useContext } from 'react';\n\nimport AppContext from '../context/AppContext';\n\nimport '../styles/KeySvg.scss';\n\nconst KeySvg = (svg) => {\n\tconst [toggleShift, setToggleShift] = useState(false);\n\n\tconst { toLowerCase, toUpperCase } = useContext(AppContext);\n\n\tconst handleClick = (option) => {\n\t\tswitch (option) {\n\t\t\tcase 'shift-fill':\n\t\t\t\tconsole.log(option);\n\t\t\t\tsetToggleShift(!toggleShift);\n\t\t\t\ttoggleShift ? toUpperCase() : toLowerCase();\n\t\t\t\tbreak;\n\t\t\tcase 'DEL':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tcase 'caret-left':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tcase 'caret-right':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tcase 'backspace':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\treturn (\n\t\t<input\n\t\t\ttype=\"button\"\n\t\t\tvalue=\"\"\n\t\t\tclassName={`keySvg ${svg.element}`}\n\t\t\tid={svg.element}\n\t\t\tonClick={() => handleClick(svg.element)}\n\t\t/>\n\t);\n};\n\nexport default KeySvg;\n","import React from 'react';\n\nimport '../styles/KeySvg.scss';\n\nconst KeyTxt = (txt) => {\n\tconst handleClick = (option) => {\n\t\tconsole.log(option);\n\t};\n\n\treturn (\n\t\t<input\n\t\t\ttype=\"button\"\n\t\t\tvalue={txt.element}\n\t\t\tclassName={`keySvg ${txt.element}`}\n\t\t\tid={txt.element}\n\t\t\tonClick={() => handleClick(txt.element)}\n\t\t/>\n\t);\n};\n\nexport default KeyTxt;\n","import React, { useState, useContext } from 'react';\n\nimport AppContext from '../context/AppContext';\n\nimport Key from '../components/key';\nimport KeySvg from '../components/KeySvg';\nimport KeyTxt from '../components/KeyTxt';\n\nimport '../styles/Keyboard.scss';\n\nconst Keyboard = () => {\n\tconst { state } = useContext(AppContext);\n\tconst array = state.alfabeto;\n\n\tconst arrayNumbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n\treturn (\n\t\t<aside className=\"keyboard\">\n\t\t\t<div className=\"keyboard__alfaNumerico\">\n\t\t\t\t<div>\n\t\t\t\t\t{arrayNumbers.map((element) => (\n\t\t\t\t\t\t<Key element={element} key={`key-${element}`} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{array[0].map((elm) => (\n\t\t\t\t\t\t<Key element={elm} key={`key-${elm}`} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{array[1].map((elm) => (\n\t\t\t\t\t\t<Key element={elm} key={`key-${elm}`} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"keyboard__alfaNumerico__flex\">\n\t\t\t\t\t<KeySvg element={'shift-fill'} key={`key-fill`} />\n\t\t\t\t\t{array[2].map((elm) => (\n\t\t\t\t\t\t<Key element={elm} key={`key-${elm}`} />\n\t\t\t\t\t))}\n\t\t\t\t\t<KeySvg element={'backspace'} key={`key-backspace`} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"keyboard__alfaNumerico__flex\">\n\t\t\t\t\t<KeyTxt element={'DEL'} key={`key-del`} />\n\t\t\t\t\t<Key element={'espacio'} key={`key-espacio`} />\n\t\t\t\t\t<KeySvg element={'caret-left'} key={`key-caret-left`} />\n\t\t\t\t\t<KeySvg element={'caret-right'} key={`key-caret-right`} />\n\t\t\t\t\t<KeyTxt element={'INI'} key={`key-ini`} />\n\t\t\t\t\t<KeyTxt element={'FIN'} key={`key-fin`} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"keyboard__simbolos\">simbolos</div>\n\t\t</aside>\n\t);\n};\n\nexport default Keyboard;\n","import React, { useState, useContext, useEffect } from 'react';\n\nimport AppContext from '../context/AppContext';\nimport AppContextMover from '../context/AppContextMover';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextBorrador from '../context/AppContextBorrador';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextCuadricula from '../context/AppContextCanvas';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\nimport Keyboard from '../containers/Keyboard';\n\nimport '../styles/NavIzq.scss';\nimport moverIcon from '../assets/icons/move1.svg';\nimport lapizIcon from '../assets/icons/pen1.svg';\nimport borradorIcon from '../assets/icons/eraser1.svg';\nimport calculadoraIcon from '../assets/icons/calculator.svg';\nimport planoIcon from '../assets/icons/graph-up.svg';\nimport plusIcon from '../assets/icons/plus-square.svg';\nimport textIcon from '../assets/icons/textarea.svg';\nimport zoomInIcon from '../assets/icons/zoom-in.svg';\nimport zoomOutIcon from '../assets/icons/zoom-out.svg';\nimport cuadradoIcon from '../assets/icons/square.svg';\nimport lineaIcon from '../assets/icons/linea.svg';\nimport funcionIcon from '../assets/icons/function1.svg';\nimport sumatoriaIcon from '../assets/icons/sumatoria1.svg';\nimport imageIcon from '../assets/icons/image1.svg';\n\nimport cuadriculaIcon from '../assets/icons/cuadricula.svg';\nimport keyboardIcon from '../assets/icons/keyboard1.svg';\n\nconst NavIzq = () => {\n\t// useContext:\n\tconst { state, updateCanvasPaleta } = useContext(AppContext);\n\tconst { updateMoverActive } = useContext(AppContextMover);\n\tconst { updateLapizActive } = useContext(AppContextLapiz);\n\tconst { updateBorradorActive } = useContext(AppContextBorrador);\n\tconst { updateCuadradoActive } = useContext(AppContextCuadrado);\n\tconst { updateCuadriculaActive } = useContext(AppContextCuadricula);\n\tconst { updateLineaActive } = useContext(AppContextLinea);\n\tconst { updatePlanoActive } = useContext(AppContextPlano);\n\tconst { updateTextActive } = useContext(AppContextText);\n\n\t// useState:\n\tconst [toggleKeyboard, setToggleKeyboard] = useState(false);\n\n\tconst iconosPaleta = [\n\t\t[moverIcon, 'moverIcon'],\n\t\t[lapizIcon, 'lapizIcon'],\n\t\t[borradorIcon, 'borradorIcon'],\n\t\t// [funcionIcon, 'funcionIcon'],\n\t\t// [sumatoriaIcon, 'sumatoriaIcon'],\n\t\t[textIcon, 'textIcon'],\n\t\t[lineaIcon, 'lineaIcon'],\n\t\t[cuadradoIcon, 'cuadradoIcon'],\n\t\t// [calculadoraIcon, 'calculadoraIcon'],\n\t\t[planoIcon, 'planoIcon'],\n\t\t// [imageIcon, 'imageIcon'],\n\t\t// [zoomInIcon, 'zoomInIcon'],\n\t\t// [zoomOutIcon, 'zoomOutIcon'],\n\t\t[cuadriculaIcon, 'cuadriculaIcon'],\n\t];\n\n\tconst handleIcon = (icon) => {\n\t\t// HOOKS - useInitialState:\n\t\tupdateCanvasPaleta(icon);\n\n\t\t// HOOKS - useLapiz:\n\t\tswitch (icon) {\n\t\t\tcase 'moverIcon':\n\t\t\t\tupdateMoverActive(true);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lapizIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(true);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'borradorIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(true);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lineaIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(true);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadradoIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(true);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'planoIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(true);\n\t\t\t\tupdateCuadriculaActive(true);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadriculaIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(true);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'textIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tupdateTextActive(true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('Opcion no registrada!!!');\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t//console.log('useEffect: [state]');\n\t\ticonosPaleta.map((elem) => {\n\t\t\tif (state.active == elem[1]) {\n\t\t\t\tdocument.getElementById(elem[1]).classList.add('navIzq__nav__active');\n\t\t\t} else {\n\t\t\t\tdocument\n\t\t\t\t\t.getElementById(elem[1])\n\t\t\t\t\t.classList.remove('navIzq__nav__active');\n\t\t\t}\n\t\t});\n\t\treturn () => {\n\t\t\t//console.log('return useEffect: [state]');\n\t\t};\n\t}, [state]);\n\n\treturn (\n\t\t<nav className=\"navIzq__nav\">\n\t\t\t<div className=\"navIzq__nav__top\">\n\t\t\t\t{iconosPaleta.map((elem) => (\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={elem[0]}\n\t\t\t\t\t\tonClick={() => handleIcon(elem[1])}\n\t\t\t\t\t\tkey={elem[1]}\n\t\t\t\t\t\tid={elem[1]}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"navIzq__nav__botton\">\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"navIzq__nav__div__keyboard\"\n\t\t\t\t\tsrc={keyboardIcon}\n\t\t\t\t\tonClick={() => setToggleKeyboard(!toggleKeyboard)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{toggleKeyboard && <Keyboard />}\n\t\t</nav>\n\t);\n};\n\nexport default NavIzq;\n","const utilsCuadricula_graficaCuadricula = (context, canvas) => {\n\tcontext.lineWidth = canvas.lineaGrosor; // lineaGrosor\n\tcontext.strokeStyle = canvas.lineaColor; // lineaColor\n\tcontext.fillStyle = 'white';\n\tcontext.setLineDash([0, 0]);\n\n\tcontext.beginPath();\n\tcontext.moveTo(0, 0); // (x_ini, y_ini)\n\tcontext.lineTo(canvas.width, 0); // (x_fin, y_ini)\n\tcontext.lineTo(canvas.width, canvas.height); // (x_fin, y_ini)\n\tcontext.lineTo(0, canvas.height); // (x_fin, y_ini)\n\tcontext.lineTo(0, 0); // (x_fin, y_ini)\n\tcontext.fill();\n\tcontext.stroke(); // bordeColor = true\n\tcontext.closePath();\n\n\t// VERTICAL: |\n\tif (canvas.tipoCuadricula == 'cuadricula') {\n\t\tlet nroLineasV = canvas.width / canvas.cuadriculaWidth - 1;\n\t\tlet incV = canvas.cuadriculaWidth;\n\t\tlet i = 0;\n\t\tfor (i = 0; i < nroLineasV; i++) {\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(incV, 0); // (x_ini, y_ini)\n\t\t\tcontext.lineTo(incV, canvas.height); // (x_fin, y_ini)\n\t\t\tcontext.stroke(); // bordeColor = true\n\t\t\tincV = incV + canvas.cuadriculaWidth;\n\t\t}\n\t}\n\t// HORIZONTAL: -\n\tif (\n\t\tcanvas.tipoCuadricula == 'cuadricula' ||\n\t\tcanvas.tipoCuadricula == 'linea'\n\t) {\n\t\tlet nroLineasH = canvas.height / canvas.cuadriculaWidth - 1;\n\t\tlet incH = canvas.cuadriculaWidth;\n\t\tlet i = 0;\n\t\tfor (i = 0; i < nroLineasH; i++) {\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(0, incH); // (x_ini, y_ini)\n\t\t\tcontext.lineTo(canvas.width, incH); // (x_fin, y_ini)\n\t\t\tcontext.stroke(); // bordeColor = true\n\t\t\tincH = incH + canvas.cuadriculaWidth;\n\t\t}\n\t}\n};\n\nexport { utilsCuadricula_graficaCuadricula };\n","const Texto = {\n\ttexto: 'Hola mundo', //texto de prueba\n\ttexto_color: 'black', //color externo\n\ttexto_fondo: 'black', //color de relleno\n\ttexto_font: 'bold 20px arial', //estilo de texto\n};\nconst generaRango = (start, stop, step) =>\n\tArray.from({ length: (stop - start) / step + 1 }, (_, i) => start + i * step);\n// ej. let array = generaRango(inicio, fin, salto);\n\nconst uPlano_graficaNumeros = (context, plano) => {\n\tlet arrayX = [];\n\tlet width = plano.x_fin - plano.x_ini;\n\tlet n = parseInt(width / plano.width_cuadricula);\n\tlet x = plano.x_min;\n\tfor (let i = 0; i < n - 1; i++) {\n\t\tarrayX.push(x);\n\t\tx = x + plano.salto;\n\t}\n\tcontext.fillStyle = 'black'; //color de relleno\n\tcontext.font = '11px arial'; //estilo de texto\n\tcontext.beginPath(); //iniciar ruta\n\tlet x1 = plano.x_ini + plano.width_cuadricula - 3;\n\tlet y1 = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula + 11;\n\tarrayX.forEach((x) => {\n\t\tx != 0\n\t\t\t? context.fillText(x, x1, y1) //texto con método stroke\n\t\t\t: context.fillText(x, x1 - 5, y1);\n\t\tx1 = x1 + plano.width_cuadricula;\n\t});\n\tcontext.closePath();\n\n\tlet arrayY = [];\n\tlet heigth = plano.y_fin - plano.y_ini;\n\tn = parseInt(heigth / plano.width_cuadricula);\n\tlet y = plano.y_max;\n\tfor (let i = 0; i < n; i++) {\n\t\tarrayY.push(y);\n\t\ty = y - plano.salto;\n\t}\n\tx1 = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula - 3;\n\ty1 = plano.y_ini + plano.width_cuadricula + 5;\n\n\tcontext.textAlign = 'end';\n\tcontext.beginPath(); //iniciar ruta\n\tarrayY.forEach((y) => {\n\t\tif (y != 0) context.fillText(y, x1, y1); //texto con método stroke\n\t\ty1 = y1 + plano.width_cuadricula;\n\t});\n\tcontext.closePath();\n\n\tcontext.textAlign = 'start';\n\tcontext.beginPath(); //iniciar ruta\n\tx1 = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula + 8;\n\ty1 = plano.y_ini + 12;\n\tcontext.fillText('Y', x1, y1);\n\tx1 = plano.x_fin - 12;\n\ty1 = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula - 10;\n\tcontext.fillText('X', x1, y1);\n\tcontext.closePath();\n};\nconst utilsPlano_graficaCuadricula = (context, plano) => {\n\tcontext.lineWidth = 1; // lineaGrosor\n\t//context.strokeStyle = plano.color_cuadricula; // lineaColor\n\tcontext.strokeStyle = '#d5dbdb'; // lineaColor\n\tcontext.setLineDash([0, 0]);\n\tlet width = plano.x_fin - plano.x_ini;\n\tlet width_cuadricula = plano.width_cuadricula;\n\t// VERTICAL: |\n\tlet nroLineasV = width / width_cuadricula - 1;\n\tlet incV = width_cuadricula;\n\tlet x1 = plano.x_ini + incV;\n\tlet y1 = plano.y_ini;\n\tlet y2 = plano.y_fin;\n\tlet i = 0;\n\tfor (i = 0; i < nroLineasV; i++) {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(x1, y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(x1, y2); // (x_fin, y_ini)\n\t\tcontext.stroke(); // bordeColor = true\n\t\tx1 = x1 + incV;\n\t}\n\t// HORIZONTAL: -\n\tlet height = plano.y_fin - plano.y_ini;\n\tlet nroLineasH = height / width_cuadricula - 1;\n\tlet incH = width_cuadricula;\n\tx1 = plano.x_ini;\n\tlet x2 = plano.x_fin;\n\ty1 = plano.y_ini + incH;\n\n\tfor (i = 0; i < nroLineasH; i++) {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(x1, y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(x2, y1); // (x_fin, y_ini)\n\t\tcontext.stroke(); // bordeColor = true\n\t\ty1 = y1 + incH;\n\t}\n};\n// PLANO SIN EJES:\nconst uPlano_graficaCuadrado = (context, cuadrado) => {\n\tcontext.strokeStyle = cuadrado.bordeColor; // bordeColor\n\tcontext.fillStyle = cuadrado.fondoColor; // fondoColor\n\tcontext.lineWidth = cuadrado.bordeGrosor; // bordeGrosor\n\tcontext.setLineDash([0, 0]); // lineas no segmentadas\n\n\tcontext.beginPath();\n\tcontext.moveTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\n\tcuadrado.fondoEstado ? context.fill() : ''; // fondoColor = true\n\tcuadrado.bordeEstado ? context.stroke() : ''; // bordeColor = true\n\tcontext.closePath();\n};\n// LINEA:\nconst utilsLinea_graficaLinea = (context, linea) => {\n\tcontext.lineWidth = linea.grosor;\n\tcontext.strokeStyle = linea.color;\n\tcontext.setLineDash([0, 0]);\n\n\tcontext.beginPath();\n\tcontext.moveTo(linea.x_ini, linea.y_ini);\n\tcontext.lineTo(linea.x_fin, linea.y_fin);\n\tcontext.stroke();\n\tcontext.closePath();\n};\n// TRIANGULO:\nconst utilsPlano_graficaTriangulo = (context, plano) => {\n\tlet x1 = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula;\n\tlet y1 = plano.y_ini + 2;\n\tlet x2 = x1 - 5;\n\tlet y2 = y1 + 5;\n\tlet x3 = x1 + 5;\n\tlet y3 = y1 + 5;\n\tcontext.beginPath();\n\tcontext.fillStyle = 'black';\n\tcontext.moveTo(x1, y1);\n\tcontext.lineTo(x2, y2);\n\tcontext.lineTo(x3, y3);\n\tcontext.closePath();\n\tcontext.stroke();\n\tcontext.fill();\n\n\tx1 = plano.x_fin - 2;\n\ty1 = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula;\n\tx2 = x1 - 5;\n\ty2 = y1 - 5;\n\tx3 = x1 - 5;\n\ty3 = y1 + 5;\n\tcontext.beginPath();\n\tcontext.fillStyle = 'black';\n\tcontext.moveTo(x1, y1);\n\tcontext.lineTo(x2, y2);\n\tcontext.lineTo(x3, y3);\n\tcontext.closePath();\n\tcontext.stroke();\n\tcontext.fill();\n};\nconst uPlano_graficaCuadradoConEjes = (context, plano) => {\n\tif (plano.visible) {\n\t\tcontext.strokeStyle = plano.bordeColor; // bordeColor\n\t\tcontext.fillStyle = plano.fondoColor; // fondoColor\n\t\tcontext.lineWidth = plano.bordeGrosor; // bordeGrosor\n\t\tcontext.setLineDash([0, 0]); // lineas no segmentadas\n\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(plano.x_ini, plano.y_ini); // (x_ini, y_ini)\n\t\tcontext.lineTo(plano.x_fin, plano.y_ini); // (x_fin, y_ini)\n\t\tcontext.lineTo(plano.x_fin, plano.y_fin); // (x_fin, y_fin)\n\t\tcontext.lineTo(plano.x_ini, plano.y_fin); // (x_ini, y_fin)\n\t\tcontext.lineTo(plano.x_ini, plano.y_ini); // (x_ini, y_ini)\n\n\t\tplano.fondoEstado ? context.fill() : ''; // fondoColor = true\n\t\tplano.bordeEstado ? context.stroke() : ''; // bordeColor = true\n\t\tcontext.closePath();\n\n\t\tutilsPlano_graficaCuadricula(context, plano);\n\t\tlet Linea = {\n\t\t\tid: 0,\n\t\t\tgrosor: 1,\n\t\t\tcolor: 'black',\n\t\t\tx_ini: 0,\n\t\t\ty_ini: 0,\n\t\t\tx_fin: 0,\n\t\t\ty_fin: 0,\n\t\t};\n\t\tLinea.x_ini = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula;\n\t\tLinea.x_fin = Linea.x_ini;\n\t\tLinea.y_ini = plano.y_ini;\n\t\tLinea.y_fin = plano.y_fin;\n\t\tutilsLinea_graficaLinea(context, Linea); // VERTICAL\n\t\tLinea.x_ini = plano.x_ini;\n\t\tLinea.x_fin = plano.x_fin;\n\t\tLinea.y_ini = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula;\n\t\tLinea.y_fin = Linea.y_ini;\n\t\tutilsLinea_graficaLinea(context, Linea); // HORIZONTAL\n\n\t\tutilsPlano_graficaTriangulo(context, plano);\n\t\t// NUMEROS:\n\t\tuPlano_graficaNumeros(context, plano);\n\t}\n};\n\n// GRAFICA PLANOS - HISORIA:\nconst uPlano_graficaCuadradoHistoria = (context, array) => {\n\tarray.forEach((element) => uPlano_graficaCuadrado(context, element));\n};\nconst uPlano_graficaCuadradoHistoriaConEjes = (context, array) => {\n\tarray.forEach((element) => uPlano_graficaCuadradoConEjes(context, element));\n};\n// PLANO: GET\nconst u_planoGet = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((plano) => {\n\t\tif (plano.visible) {\n\t\t\tplano.x_ini < x && x < plano.x_fin && plano.y_ini < y && y < plano.y_fin\n\t\t\t\t? (resp = plano)\n\t\t\t\t: '';\n\t\t}\n\t});\n\treturn resp;\n};\n// PLANO: GRAFICA PLANO\nconst u_planoGraficaH = (context, array) => {\n\tarray.forEach((element) => uPlano_graficaCuadradoConEjes(context, element));\n};\n// PLANO: DELETE POR ID\nconst u_planoDeleteById = (array, id) => {\n\tarray.forEach((element) => {\n\t\telement.id == id ? (element.visible = false) : '';\n\t});\n};\n// PLANO: CUADRADOS PEQUEÑOS REDIMENCIONAR PLANO\nconst u_planoGetPtsRedimencion = (cuadrado) => {\n\tlet width_p = 10;\n\tlet width_c = 2;\n\n\tlet x_ini = cuadrado.x_ini - width_c;\n\tlet y_ini = cuadrado.y_ini - width_c;\n\tlet x_fin = cuadrado.x_fin + width_c;\n\tlet y_fin = cuadrado.y_fin + width_c;\n\n\tlet vectorPuntosCuadrado = [\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_ini - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_ini + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_fin - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_fin + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_fin - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_fin + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_ini + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t];\n\treturn vectorPuntosCuadrado;\n};\n// PLANO: SEGMENTADO:\nconst u_planoSegmentado = (context, cuadrado) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 2; // borde grosor de linea\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet x_ini = cuadrado.x_ini - 2;\n\tlet y_ini = cuadrado.y_ini - 2;\n\tlet x_fin = cuadrado.x_fin + 2;\n\tlet y_fin = cuadrado.y_fin + 2;\n\n\tcontext.beginPath();\n\tcontext.moveTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(x_fin, y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(x_fin, y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(x_ini, y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.stroke();\n\tcontext.closePath();\n\n\tcontext.fillStyle = 'red'; // borde Color\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet array = u_planoGetPtsRedimencion(cuadrado);\n\tarray.forEach((elem) => {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y1); // (x_fin, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y2); // (x_fin, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y2); // (x_ini, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.fill();\n\t\tcontext.closePath();\n\t});\n};\n// PLANO: MOVER\nconst u_planoMover = (plano, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tplano.x_ini = plano.x_ini + recorrido_x;\n\tplano.y_ini = plano.y_ini + recorrido_y;\n\tplano.x_fin = plano.x_fin + recorrido_x;\n\tplano.y_fin = plano.y_fin + recorrido_y;\n\treturn plano;\n};\n// PLANO: UPDATE ZISE\nconst u_planoUpdateZise = (plano, mouse) => {\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tswitch (mouse.plano_pto) {\n\t\tcase 'top':\n\t\t\tplano.y_ini = plano.y_ini + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'right':\n\t\t\tplano.x_fin = plano.x_fin + recorrido_x;\n\t\t\tbreak;\n\t\tcase 'button':\n\t\t\tplano.y_fin = plano.y_fin + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'lefth':\n\t\t\tplano.x_ini = plano.x_ini + recorrido_x;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log('ocurrio un error');\n\t\t\tbreak;\n\t}\n\treturn plano;\n};\nexport {\n\tuPlano_graficaCuadrado,\n\tuPlano_graficaCuadradoConEjes,\n\tuPlano_graficaCuadradoHistoria,\n\tuPlano_graficaCuadradoHistoriaConEjes,\n\tu_planoGet,\n\tu_planoGraficaH,\n\tu_planoDeleteById,\n\tu_planoSegmentado,\n\tu_planoMover,\n\tu_planoGetPtsRedimencion,\n\tu_planoUpdateZise,\n};\n","// cuadrado segmentado:\nconst utilsCuadrado_graficaCuadradoSegmentado = (context, cuadrado) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.fillStyle = 'yellow'; // fondo Color\n\tcontext.lineWidth = 1; // borde grosor de linea\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\tlet width = cuadrado.x_fin - cuadrado.x_ini;\n\tlet height = cuadrado.y_fin - cuadrado.y_ini;\n\n\tcontext.beginPath();\n\tcontext.strokeRect(cuadrado.x_ini, cuadrado.y_ini, width, height);\n\tcontext.fillRect(cuadrado.x_ini, cuadrado.y_ini, width, height);\n\tcontext.closePath();\n};\n\n// limpia el canvas:\nconst utilsCuadrado_LimpiaCuadrado = (context, cuadrado) => {\n\tlet width = cuadrado.x_fin - cuadrado.x_ini;\n\tlet height = cuadrado.y_fin - cuadrado.y_ini;\n\tcontext.clearRect(cuadrado.x_ini, cuadrado.y_ini, width, height);\n};\n\n// cuadrado:\nconst utilsCuadrado_graficaCuadrado = (context, cuadrado) => {\n\tcontext.strokeStyle = cuadrado.bordeColor; // bordeColor\n\tcontext.fillStyle = cuadrado.fondoColor; // fondoColor\n\tcontext.lineWidth = cuadrado.bordeGrosor; // bordeGrosor\n\tcontext.setLineDash([0, 0]); // lineas no segmentadas\n\n\tcontext.beginPath();\n\tcontext.moveTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\n\tcuadrado.fondoEstado ? context.fill() : ''; // fondoColor = true\n\tcuadrado.bordeEstado ? context.stroke() : ''; // bordeColor = true\n\tcontext.closePath();\n};\n\n// GRAFICA CUADRADOS - HISORIA:\nconst utilsCuadrado_graficaCuadradoHistoria = (context, array) => {\n\tarray.forEach((element) => utilsCuadrado_graficaCuadrado(context, element));\n};\n\n// GRAFICA CUADRADOS - HISORIA MENOS EL I-ESIMO id:\nconst UC_graficaCuadradoHistoria_menosI = (context, array, i) => {\n\tarray.forEach((element) =>\n\t\telement.id != i ? utilsCuadrado_graficaCuadrado(context, element) : ''\n\t);\n};\n\n// CUADRADO: GET\nconst u_cuadradoGet = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((elem) => {\n\t\tif (elem.visible) {\n\t\t\telem.x_ini < x && x < elem.x_fin && elem.y_ini < y && y < elem.y_fin\n\t\t\t\t? (resp = elem)\n\t\t\t\t: '';\n\t\t}\n\t});\n\treturn resp;\n};\n// CUADRADO: DELETE POR ID\nconst u_cuadradoDeleteById = (array, cuadradoId) => {\n\tconsole.log('id:', cuadradoId);\n\tlet arrayNew = [];\n\tarray.forEach((element) => {\n\t\telement.id != cuadradoId ? arrayNew.push(element) : '';\n\t});\n\treturn arrayNew;\n};\n// CUADRADO: REPOSICIONA SI EL CUADRADO SE VOLTEA\nconst u_cuadradoValidaPosicion = (cuadrado) => {\n\tif (cuadrado.x_ini > cuadrado.x_fin) {\n\t\tlet aux = cuadrado.x_ini;\n\t\tcuadrado.x_ini = cuadrado.x_fin;\n\t\tcuadrado.x_fin = aux;\n\t}\n\tif (cuadrado.y_ini > cuadrado.y_fin) {\n\t\tlet aux = cuadrado.y_ini;\n\t\tcuadrado.y_ini = cuadrado.y_fin;\n\t\tcuadrado.y_fin = aux;\n\t}\n\treturn cuadrado;\n};\n// CUADRADO: GRAFICA\nconst u_cuadradoGrafica = (context, cuadrado) => {\n\tcontext.strokeStyle = cuadrado.bordeColor; // bordeColor\n\tcontext.fillStyle = cuadrado.fondoColor; // fondoColor\n\tcontext.lineWidth = cuadrado.bordeGrosor; // bordeGrosor\n\tcontext.setLineDash([0, 0]); // lineas no segmentadas\n\n\tcontext.beginPath();\n\tcontext.moveTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\n\tcuadrado.fondoEstado ? context.fill() : ''; // fondoColor = true\n\tcuadrado.bordeEstado ? context.stroke() : ''; // bordeColor = true\n\tcontext.closePath();\n};\nconst u_cuadradoGraficaH = (context, array) => {\n\tarray.forEach((element) => u_cuadradoGrafica(context, element));\n};\n\n// CUADRADO: MOVER\nconst u_cuadradoMover = (cuadrado, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tcuadrado.x_ini = cuadrado.x_ini + recorrido_x;\n\tcuadrado.y_ini = cuadrado.y_ini + recorrido_y;\n\tcuadrado.x_fin = cuadrado.x_fin + recorrido_x;\n\tcuadrado.y_fin = cuadrado.y_fin + recorrido_y;\n\treturn cuadrado;\n};\n// CUADRADOS PEQUEÑOS PAR UPDATE DEL CUADRADO:\nconst u_cuadradoGetPtsRedimencion = (cuadrado) => {\n\tlet width_p = 10;\n\tlet width_c = 2;\n\n\tlet x_ini = cuadrado.x_ini - width_c;\n\tlet y_ini = cuadrado.y_ini - width_c;\n\tlet x_fin = cuadrado.x_fin + width_c;\n\tlet y_fin = cuadrado.y_fin + width_c;\n\n\tlet vectorPuntosCuadrado = [\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_ini - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_ini + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_fin - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_fin + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_fin - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_fin + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_ini + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t];\n\treturn vectorPuntosCuadrado;\n};\n// CUADRADO: GRAFICA BORDE SEGMENTADO\nconst u_cuadradoSegmentado = (context, cuadrado) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 2; // borde grosor de linea\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet x_ini = cuadrado.x_ini - 2;\n\tlet y_ini = cuadrado.y_ini - 2;\n\tlet x_fin = cuadrado.x_fin + 2;\n\tlet y_fin = cuadrado.y_fin + 2;\n\n\tcontext.beginPath();\n\tcontext.moveTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(x_fin, y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(x_fin, y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(x_ini, y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.stroke();\n\tcontext.closePath();\n\n\tcontext.fillStyle = 'red'; // borde Color\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet array = u_cuadradoGetPtsRedimencion(cuadrado);\n\tarray.forEach((elem) => {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y1); // (x_fin, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y2); // (x_fin, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y2); // (x_ini, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.fill();\n\t\tcontext.closePath();\n\t});\n};\n// UPDATE ZISE CUADRADO SELECT:\nconst u_cuadradoUpdateZise = (cuadrado, mouse) => {\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tswitch (mouse.cuadrado_pto) {\n\t\tcase 'top':\n\t\t\tcuadrado.y_ini = cuadrado.y_ini + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'right':\n\t\t\tcuadrado.x_fin = cuadrado.x_fin + recorrido_x;\n\t\t\tbreak;\n\t\tcase 'button':\n\t\t\tcuadrado.y_fin = cuadrado.y_fin + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'lefth':\n\t\t\tcuadrado.x_ini = cuadrado.x_ini + recorrido_x;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log('ocurrio un error');\n\t\t\tbreak;\n\t}\n\treturn cuadrado;\n};\nexport {\n\tutilsCuadrado_graficaCuadrado,\n\tutilsCuadrado_graficaCuadradoHistoria,\n\tutilsCuadrado_graficaCuadradoSegmentado,\n\tutilsCuadrado_LimpiaCuadrado,\n\tUC_graficaCuadradoHistoria_menosI,\n\tu_cuadradoGet,\n\tu_cuadradoDeleteById,\n\tu_cuadradoGraficaH,\n\tu_cuadradoValidaPosicion,\n\tu_cuadradoGrafica,\n\tu_cuadradoMover,\n\tu_cuadradoSegmentado,\n\tu_cuadradoGetPtsRedimencion,\n\tu_cuadradoUpdateZise,\n};\n","// LINEA:\nconst utilsLinea_graficaLinea = (context, linea) => {\n\tif (linea.visible) {\n\t\tcontext.lineWidth = linea.grosor;\n\t\tcontext.strokeStyle = linea.color;\n\t\tcontext.setLineDash([0, 0]);\n\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(linea.x_ini, linea.y_ini);\n\t\tcontext.lineTo(linea.x_fin, linea.y_fin);\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t}\n};\n\n// LAPIZ - HISORIA:\nconst utilsLinea_graficaLineaHistoria = (context, array) => {\n\tarray.forEach((element) => {\n\t\tutilsLinea_graficaLinea(context, element);\n\t});\n};\n// DISTANCIA ENTRE 2 PUNTOS\nconst distancia_p1_p2 = (x1, y1, x2, y2) => {\n\tlet dp = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\treturn dp;\n};\n// LINEA: GET\nconst u_lineaGet = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((elem) => {\n\t\tif (elem.visible) {\n\t\t\tlet x1 = elem.x_ini;\n\t\t\tlet y1 = elem.y_ini;\n\t\t\tlet x2 = elem.x_fin;\n\t\t\tlet y2 = elem.y_fin;\n\t\t\t// parte 1:\n\t\t\tlet a = y1 - y2;\n\t\t\tlet b = x2 - x1;\n\t\t\tlet c = y1 * (x1 - x2) - x1 * (y1 - y2);\n\t\t\tlet dnum = a * x + b * y + c;\n\t\t\tdnum < 0 ? (dnum = dnum * -1) : '';\n\t\t\tlet dden = Math.sqrt(a * a + b * b);\n\t\t\tlet d = dnum / dden;\n\t\t\t// parte 2:\n\t\t\tlet px = x1 + (x2 - x1) / 2;\n\t\t\tlet py = y1 + (y2 - y1) / 2;\n\t\t\tlet dis_valido = distancia_p1_p2(px, py, x2, y2);\n\t\t\tlet dis = distancia_p1_p2(px, py, x, y);\n\t\t\t// sol:\n\t\t\tif (d < 20 && dis < dis_valido) resp = elem;\n\t\t}\n\t});\n\treturn resp;\n};\n// LINEA: GRAFICA HISOTORIA\nconst u_lineaGraficaH = (context, array) => {\n\tarray.forEach((element) => {\n\t\tutilsLinea_graficaLinea(context, element);\n\t});\n};\n// LINEA: DELETE POR ID\nconst u_lineaDeleteById = (array, linea_id) => {\n\tarray.forEach((element) => {\n\t\telement.id == linea_id ? (element.visible = false) : '';\n\t});\n\treturn array;\n};\n// LINEA: GRAFICA\nconst u_lineaGrafica = (context, linea) => {\n\tif (linea.visible) {\n\t\tcontext.lineWidth = linea.grosor;\n\t\tcontext.strokeStyle = linea.color;\n\t\tcontext.setLineDash([0, 0]);\n\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(linea.x_ini, linea.y_ini);\n\t\tcontext.lineTo(linea.x_fin, linea.y_fin);\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t}\n};\n// CUADRADOS PARA UPDATE LINEA:\nconst u_lineaGetPtsRedimencion = (linea) => {\n\tlet width_p = 10;\n\n\tlet x_ini = linea.x_ini;\n\tlet y_ini = linea.y_ini;\n\tlet x_fin = linea.x_fin;\n\tlet y_fin = linea.y_fin;\n\n\tlet vectorPuntosLinea = [\n\t\t{\n\t\t\tx1: x_ini - width_p,\n\t\t\ty1: y_ini - width_p,\n\t\t\tx2: x_ini + width_p,\n\t\t\ty2: y_ini + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_fin - width_p,\n\t\t\ty1: y_fin - width_p,\n\t\t\tx2: x_fin + width_p,\n\t\t\ty2: y_fin + width_p,\n\t\t},\n\t];\n\treturn vectorPuntosLinea;\n};\n// LINEA SEGMENTADO:\nconst u_lineaSegmentado = (context, linea) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 1; // borde grosor de linea\n\tcontext.setLineDash([10, 4]); // lineas segmentadas\n\tlet x_ini = linea.x_ini;\n\tlet y_ini = linea.y_ini;\n\tlet x_fin = linea.x_fin;\n\tlet y_fin = linea.y_fin;\n\tlet inc = 20;\n\t// ANGULO DE INCLINACION:\n\t// P1(X1,Y1) Y P2(X2,Y2)\n\t// ANGULO = TAN-1(m), M = PENDIENTE.\n\t// m = (y2-y1)/(x2-x1)\n\tlet x1 = linea.x_ini;\n\tlet y1 = linea.y_ini;\n\tlet x2 = linea.x_fin;\n\tlet y2 = linea.y_fin;\n\tlet m = (y2 - y1) / (x2 - x1);\n\tlet alfa = Math.atan(m);\n\n\tcontext.beginPath();\n\tif ((0.5 < alfa && alfa < 2) || (-2 < alfa && alfa < -0.5)) {\n\t\tcontext.moveTo(x_ini - inc, y_ini);\n\t\tcontext.lineTo(x_ini + inc, y_ini);\n\t\tcontext.lineTo(x_fin + inc, y_fin);\n\t\tcontext.lineTo(x_fin - inc, y_fin);\n\t\tcontext.lineTo(x_ini - inc, y_ini);\n\t} else {\n\t\tcontext.moveTo(x_ini, y_ini - inc);\n\t\tcontext.lineTo(x_fin, y_fin - inc);\n\t\tcontext.lineTo(x_fin, y_fin + inc);\n\t\tcontext.lineTo(x_ini, y_ini + inc);\n\t\tcontext.lineTo(x_ini, y_ini) - inc;\n\t}\n\tcontext.stroke();\n\tcontext.closePath();\n\n\tcontext.fillStyle = 'red'; // borde Color\n\tcontext.setLineDash([10, 4]); // lineas segmentadas\n\n\tlet array = u_lineaGetPtsRedimencion(linea);\n\tarray.forEach((elem) => {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y1); // (x_fin, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y2); // (x_fin, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y2); // (x_ini, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.fill();\n\t\tcontext.closePath();\n\t});\n};\n// LINEA: MOVER\nconst u_lineaMover = (linea, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tlinea.x_ini = linea.x_ini + recorrido_x;\n\tlinea.y_ini = linea.y_ini + recorrido_y;\n\tlinea.x_fin = linea.x_fin + recorrido_x;\n\tlinea.y_fin = linea.y_fin + recorrido_y;\n\treturn linea;\n};\n// LINEA: UPDATE ZISE\nconst u_lineaUpdateZise = (linea, mouse) => {\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tswitch (mouse.linea_pto) {\n\t\tcase 'ini':\n\t\t\tlinea.x_ini = linea.x_ini + recorrido_x;\n\t\t\tlinea.y_ini = linea.y_ini + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'fin':\n\t\t\tlinea.x_fin = linea.x_fin + recorrido_x;\n\t\t\tlinea.y_fin = linea.y_fin + recorrido_y;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log('ocurrio un error');\n\t\t\tbreak;\n\t}\n\treturn linea;\n};\n\nexport {\n\tutilsLinea_graficaLinea,\n\tutilsLinea_graficaLineaHistoria,\n\tu_lineaDeleteById,\n\tu_lineaGraficaH,\n\tu_lineaGet,\n\tu_lineaGrafica,\n\tu_lineaGetPtsRedimencion,\n\tu_lineaSegmentado,\n\tu_lineaMover,\n\tu_lineaUpdateZise,\n};\n","// LAPIZ: GRAFICA\nconst utilsLapiz_graficaLapiz = (context, lapiz) => {\n\tif (lapiz.visible) {\n\t\tcontext.lineWidth = lapiz.grosor;\n\t\tcontext.strokeStyle = lapiz.color;\n\t\tcontext.setLineDash([0, 0]);\n\t\tcontext.beginPath();\n\t\tlet sw = true;\n\t\tlapiz.historiaLinea.forEach((element) => {\n\t\t\tsw ? context.moveTo(element[0], element[1]) : '';\n\t\t\tsw = false;\n\t\t\tcontext.lineTo(element[2], element[3]);\n\t\t});\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t}\n};\n// LAPIZ: GRAFICA HISORIA:\nconst utilsLapiz_graficaLapizHistoria = (context, array) => {\n\tarray.forEach((element) => utilsLapiz_graficaLapiz(context, element));\n};\n\n// LAPIZ: GET\nconst u_lapizGet = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((lapiz) => {\n\t\tif (lapiz.visible) {\n\t\t\tlet x1 = lapiz.x_min;\n\t\t\tlet y1 = lapiz.y_min;\n\t\t\tlet x2 = lapiz.x_may;\n\t\t\tlet y2 = lapiz.y_may;\n\t\t\tif (x1 - 20 < x && x < x2 + 20 && y1 - 20 < y && y < y2 + 20) {\n\t\t\t\tresp = lapiz;\n\t\t\t}\n\t\t}\n\t});\n\treturn resp;\n};\n// LAPIZ: ELIMINA LAPIZ POR ID\nconst u_lapizDeleteById = (array, lapiz_id) => {\n\tarray.forEach((element) => {\n\t\telement.id == lapiz_id ? (element.visible = false) : '';\n\t});\n};\nconst u_lapizGraficaH = (context, array) => {\n\tarray.forEach((element) => utilsLapiz_graficaLapiz(context, element));\n};\n// LAPIZ: GRAFICA LINEA\nconst u_lapizGraficaLinea = (context, linea, lapiz) => {\n\tcontext.strokeStyle = linea.color;\n\tcontext.lineWidth = linea.grosor;\n\tcontext.setLineDash([0, 0]);\n\tcontext.beginPath();\n\tcontext.moveTo(linea.x_ini, linea.y_ini);\n\tcontext.lineTo(linea.x_fin, linea.y_fin);\n\tcontext.stroke();\n\tcontext.closePath();\n\t// busca cotas minimas X:\n\tlinea.x_ini < lapiz.x_min ? (lapiz.x_min = linea.x_ini) : '';\n\tlinea.x_fin < lapiz.x_min ? (lapiz.x_min = linea.x_fin) : '';\n\t// busca cotas maximas X:\n\tlinea.x_ini > lapiz.x_may ? (lapiz.x_may = linea.x_ini) : '';\n\tlinea.x_fin > lapiz.x_may ? (lapiz.x_may = linea.x_fin) : '';\n\t// busca cotas minimas Y:\n\tlinea.y_ini < lapiz.y_min ? (lapiz.y_min = linea.y_ini) : '';\n\tlinea.y_fin < lapiz.y_min ? (lapiz.y_min = linea.y_fin) : '';\n\t// busca cotas maximas Y:\n\tlinea.y_ini > lapiz.y_may ? (lapiz.y_may = linea.y_ini) : '';\n\tlinea.y_fin > lapiz.y_may ? (lapiz.y_may = linea.y_fin) : '';\n\treturn linea;\n};\n// LAPIZ: SEGMENTADO:\nconst u_lapizSegmentado = (context, lapiz) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 1; // borde grosor de linea\n\tcontext.setLineDash([10, 4]); // lineas segmentadas\n\n\tcontext.beginPath();\n\tcontext.moveTo(lapiz.x_min - 20, lapiz.y_min - 20); // (x_ini, y_ini)\n\tcontext.lineTo(lapiz.x_may + 20, lapiz.y_min - 20); // (x_fin, y_ini)\n\tcontext.lineTo(lapiz.x_may + 20, lapiz.y_may + 20); // (x_fin, y_fin)\n\tcontext.lineTo(lapiz.x_min - 20, lapiz.y_may + 20); // (x_ini, y_fin)\n\tcontext.lineTo(lapiz.x_min - 20, lapiz.y_min - 20); // (x_ini, y_ini)\n\tcontext.stroke();\n\tcontext.closePath();\n};\n// MUEVE LAPIZ SELECT:\nconst u_lapizMover = (lapiz, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tlapiz.historiaLinea.forEach((linea) => {\n\t\tlinea[0] = linea[0] + recorrido_x;\n\t\tlinea[1] = linea[1] + recorrido_y;\n\t\tlinea[2] = linea[2] + recorrido_x;\n\t\tlinea[3] = linea[3] + recorrido_y;\n\t});\n\tlapiz.x_min = lapiz.x_min + recorrido_x;\n\tlapiz.x_may = lapiz.x_may + recorrido_x;\n\tlapiz.y_min = lapiz.y_min + recorrido_y;\n\tlapiz.y_may = lapiz.y_may + recorrido_y;\n\treturn lapiz;\n};\n\nexport {\n\tutilsLapiz_graficaLapiz,\n\tutilsLapiz_graficaLapizHistoria,\n\tu_lapizGet,\n\tu_lapizDeleteById,\n\tu_lapizGraficaH,\n\tu_lapizGraficaLinea,\n\tu_lapizSegmentado,\n\tu_lapizMover,\n};\n","// TEXTO: GRAFICA\nconst u_textGrafica = (context, obj) => {\n\tcontext.fillStyle = obj.color;\n\tcontext.font = `${obj.tamano}px arial`;\n\tcontext.beginPath();\n\tcontext.fillText(obj.texto, obj.x_ini, obj.y_ini);\n\tcontext.stroke(); // quit\n\tcontext.closePath();\n};\n// TEXTO: GRAFICA HISORIA\nconst u_textGraficaH = (context, array) => {\n\tarray.forEach((element) => {\n\t\tif (element.visible) {\n\t\t\tu_textGrafica(context, element);\n\t\t}\n\t});\n};\n// TEXTO: GET\nconst u_getText = (array, x, y) => {\n\tconsole.log(array, x, y);\n\tlet resp = '';\n\tarray.forEach((texto) => {\n\t\tlet x1 = texto.x_ini;\n\t\tlet x2 = x1 + 100;\n\t\tlet y1 = texto.y_ini - 50;\n\t\tlet y2 = texto.y_ini;\n\t\tif (texto.visible) {\n\t\t\tx1 < x && x < x2 && y1 < y && y < y2 ? (resp = texto) : '';\n\t\t}\n\t});\n\tconsole.log('resp:', resp);\n\treturn resp;\n};\n// TEXTO: MOVER\nconst u_textMover = (texto, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\ttexto.x_ini = texto.x_ini + recorrido_x;\n\ttexto.y_ini = texto.y_ini + recorrido_y;\n\treturn texto;\n};\n// TEXTO: DELETE POR ID\nconst u_textDeleteById = (array, id) => {\n\tarray.forEach((element) => {\n\t\telement.id == id ? (element.visible = false) : '';\n\t});\n};\nexport {\n\tu_textGraficaH,\n\tu_textGrafica,\n\tu_getText,\n\tu_textMover,\n\tu_textDeleteById,\n};\n","import { useContext, useEffect } from 'react';\n\n// CONTEXT:\nimport AppContextMover from '../context/AppContextMover';\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport {\n\tu_planoGraficaH,\n\tu_planoGet,\n\tu_planoSegmentado,\n\tu_planoMover,\n\tu_planoGetPtsRedimencion,\n\tu_planoUpdateZise,\n} from '../utils/UtilsPlano';\nimport {\n\tu_cuadradoGraficaH,\n\tu_cuadradoGet,\n\tu_cuadradoMover,\n\tu_cuadradoSegmentado,\n\tu_cuadradoGetPtsRedimencion,\n\tu_cuadradoUpdateZise,\n} from '../utils/UtilsCuadrado';\nimport {\n\tu_lineaGraficaH,\n\tu_lineaGet,\n\tu_lineaSegmentado,\n\tu_lineaMover,\n\tu_lineaGetPtsRedimencion,\n\tu_lineaUpdateZise,\n} from '../utils/UtilsLinea';\nimport { u_lapizGraficaH } from '../utils/UtilsLapiz';\nimport {} from '../utils/UtilsMover';\nimport {\n\tu_lapizGet,\n\tu_lapizSegmentado,\n\tu_lapizMover,\n} from '../utils/UtilsLapiz';\nimport { u_textGraficaH, u_getText, u_textMover } from '../utils/UtilsText';\n\nconst PaintMover = (id_canvas) => {\n\t// useContext\n\tconst { stateMover } = useContext(AppContextMover);\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\tconst { stateText } = useContext(AppContextText);\n\n\t// LOGICA:\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tu_planoGraficaH(context, statePlano.historiaPlano); // plano cartesiano\n\t\tu_cuadradoGraficaH(context, stateCuadrado.historiaCuadrado);\n\t\tu_lineaGraficaH(context, stateLinea.historiaLinea);\n\t\tu_lapizGraficaH(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t\tu_textGraficaH(context, stateText.historiaText);\n\t};\n\tlet canvas = '';\n\tlet context = '';\n\tlet cuadradoSelect = {};\n\tlet lineaSelect = {};\n\tlet lapizSelect = {};\n\tlet planoSelect = {};\n\tlet textSelect = {};\n\n\tconst mouse = {\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t\tclick: false,\n\t\t// CUADRADO\n\t\tmover_cuadrado: false,\n\t\tseleccionar_cuadrado_pts: false,\n\t\tcuadrado_punto_mover: false,\n\t\tcuadrado_pto: '',\n\t\t// LINEA\n\t\tmover_linea: false,\n\t\tseleccionar_linea_pts: false,\n\t\tlinea_punto_mover: false,\n\t\tlinea_pto: '',\n\t\t// LAPIZ\n\t\tactive: true,\n\t\tmover_lapiz: false,\n\t\t// PLANO:\n\t\tplano_mover: false,\n\t\tplano_seleccionar_pts: false,\n\t\tplano_pto_mover: false,\n\t\tplano_pto: '',\n\t\t// TEXTO\n\t\ttexo_active: true,\n\t\ttexto_mover: false,\n\t};\n\tconst canvasMoverDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\tconst x_real = x - canvasMoverDatos.left;\n\t\tconst y_real = y - canvasMoverDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\t};\n\tconst busca_cuadrado_ptoClick = (x, y, array) => {\n\t\tlet resp = '';\n\t\tif (\n\t\t\tarray[0].x1 < x &&\n\t\t\tx < array[0].x2 &&\n\t\t\tarray[0].y1 < y &&\n\t\t\ty < array[0].y2\n\t\t)\n\t\t\tresp = 'top';\n\t\telse if (\n\t\t\tarray[1].x1 < x &&\n\t\t\tx < array[1].x2 &&\n\t\t\tarray[1].y1 < y &&\n\t\t\ty < array[1].y2\n\t\t)\n\t\t\tresp = 'right';\n\t\telse if (\n\t\t\tarray[2].x1 < x &&\n\t\t\tx < array[2].x2 &&\n\t\t\tarray[2].y1 < y &&\n\t\t\ty < array[2].y2\n\t\t)\n\t\t\tresp = 'button';\n\t\telse if (\n\t\t\tarray[3].x1 < x &&\n\t\t\tx < array[3].x2 &&\n\t\t\tarray[3].y1 < y &&\n\t\t\ty < array[3].y2\n\t\t)\n\t\t\tresp = 'lefth';\n\t\treturn resp;\n\t};\n\tconst busca_linea_ptoClick = (x, y, array) => {\n\t\tlet resp = '';\n\t\tif (\n\t\t\tarray[0].x1 < x &&\n\t\t\tx < array[0].x2 &&\n\t\t\tarray[0].y1 < y &&\n\t\t\ty < array[0].y2\n\t\t)\n\t\t\tresp = 'ini';\n\t\telse if (\n\t\t\tarray[1].x1 < x &&\n\t\t\tx < array[1].x2 &&\n\t\t\tarray[1].y1 < y &&\n\t\t\ty < array[1].y2\n\t\t)\n\t\t\tresp = 'fin';\n\t\treturn resp;\n\t};\n\tconst clickSobreLapiz = () => {\n\t\tlapizSelect || cuadradoSelect || lineaSelect ? paint() : '';\n\t\tlapizSelect = u_lapizGet(\n\t\t\tstateLapiz.historiaLapiz,\n\t\t\tmouse.pos.x,\n\t\t\tmouse.pos.y\n\t\t);\n\t\tif (lapizSelect) {\n\t\t\tu_lapizSegmentado(context, lapizSelect);\n\t\t\tmouse.mover_lapiz = true;\n\t\t}\n\t};\n\t// 1:\n\tconst mouseDownMover = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\n\t\t// LAPIZ:\n\t\tclickSobreLapiz();\n\t\tif (!lapizSelect) {\n\t\t\t// no se hizo click sobre el lapiz.\n\t\t\t// LINEA:\n\t\t\tif (mouse.seleccionar_linea_pts) {\n\t\t\t\t// selecciono previamente una linea\n\t\t\t\tlet arrayPts = u_lineaGetPtsRedimencion(lineaSelect);\n\t\t\t\tmouse.linea_pto = busca_linea_ptoClick(\n\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\tmouse.pos.y,\n\t\t\t\t\tarrayPts\n\t\t\t\t);\n\t\t\t\tif (mouse.linea_pto != '') {\n\t\t\t\t\t// hizo click sobre uno de los puntos de la linea\n\t\t\t\t\tmouse.linea_punto_mover = true;\n\t\t\t\t\tmouse.mover_linea = false;\n\t\t\t\t} else {\n\t\t\t\t\t// no hizo click sobre los puntos de la linea\n\t\t\t\t\tmouse.linea_punto_mover = false;\n\t\t\t\t\tmouse.mover_linea = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!mouse.linea_punto_mover) {\n\t\t\t\t// no tiene seleccionado una linea previamente\n\t\t\t\tlineaSelect = u_lineaGet(\n\t\t\t\t\tstateLinea.historiaLinea,\n\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\tmouse.pos.y\n\t\t\t\t);\n\t\t\t\tif (lineaSelect) {\n\t\t\t\t\t// selecciono una linea\n\t\t\t\t\tmouse.seleccionar_linea_pts = true;\n\t\t\t\t\tmouse.mover_linea = true;\n\t\t\t\t\tmouse.linea_punto_mover = false;\n\t\t\t\t\tu_lineaSegmentado(context, lineaSelect);\n\t\t\t\t} else {\n\t\t\t\t\t// no selecciono una linea\n\t\t\t\t\tmouse.seleccionar_linea_pts = false;\n\t\t\t\t\tmouse.mover_linea = false;\n\t\t\t\t\tmouse.linea_punto_mover = false;\n\t\t\t\t\t//paint();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!lineaSelect) {\n\t\t\t\t// no hizo click sobre una linea\n\t\t\t\t// CUADRADO:\n\t\t\t\tif (mouse.seleccionar_cuadrado_pts) {\n\t\t\t\t\t// ya tiene seleccionado un cuadrado previamente\n\t\t\t\t\tlet arrayPts = u_cuadradoGetPtsRedimencion(cuadradoSelect);\n\t\t\t\t\tmouse.cuadrado_pto = busca_cuadrado_ptoClick(\n\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\tmouse.pos.y,\n\t\t\t\t\t\tarrayPts\n\t\t\t\t\t);\n\t\t\t\t\tif (mouse.cuadrado_pto != '') {\n\t\t\t\t\t\tconsole.log(mouse.cuadrado_pto);\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = true; // se movera el lado seleccionado\n\t\t\t\t\t\tmouse.mover_cuadrado = false; // no se movera el cuadrado\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = false; // move_size\n\t\t\t\t\t\tmouse.mover_cuadrado = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!mouse.cuadrado_punto_mover) {\n\t\t\t\t\t// no tiene seleccionando un cuadrado aun\n\t\t\t\t\tcuadradoSelect = u_cuadradoGet(\n\t\t\t\t\t\tstateCuadrado.historiaCuadrado,\n\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\tmouse.pos.y\n\t\t\t\t\t);\n\t\t\t\t\tif (cuadradoSelect) {\n\t\t\t\t\t\t// encontro un cuadrado donde hizo click\n\t\t\t\t\t\tmouse.seleccionar_cuadrado_pts = true;\n\t\t\t\t\t\tmouse.mover_cuadrado = true;\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = false;\n\t\t\t\t\t\tu_cuadradoSegmentado(context, cuadradoSelect);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// no encontro un cuadrado donde hizo click\n\t\t\t\t\t\tmouse.seleccionar_cuadrado_pts = false;\n\t\t\t\t\t\tmouse.mover_cuadrado = false;\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = false;\n\t\t\t\t\t\t//paint();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!cuadradoSelect) {\n\t\t\t\t\t// no hizo click sobre un cuadrado.\n\t\t\t\t\t// PLANO:\n\t\t\t\t\tif (mouse.plano_seleccionar_pts) {\n\t\t\t\t\t\tconsole.log('selection plano preview');\n\t\t\t\t\t\t// ya tiene seleccionado un plano previamente\n\t\t\t\t\t\tlet arrayPts = u_planoGetPtsRedimencion(planoSelect);\n\t\t\t\t\t\tmouse.plano_pto = busca_cuadrado_ptoClick(\n\t\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\t\tmouse.pos.y,\n\t\t\t\t\t\t\tarrayPts\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (mouse.plano_pto != '') {\n\t\t\t\t\t\t\tconsole.log(mouse.plano_pto);\n\t\t\t\t\t\t\tmouse.plano_pto_mover = true; // se movera el lado seleccionado\n\t\t\t\t\t\t\tmouse.plano_mover = false; // no se movera el cuadrado\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmouse.plano_pto_mover = false; // move_size\n\t\t\t\t\t\t\tmouse.plano_mover = false;\n\t\t\t\t\t\t\tmouse.plano_seleccionar_pts = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!mouse.plano_seleccionar_pts) {\n\t\t\t\t\t\t// no tiene seleccionado un plano aun\n\t\t\t\t\t\tplanoSelect = u_planoGet(\n\t\t\t\t\t\t\tstatePlano.historiaPlano,\n\t\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\t\tmouse.pos.y\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (planoSelect) {\n\t\t\t\t\t\t\tconsole.log('selection plano');\n\t\t\t\t\t\t\t// hizo click sobre un plano\n\t\t\t\t\t\t\tmouse.plano_seleccionar_pts = true;\n\t\t\t\t\t\t\tmouse.plano_mover = true;\n\t\t\t\t\t\t\tmouse.plano_pto_mover = false;\n\t\t\t\t\t\t\tu_planoSegmentado(context, planoSelect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// TEXTO\n\t\t\t\t\t\t\tconsole.log('busca texto');\n\t\t\t\t\t\t\ttextSelect = u_getText(\n\t\t\t\t\t\t\t\tstateText.historiaText,\n\t\t\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\t\t\tmouse.pos.y\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (textSelect) {\n\t\t\t\t\t\t\t\tconsole.log('selection texto');\n\t\t\t\t\t\t\t\t// hizo click sobre un plano\n\t\t\t\t\t\t\t\tmouse.texto_mover = true;\n\t\t\t\t\t\t\t\t//mouse.plano_pto_mover = false;\n\t\t\t\t\t\t\t\t//u_planoSegmentado(context, planoSelect);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!lapizSelect && !lineaSelect && !cuadradoSelect && !planoSelect) {\n\t\t\tconsole.log('paint');\n\t\t\tpaint();\n\t\t}\n\t};\n\t// 2:\n\tconst mouseMoveMover = (e) => {\n\t\tif (mouse.click) {\n\t\t\tif (mouse.mover_cuadrado) {\n\t\t\t\t// CUADRADO:\n\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\tcuadradoSelect = u_cuadradoMover(cuadradoSelect, mouse);\n\t\t\t\tpaint();\n\t\t\t\tu_cuadradoSegmentado(context, cuadradoSelect);\n\t\t\t} else {\n\t\t\t\t// CUADRADO PTOS:\n\t\t\t\tif (mouse.cuadrado_punto_mover) {\n\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\tcuadradoSelect = u_cuadradoUpdateZise(cuadradoSelect, mouse);\n\t\t\t\t\tpaint();\n\t\t\t\t\tu_cuadradoSegmentado(context, cuadradoSelect);\n\t\t\t\t} else {\n\t\t\t\t\t// LINEA:\n\t\t\t\t\tif (mouse.mover_linea) {\n\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\tlineaSelect = u_lineaMover(lineaSelect, mouse);\n\t\t\t\t\t\tpaint();\n\t\t\t\t\t\tu_lineaSegmentado(context, lineaSelect);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// LINEA PTOS:\n\t\t\t\t\t\tif (mouse.linea_punto_mover) {\n\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\tlineaSelect = u_lineaUpdateZise(lineaSelect, mouse);\n\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\tu_lineaSegmentado(context, lineaSelect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// LAPIZ:\n\t\t\t\t\t\t\tif (mouse.mover_lapiz) {\n\t\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\t\tlapizSelect = u_lapizMover(lapizSelect, mouse);\n\t\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\t\tu_lapizSegmentado(context, lapizSelect);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// PLANO:\n\t\t\t\t\t\t\t\tif (mouse.plano_mover) {\n\t\t\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\t\t\tplanoSelect = u_planoMover(planoSelect, mouse);\n\t\t\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\t\t\tu_planoSegmentado(context, planoSelect);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// PLANO PTOS:\n\t\t\t\t\t\t\t\t\tif (mouse.plano_pto_mover) {\n\t\t\t\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\t\t\t\tplanoSelect = u_planoUpdateZise(planoSelect, mouse);\n\t\t\t\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\t\t\t\tu_planoSegmentado(context, planoSelect);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// TEXTO\n\t\t\t\t\t\t\t\t\t\tif (mouse.texto_mover) {\n\t\t\t\t\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\t\t\t\t\ttextSelect = u_textMover(textSelect, mouse);\n\t\t\t\t\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t// 3:\n\tconst mouseUpMover = (e) => {\n\t\tif (mouse.cuadrado_punto_mover) {\n\t\t\tif (cuadradoSelect.x_fin < cuadradoSelect.x_ini) {\n\t\t\t\tlet aux = cuadradoSelect.x_fin;\n\t\t\t\tcuadradoSelect.x_fin = cuadradoSelect.x_ini;\n\t\t\t\tcuadradoSelect.x_ini = aux;\n\t\t\t}\n\t\t\tif (cuadradoSelect.y_fin < cuadradoSelect.y_ini) {\n\t\t\t\tlet aux = cuadradoSelect.y_fin;\n\t\t\t\tcuadradoSelect.y_fin = cuadradoSelect.y_ini;\n\t\t\t\tcuadradoSelect.y_ini = aux;\n\t\t\t}\n\t\t}\n\t\tmouse.click = false;\n\t\t// CUADRADO:\n\t\tmouse.mover_cuadrado = false;\n\t\tmouse.cuadrado_punto_mover = false;\n\t\tmouse.cuadrado_pto = '';\n\t\t// LINEA:\n\t\tmouse.mover_linea = false;\n\t\tmouse.linea_punto_mover = false;\n\t\tmouse.linea_pto = '';\n\t\t// LAPIZ:\n\t\tmouse.mover_lapiz = false;\n\t\t// PLANO:\n\t\tmouse.plano_mover = false;\n\t\tmouse.plano_pto_mover = false;\n\t\tmouse.plano_pto = '';\n\t\tmouse.texto_mover = false;\n\t};\n\tconst update_canvasMoverDatos = () => {\n\t\tcanvasMoverDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasMoverDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasMoverDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasMoverDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (stateMover.active) {\n\t\t\tupdate_canvasMoverDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownMover);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveMover);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpMover);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownMover);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveMover);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpMover);\n\t\t};\n\t}, [stateCuadrado, stateLinea]);\n\n\t// RENDER:\n\t// return console.log('paint mover');\n};\n\nexport default PaintMover;\n","import React, { useEffect, useContext } from 'react';\n\n// CONTEXT:\nimport AppContextBorrador from '../context/AppContextBorrador';\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// UTILS:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport {\n\tu_cuadradoGet,\n\tu_cuadradoDeleteById,\n\tu_cuadradoGraficaH,\n} from '../utils/UtilsCuadrado';\nimport {\n\tu_lapizGet,\n\tu_lapizDeleteById,\n\tu_lapizGraficaH,\n} from '../utils/UtilsLapiz';\nimport {\n\tu_lineaGet,\n\tu_lineaDeleteById,\n\tu_lineaGraficaH,\n} from '../utils/UtilsLinea';\nimport {\n\tu_planoGet,\n\tu_planoDeleteById,\n\tu_planoGraficaH,\n} from '../utils/UtilsPlano';\nimport {\n\tu_textGraficaH,\n\tu_textDeleteById,\n\tu_getText,\n} from '../utils/UtilsText';\n\nconst PaintBorrador = (id_canvas) => {\n\t// useContext:\n\tconst { stateBorrador } = useContext(AppContextBorrador);\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { statePlano } = useContext(AppContextPlano);\n\tconst { stateText } = useContext(AppContextText);\n\n\t// LOGICA:\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tu_planoGraficaH(context, statePlano.historiaPlano);\n\t\tu_cuadradoGraficaH(context, stateCuadrado.historiaCuadrado);\n\t\tu_lineaGraficaH(context, stateLinea.historiaLinea);\n\t\tu_lapizGraficaH(context, stateLapiz.historiaLapiz);\n\t\tu_textGraficaH(context, stateText.historiaText);\n\t};\n\tlet canvas = '';\n\tlet context = '';\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst capturaPosPosprev = (e) => {\n\t\tlet x = e.clientX;\n\t\tlet y = e.clientY;\n\t\tlet x_real = x - canvasBorradorDatos.left;\n\t\tlet y_real = y - canvasBorradorDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\t};\n\tconst cuadradoDelete = () => {\n\t\tlet res = false;\n\t\tlet array = stateCuadrado.historiaCuadrado;\n\t\tlet cuadrado = u_cuadradoGet(array, mouse.pos.x, mouse.pos.y);\n\t\tif (cuadrado) {\n\t\t\tstateCuadrado.historiaCuadrado = u_cuadradoDeleteById(array, cuadrado.id);\n\t\t\t// paint();\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst lapizDelete = () => {\n\t\tlet res = false;\n\t\tlet array = stateLapiz.historiaLapiz;\n\t\tlet lapiz = u_lapizGet(array, mouse.pos.x, mouse.pos.y);\n\t\tif (lapiz) {\n\t\t\tu_lapizDeleteById(array, lapiz.id);\n\t\t\t// paint();\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst lineaDelete = () => {\n\t\tlet res = false;\n\t\tlet array = stateLinea.historiaLinea;\n\t\tlet linea = u_lineaGet(array, mouse.pos.x, mouse.pos.y);\n\t\tif (linea) {\n\t\t\tu_lineaDeleteById(array, linea.id);\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst planoDelete = () => {\n\t\tlet res = false;\n\t\tlet array = statePlano.historiaPlano;\n\t\tlet plano = u_planoGet(array, mouse.pos.x, mouse.pos.y);\n\t\tif (plano) {\n\t\t\tu_planoDeleteById(array, plano.id);\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst textDelete = () => {\n\t\tlet res = false;\n\t\tlet array = stateText.historiaText;\n\t\tlet text = u_getText(array, mouse.pos.x, mouse.pos.y);\n\t\tif (text) {\n\t\t\tu_textDeleteById(array, text.id);\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst mouseDownBorrador = (e) => {\n\t\tconsole.log('click borrador');\n\t\tcapturaPosPosprev(e);\n\t\t// TEXTO\n\t\tlet res = textDelete();\n\t\tif (res) {\n\t\t\tpaint();\n\t\t} else {\n\t\t\t// LAPIZ:\n\t\t\tres = lapizDelete();\n\t\t\tif (res) {\n\t\t\t\tpaint();\n\t\t\t} else {\n\t\t\t\t// LINEA:\n\t\t\t\tres = lineaDelete();\n\t\t\t\tif (res) {\n\t\t\t\t\tpaint();\n\t\t\t\t} else {\n\t\t\t\t\t// CUADRADO\n\t\t\t\t\tres = cuadradoDelete();\n\t\t\t\t\tif (res) {\n\t\t\t\t\t\tpaint();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// plano\n\t\t\t\t\t\tres = planoDelete();\n\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tconst canvasBorradorDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst update_canvasBorradorDatos = () => {\n\t\tcanvasBorradorDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasBorradorDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasBorradorDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasBorradorDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (stateBorrador.active) {\n\t\t\tupdate_canvasBorradorDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownBorrador);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownBorrador);\n\t\t};\n\t}, [stateBorrador]);\n\t// RENDER:\n\t// return console.log('hola soy el borrador');\n};\n\nexport default PaintBorrador;\n","import React, { useState, useEffect, useContext } from 'react';\n\n// context:\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextCanvas from '../context/AppContextCanvas';\n\n// styles:\nimport '../styles/Canvas.scss';\n\n// components:\nimport PaintMover from './PaintMover';\nimport PainLapiz from '../components/PaintLapiz';\nimport PaintBorrador from './PaintBorrador';\nimport PaintLinea from './PaintLinea';\nimport PaintCuadrado from './PaintCuadrado';\nimport PaintCuadricula from './PaintCuadricula';\nimport PaintPlano from './PaintPlano';\n\nconst Canvas = () => {\n\t// useContext:\n\tconst { update_width_height } = useContext(AppContextCanvas);\n\n\t// useState:\n\tconst [canvasWidth, setCanvasWidth] = useState(window.innerWidth - 75);\n\tconst [canvasHeight, setCanvasHeight] = useState(window.innerHeight - 90);\n\n\t// LOGICA:\n\t// update_width_height;\n\n\tPaintCuadricula('canvas-1');\n\tPaintMover('canvas-1');\n\tPainLapiz('canvas-1');\n\tPaintBorrador('canvas-1');\n\tPaintCuadrado('canvas-1');\n\tPaintLinea('canvas-1');\n\tPaintPlano('canvas-1');\n\n\tconst updateCanvasWidth = () => setCanvasWidth(window.innerWidth - 75);\n\tconst updateCanvasHeight = () => setCanvasHeight(window.innerHeight - 90);\n\t// LOGICA END.\n\n\t// useEfect:\n\tuseEffect(() => {\n\t\t// redimencionamos el canvas la primera vez:\n\t\twindow.addEventListener('resize', updateCanvasWidth);\n\t\twindow.addEventListener('resize', updateCanvasHeight);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', updateCanvasWidth);\n\t\t\twindow.removeEventListener('resize', updateCanvasHeight);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tupdate_width_height(canvasWidth, canvasHeight);\n\t}, [canvasWidth, canvasHeight]);\n\n\treturn (\n\t\t<canvas\n\t\t\tclassName=\"canvas\"\n\t\t\twidth={canvasWidth}\n\t\t\theight={canvasHeight}\n\t\t\tid=\"canvas-1\"\n\t\t></canvas>\n\t);\n};\n\nexport default Canvas;\n","import { useEffect, useContext } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport { utilsCuadrado_graficaCuadradoHistoria } from '../utils/UtilsCuadrado';\nimport { utilsLinea_graficaLineaHistoria } from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\nimport { uPlano_graficaCuadradoHistoriaConEjes } from '../utils/UtilsPlano';\nimport { u_textGraficaH } from '../utils/UtilsText';\n\nconst PaintCuadricula = (canvasId) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\tconst { stateText } = useContext(AppContextText);\n\n\t// LOGICA:\n\tlet context = '';\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas);\n\t\tuPlano_graficaCuadradoHistoriaConEjes(context, statePlano.historiaPlano);\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz);\n\t\tu_textGraficaH(context, stateText.historiaText);\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcontext = document.getElementById(canvasId).getContext('2d');\n\t\tpaint();\n\t}, [\n\t\tstateCanvas.width,\n\t\tstateCanvas.height,\n\t\tstateCanvas.tipoCuadricula,\n\t\tstateCanvas.cuadriculaWidth,\n\t]);\n};\n//const saludar = () => console.log('hola daniel');\n\nexport default PaintCuadricula;\n","import React, { useEffect, useContext } from 'react';\n\n// useContext:\nimport AppContextLapiz from '../context/AppContextLapiz';\n\n// UTILS:\nimport { u_lapizGraficaLinea } from '../utils/UtilsLapiz';\n\nconst PaintLapiz = (id_canvas) => {\n\t// useContext:\n\tconst { stateLapiz, s_lapizAddHId } = useContext(AppContextLapiz);\n\n\t// LOGICA:\n\tlet canvas = '';\n\tlet context = '';\n\tconst lapizNew = {\n\t\tid: stateLapiz.id,\n\t\tvisible: true,\n\t\tgrosor: stateLapiz.grosor,\n\t\tcolor: stateLapiz.color,\n\t\thistoriaLinea: [],\n\t\tx_min: 2000,\n\t\tx_may: 0,\n\t\ty_min: 2000,\n\t\ty_may: 0,\n\t};\n\tlet linea = {\n\t\tgrosor: stateLapiz.grosor,\n\t\tcolor: stateLapiz.color,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\t};\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\tconst x_real = x - canvasLapizDatos.left;\n\t\tconst y_real = y - canvasLapizDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\t\tlinea.x_ini = mouse.pos_prev.x;\n\t\tlinea.y_ini = mouse.pos_prev.y;\n\t\tlinea.x_fin = mouse.pos.x;\n\t\tlinea.y_fin = mouse.pos.y;\n\t};\n\t// 1\n\tconst mouseDownLapiz = (e) => {\n\t\tstateLapiz.grosor > 0\n\t\t\t? (mouse.click = true)\n\t\t\t: console.log('el grosor es 0.');\n\t\tcaptura_Pos_Posprev(e);\n\t};\n\t// 2\n\tconst mouseMoveLapiz = (e) => {\n\t\tif (mouse.click) {\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t//graficaLinea(linea);\n\t\t\tlinea = u_lapizGraficaLinea(context, linea, lapizNew);\n\t\t\tlapizNew.historiaLinea.push([\n\t\t\t\tlinea.x_ini,\n\t\t\t\tlinea.y_ini,\n\t\t\t\tlinea.x_fin,\n\t\t\t\tlinea.y_fin,\n\t\t\t]);\n\t\t}\n\t};\n\t// 3\n\tconst mouseUpLapiz = (e) => {\n\t\tif (mouse.click && mouse.pos_prev.x != 0 && mouse.pos_prev.y != 0) {\n\t\t\ts_lapizAddHId(lapizNew, stateLapiz.id + 1);\n\t\t}\n\t\tmouse.click = false;\n\t};\n\tconst canvasLapizDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst update_canvasLapizDatos = () => {\n\t\tcanvasLapizDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasLapizDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasLapizDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasLapizDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\n\t\tif (stateLapiz.active) {\n\t\t\tupdate_canvasLapizDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownLapiz);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveLapiz);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpLapiz);\n\t\t}\n\t\treturn () => {\n\t\t\t//canvasLapiz.removeEventListener('click', saludar);\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownLapiz);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveLapiz);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpLapiz);\n\t\t};\n\t}, [stateLapiz]);\n\t// return console.log('hola soy lapiz');\n};\n\nexport default PaintLapiz;\n","import React, { useContext, useEffect } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport {\n\tu_cuadradoGrafica,\n\tu_cuadradoGraficaH,\n\tu_cuadradoValidaPosicion,\n} from '../utils/UtilsCuadrado';\nimport { u_lineaGraficaH } from '../utils/UtilsLinea';\nimport { u_lapizGraficaH } from '../utils/UtilsLapiz';\nimport { u_planoGraficaH } from '../utils/UtilsPlano';\nimport { u_textGraficaH } from '../utils/UtilsText';\n\nconst PaintCuadrado = (id_canvas) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado, s_cuadradoAddHId } = useContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\tconst { stateText } = useContext(AppContextText);\n\n\t// LOGICA:\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tu_planoGraficaH(context, statePlano.historiaPlano); // plano cartesiano\n\t\tu_cuadradoGraficaH(context, stateCuadrado.historiaCuadrado);\n\t\tu_lineaGraficaH(context, stateLinea.historiaLinea);\n\t\tu_lapizGraficaH(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t\tu_textGraficaH(context, stateText.historiaText);\n\t};\n\tlet canvas = '';\n\tlet context = '';\n\tlet cuadrado = {\n\t\tid: stateCuadrado.id,\n\t\tvisible: true,\n\t\tbordeEstado: stateCuadrado.bordeEstado,\n\t\tbordeGrosor: stateCuadrado.bordeGrosor,\n\t\tbordeColor: stateCuadrado.bordeColor,\n\t\tfondoEstado: stateCuadrado.fondoEstado,\n\t\tfondoColor: stateCuadrado.fondoColor,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\t};\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst mouseReinicia = () => {\n\t\tmouse.click = false;\n\t\tmouse.move = false;\n\t\tmouse.pos.x = 0;\n\t\tmouse.pos_prev.x = 0;\n\t\tmouse.pos.y = 0;\n\t\tmouse.pos_prev.y = 0;\n\t};\n\n\tconst canvasCuadradoDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\tconst x_real = x - canvasCuadradoDatos.left;\n\t\tconst y_real = y - canvasCuadradoDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\t};\n\t// 1\n\tconst mouseDownCuadrado = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\t\tcuadrado.x_ini = mouse.pos.x;\n\t\tcuadrado.y_ini = mouse.pos.y;\n\t};\n\t// 2\n\tconst mouseMoveCuadrado = (e) => {\n\t\tif (mouse.click) {\n\t\t\tmouse.move = true;\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\tcuadrado.x_fin = mouse.pos.x;\n\t\t\tcuadrado.y_fin = mouse.pos.y;\n\t\t\tpaint();\n\t\t\tu_cuadradoGrafica(context, cuadrado);\n\t\t}\n\t};\n\t// 3\n\tconst mouseUpCuadrado = () => {\n\t\tif (mouse.click && mouse.pos_prev.x != 0 && mouse.pos_prev.y != 0) {\n\t\t\tcuadrado = u_cuadradoValidaPosicion(cuadrado);\n\t\t\ts_cuadradoAddHId(cuadrado);\n\t\t}\n\t\tmouseReinicia();\n\t};\n\tconst update_canvasCuadradoDatos = () => {\n\t\tcanvasCuadradoDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasCuadradoDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasCuadradoDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasCuadradoDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (stateCuadrado.active) {\n\t\t\tupdate_canvasCuadradoDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownCuadrado);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveCuadrado);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpCuadrado);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownCuadrado);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveCuadrado);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpCuadrado);\n\t\t};\n\t}, [stateCuadrado]);\n\tuseEffect(() => {\n\t\tconsole.log('se agrego un cuadrado...');\n\t\tpaint();\n\t}, [stateCuadrado.historiaCuadrado]);\n};\n\nexport default PaintCuadrado;\n","import { useContext, useEffect } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport { utilsCuadrado_graficaCuadradoHistoria } from '../utils/UtilsCuadrado';\nimport {\n\tu_lineaGrafica,\n\tutilsLinea_graficaLineaHistoria,\n} from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\nimport { uPlano_graficaCuadradoHistoriaConEjes } from '../utils/UtilsPlano';\nimport { u_textGraficaH } from '../utils/UtilsText';\n\nconst PaintLinea = (id_canvas) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea, s_lineaAddHId } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\tconst { stateText } = useContext(AppContextText);\n\n\t// LOGICA:\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tuPlano_graficaCuadradoHistoriaConEjes(context, statePlano.historiaPlano); // plano cartesiano\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t\tu_textGraficaH(context, stateText.historiaText);\n\t};\n\tlet canvas = '';\n\tlet context = '';\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst mouseReinicia = () => {\n\t\tmouse.click = false;\n\t\tmouse.move = false;\n\t\tmouse.pos.x = 0;\n\t\tmouse.pos_prev.x = 0;\n\t\tmouse.pos.y = 0;\n\t\tmouse.pos_prev.y = 0;\n\t};\n\tconst Linea = {\n\t\tid: stateLinea.id,\n\t\tvisible: true,\n\t\tgrosor: stateLinea.grosor,\n\t\tcolor: stateLinea.color,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\tconst x_real = x - canvasLineaDatos.left;\n\t\tconst y_real = y - canvasLineaDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\t};\n\t// 1\n\tconst mouseDownLinea = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\t\tLinea.x_ini = mouse.pos.x;\n\t\tLinea.y_ini = mouse.pos.y;\n\t};\n\t// 2\n\tconst mouseMoveLinea = (e) => {\n\t\tif (mouse.click) {\n\t\t\tmouse.move = true;\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\tLinea.x_fin = mouse.pos.x;\n\t\t\tLinea.y_fin = mouse.pos.y;\n\t\t\tpaint();\n\t\t\tu_lineaGrafica(context, Linea); // utilsPaint_graficaLinea\n\t\t}\n\t};\n\t// 3\n\tconst mouseUpLinea = () => {\n\t\tif (mouse.click && mouse.pos_prev.x != 0 && mouse.pos_prev.y != 0) {\n\t\t\ts_lineaAddHId(Linea, stateLinea.id + 1);\n\t\t}\n\t\tmouseReinicia();\n\t};\n\tconst canvasLineaDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst update_canvasLineaDatos = () => {\n\t\tcanvasLineaDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasLineaDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasLineaDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasLineaDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (stateLinea.active) {\n\t\t\tupdate_canvasLineaDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownLinea);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveLinea);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpLinea);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownLinea);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveLinea);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpLinea);\n\t\t};\n\t}, [stateLinea]);\n\tuseEffect(() => {\n\t\tconsole.log('se agrego una linea...');\n\t\tpaint();\n\t}, [stateLinea.historiaLinea]);\n};\n\nexport default PaintLinea;\n","import React, { useEffect, useContext } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport { u_cuadradoGraficaH } from '../utils/UtilsCuadrado';\nimport { u_lineaGraficaH } from '../utils/UtilsLinea';\nimport { u_lapizGraficaH } from '../utils/UtilsLapiz';\nimport { u_planoGraficaH } from '../utils/UtilsPlano';\nimport { u_textGraficaH } from '../utils/UtilsText';\n\nconst PaintPlano = (id_canvas) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano, s_planoAddHId } = useContext(AppContextPlano);\n\tconst { stateText } = useContext(AppContextText);\n\n\t// LOGICA:\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tu_planoGraficaH(context, statePlano.historiaPlano);\n\t\tu_cuadradoGraficaH(context, stateCuadrado.historiaCuadrado);\n\t\tu_lineaGraficaH(context, stateLinea.historiaLinea);\n\t\tu_lapizGraficaH(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t\tu_textGraficaH(context, stateText.historiaText);\n\t};\n\tlet canvas = '';\n\tlet context = '';\n\tlet mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tprimerClick: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst mouseReinicia = () => {\n\t\tmouse.click = false;\n\t\tmouse.move = false;\n\t\tmouse.primerClick = false;\n\t\tmouse.pos.x = 0;\n\t\tmouse.pos_prev.x = 0;\n\t\tmouse.pos.y = 0;\n\t\tmouse.pos_prev.y = 0;\n\t};\n\tconst plano = {\n\t\tid: statePlano.id,\n\t\tvisible: true,\n\t\tbordeEstado: true,\n\t\tbordeGrosor: 2,\n\t\tbordeColor: statePlano.color_cuadricula,\n\t\tfondoEstado: true,\n\t\tfondoColor: 'white',\n\t\twidth_cuadricula: statePlano.width_cuadricula,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\n\t\tx_min: statePlano.x_min,\n\t\ty_max: statePlano.y_max,\n\t\tsalto: statePlano.salto,\n\t};\n\tlet captura_Pos_Posprev = (e) => {\n\t\tlet x = e.clientX;\n\t\tlet y = e.clientY;\n\t\tlet x_real = x - canvasPlanoDatos.left;\n\t\tlet y_real = y - canvasPlanoDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\t};\n\t// 1:\n\tconst mouseDownPlano = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\t};\n\t// 2:\n\tconst mouseMovePlano = (e) => {};\n\t// 3:\n\tlet mouseUpPlano = (e) => {\n\t\tcaptura_Pos_Posprev(e);\n\t\tif (mouse.click && mouse.pos_prev.x != 0 && mouse.pos_prev.y != 0) {\n\t\t\tlet xMin = plano.x_min;\n\t\t\tlet yMax = plano.y_max;\n\t\t\tlet width = -xMin * plano.width_cuadricula + plano.width_cuadricula;\n\t\t\tlet height = yMax * plano.width_cuadricula + plano.width_cuadricula;\n\t\t\tplano.x_ini = mouse.pos.x - width;\n\t\t\tplano.y_ini = mouse.pos.y - height;\n\t\t\tplano.x_fin = mouse.pos.x + width;\n\t\t\tplano.y_fin = mouse.pos.y + height;\n\t\t\ts_planoAddHId(plano, statePlano.id + 1);\n\t\t}\n\t\tmouseReinicia();\n\t};\n\tconst canvasPlanoDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst update_canvasPlanoDatos = () => {\n\t\tcanvasPlanoDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasPlanoDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasPlanoDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasPlanoDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// EFFECT:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (statePlano.active) {\n\t\t\tupdate_canvasPlanoDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownPlano);\n\t\t\tcanvas.addEventListener('mousemove', mouseMovePlano);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpPlano);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownPlano);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMovePlano);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpPlano);\n\t\t};\n\t}, [statePlano]);\n\tuseEffect(() => {\n\t\tpaint();\n\t}, [statePlano.historiaPlano]);\n};\n\nexport default PaintPlano;\n","import React from 'react';\nimport Canvas from '../components/Canvas';\n\nimport '../styles/Home.scss';\n\nconst Home = () => {\n\t// const heightPantalla = screen.height - 180;\n\t// const widthPantalla = screen.width - 55;\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t<Canvas />\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import React from 'react';\nimport Header from '../components/Header';\nimport NavIzq from '../components/NavIzq';\nimport Home from '../pages/Home';\n\nconst Layout = ({ children }) => {\n\treturn (\n\t\t<div className=\"Layout\">\n\t\t\t<Header />\n\t\t\t<NavIzq />\n\t\t\t<Home />\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nexport default Layout;\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\n// CONTEXT:\nimport AppContext from '../context/AppContext';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextBorrador from '../context/AppContextBorrador';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextMover from '../context/AppContextMover';\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// HOOKS:\nimport useInitialState from '../hooks/useInitialState';\nimport useMover from '../hooks/useMover';\nimport useLapiz from '../hooks/useLapiz';\nimport useBorrador from '../hooks/useBorrador';\nimport useCuadrado from '../hooks/useCuadrado';\nimport useCanvas from '../hooks/useCanvas';\nimport useLinea from '../hooks/useLinea';\nimport usePlano from '../hooks/usePlano';\nimport useText from '../hooks/useText';\n\nimport Layout from '../containers/Layout';\nimport Home from '../pages/Home';\nimport '../styles/global.css';\n\nconst App = () => {\n\tconst initialState = useInitialState();\n\tconst initialStateMover = useMover();\n\tconst initialStateLapiz = useLapiz();\n\tconst initialStateBorrador = useBorrador();\n\tconst initialStateCuadrado = useCuadrado();\n\tconst initialStateCanvas = useCanvas();\n\tconst initialStateLinea = useLinea();\n\tconst initialStatePlano = usePlano();\n\tconst initialStateText = useText();\n\n\treturn (\n\t\t<AppContext.Provider value={initialState}>\n\t\t\t<AppContextCanvas.Provider value={initialStateCanvas}>\n\t\t\t\t<AppContextMover.Provider value={initialStateMover}>\n\t\t\t\t\t<AppContextLapiz.Provider value={initialStateLapiz}>\n\t\t\t\t\t\t<AppContextBorrador.Provider value={initialStateBorrador}>\n\t\t\t\t\t\t\t<AppContextCuadrado.Provider value={initialStateCuadrado}>\n\t\t\t\t\t\t\t\t<AppContextLinea.Provider value={initialStateLinea}>\n\t\t\t\t\t\t\t\t\t<AppContextPlano.Provider value={initialStatePlano}>\n\t\t\t\t\t\t\t\t\t\t<AppContextText.Provider value={initialStateText}>\n\t\t\t\t\t\t\t\t\t\t\t<BrowserRouter>\n\t\t\t\t\t\t\t\t\t\t\t\t<Layout>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <Routes>\n\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/\" element={<Home />} />\n\t\t\t\t\t\t\t\t\t</Routes> */}\n\t\t\t\t\t\t\t\t\t\t\t\t</Layout>\n\t\t\t\t\t\t\t\t\t\t\t</BrowserRouter>\n\t\t\t\t\t\t\t\t\t\t</AppContextText.Provider>\n\t\t\t\t\t\t\t\t\t</AppContextPlano.Provider>\n\t\t\t\t\t\t\t\t</AppContextLinea.Provider>\n\t\t\t\t\t\t\t</AppContextCuadrado.Provider>\n\t\t\t\t\t\t</AppContextBorrador.Provider>\n\t\t\t\t\t</AppContextLapiz.Provider>\n\t\t\t\t</AppContextMover.Provider>\n\t\t\t</AppContextCanvas.Provider>\n\t\t</AppContext.Provider>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './routes/App';\n\nReactDom.render(<App />, document.getElementById('app'));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmathboard\"] = self[\"webpackChunkmathboard\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [829], function() { return __webpack_require__(3436); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","React","initialState","alfabetoMay","split","alfabetoMin","alfabeto","active","color","colorFondo","grosor","state","setState","useState","toLowerCase","auxArray","toUpperCase","updateCanvasPaleta","optionIcon","console","log","updateColor","valor","updateColorFondo","updateGrosor","initialStateMover","stateMover","setStateMover","updateMoverActive","initialStateLapiz","id","historiaLapiz","stateLapiz","setStateLapiz","updateLapizActive","updateLapizColor","updateLapizGrosor","updateLapizColorGrosor","valor1","valor2","s_lapizAddHId","lapiz","initialStateBorrador","historialBorrador","stateBorrador","setStateBorrador","updateBorradorActive","updateBorradorColor","updateBorradorGrosor","initialStateCuadrado","bordeEstado","bordeGrosor","bordeColor","fondoEstado","fondoColor","x_ini","y_ini","width","height","historiaCuadrado","stateCuadrado","setStateCuadrado","updateCuadradoActive","updateCuadradoBordeGrosor","updateCuadradoBordeEstado","updateCuadradoBorde_ColorEstado","estado","updateCuadradoFondoEstado","updateCuadradoFondo_ColorEstado","add_cuadrado_en_historia","cuadrado","update_cuadrado_en_historia","array","update_all","colorBorde","bordeEstadoIn","fondoEstadoIn","update_cuadradoH","s_cuadradoAddH","s_cuadradoAddHId","initialStateCanvas","cuadriculaWidth","lineaColor","lineaGrosor","tipoCuadricula","stateCanvas","setStateCanvas","updateCuadriculaActive","updateCuadriculaWidth","update_width_height","updateTipoCuadricula","initialStateLinea","historiaLinea","stateLinea","setStateLinea","updateLineaActive","updateLineaColor","updateLineaGrosor","add_historiaLinea","updateLineaColorGrosor","s_lineaUpdateH","s_lineaAddHId","initialStatePlano","x_min","y_max","salto","color_cuadricula","width_cuadricula","historiaPlano","statePlano","setStatePlano","updatePlanoActive","s_planoAddHId","s_planoUpdateXmin","s_planoUpdateYmax","s_planoUpdateWidthCuadricula","initialStateText","tamano","texto","historiaText","stateText","setStateText","updateTextActive","s_textAddH","s_textUpdateColor","s_textUpdateTamano","s_textUpdateText","txt","s_textAddHId","useContext","AppContextPlano","handleXmin","op","parseInt","document","getElementById","value","handleYmax","handleWidth","useEffect","className","type","defaultValue","disabled","onClick","AppContext","arrayPaletaColor","colorLine","tipo","updatePaletaColor","forEach","dato","classList","remove","elem","find","add","title","map","handleColor","handlePaletaColor","src","iconLineaNone","arrayIconLinea","iconLine","iconLineaS","iconLineaM","iconLineaL","iconLineaXL","iconLineaXXL","updatePaletaGrosor","querySelectorAll","i","length","htmlFor","handleLineaGrosor","AppContextLapiz","AppContextBorrador","AppContextCuadrado","AppContextCanvas","arrayIconCuadricula","iconCuadricula","iconCuadriculaSin","iconCuadriculaNone","updatePaleta_tipoCuadricula","handleBtnAncho","handleCuadriculaTipo","AppContextLinea","AppContextText","canvas","context","textoNew","visible","arrayColorLinea","handleSize","size","getContext","fillStyle","font","beginPath","fillText","closePath","handleAdd","toggleMenu1","setToggleMenu1","toggleMenuMover","setToggleMenuMover","toggleMenuLapiz","setToggleMenuLapiz","toggleMenuBorrador","setToggleMenuBorrador","toggleMenuCuadrado","setToggleMenuCuadrado","toggleMenuCuadricula","setToggleMenuCuadricula","toggleMenuLinea","setToggleMenuLinea","toggleMenuPlano","setToggleMenuPlano","toggleMenuText","setToggleMenuText","href","Menu1","element","key","handleClick","svg","toggleShift","setToggleShift","option","elm","AppContextMover","AppContextCuadricula","toggleKeyboard","setToggleKeyboard","iconosPaleta","moverIcon","lapizIcon","borradorIcon","textIcon","lineaIcon","cuadradoIcon","planoIcon","cuadriculaIcon","icon","handleIcon","keyboardIcon","utilsCuadricula_graficaCuadricula","lineWidth","strokeStyle","setLineDash","moveTo","lineTo","fill","stroke","nroLineasV","incV","nroLineasH","incH","utilsLinea_graficaLinea","linea","x_fin","y_fin","uPlano_graficaCuadradoConEjes","plano","x1","y1","y2","x2","utilsPlano_graficaCuadricula","Linea","x3","y3","utilsPlano_graficaTriangulo","arrayX","n","x","push","arrayY","heigth","y","textAlign","uPlano_graficaNumeros","uPlano_graficaCuadradoHistoriaConEjes","u_planoGet","resp","u_planoGraficaH","u_planoGetPtsRedimencion","width_p","u_planoSegmentado","utilsCuadrado_graficaCuadradoHistoria","utilsCuadrado_graficaCuadrado","u_cuadradoGet","u_cuadradoGrafica","u_cuadradoGraficaH","u_cuadradoGetPtsRedimencion","u_cuadradoSegmentado","utilsLinea_graficaLineaHistoria","distancia_p1_p2","Math","sqrt","pow","u_lineaGet","a","b","dnum","d","px","py","dis_valido","dis","u_lineaGraficaH","u_lineaGetPtsRedimencion","u_lineaSegmentado","inc","m","alfa","atan","utilsLapiz_graficaLapiz","sw","utilsLapiz_graficaLapizHistoria","u_lapizGet","y_min","x_may","y_may","u_lapizGraficaH","u_lapizSegmentado","u_textGraficaH","obj","u_textGrafica","u_getText","id_canvas","paint","mouse","click","move","pos","pos_prev","mouseDownBorrador","e","clientX","clientY","x_real","canvasBorradorDatos","left","y_real","top","capturaPosPosprev","res","text","u_textDeleteById","textDelete","lapiz_id","u_lapizDeleteById","lapizDelete","linea_id","u_lineaDeleteById","lineaDelete","cuadradoId","arrayNew","u_cuadradoDeleteById","cuadradoDelete","u_planoDeleteById","planoDelete","getBoundingClientRect","addEventListener","removeEventListener","canvasWidth","setCanvasWidth","window","innerWidth","canvasHeight","setCanvasHeight","innerHeight","canvasId","PaintCuadricula","cuadradoSelect","lineaSelect","lapizSelect","planoSelect","textSelect","mover_cuadrado","seleccionar_cuadrado_pts","cuadrado_punto_mover","cuadrado_pto","mover_linea","seleccionar_linea_pts","linea_punto_mover","linea_pto","mover_lapiz","plano_mover","plano_seleccionar_pts","plano_pto_mover","plano_pto","texo_active","texto_mover","canvasMoverDatos","captura_Pos_Posprev","busca_cuadrado_ptoClick","mouseDownMover","arrayPts","busca_linea_ptoClick","mouseMoveMover","recorrido_x","recorrido_y","u_cuadradoMover","u_cuadradoUpdateZise","u_lineaMover","u_lineaUpdateZise","u_lapizMover","u_planoMover","u_planoUpdateZise","u_textMover","mouseUpMover","aux","PaintMover","lapizNew","canvasLapizDatos","mouseDownLapiz","mouseMoveLapiz","u_lapizGraficaLinea","mouseUpLapiz","PainLapiz","PaintBorrador","canvasCuadradoDatos","mouseDownCuadrado","mouseMoveCuadrado","mouseUpCuadrado","u_cuadradoValidaPosicion","PaintCuadrado","canvasLineaDatos","mouseDownLinea","mouseMoveLinea","u_lineaGrafica","mouseUpLinea","PaintLinea","primerClick","canvasPlanoDatos","mouseDownPlano","mouseMovePlano","mouseUpPlano","xMin","yMax","PaintPlano","updateCanvasWidth","updateCanvasHeight","children","useInitialState","useMover","useLapiz","useBorrador","useCuadrado","useCanvas","useLinea","usePlano","useText","ReactDom","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}
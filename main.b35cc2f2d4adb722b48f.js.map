{"version":3,"file":"main.b35cc2f2d4adb722b48f.js","mappings":"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","sources":["webpack://mathboard/webpack/runtime/chunk loaded","webpack://mathboard/./src/context/AppContext.js","webpack://mathboard/./src/context/AppContextLapiz.js","webpack://mathboard/./src/context/AppContextBorrador.js","webpack://mathboard/./src/context/AppContextCuadrado.js","webpack://mathboard/./src/context/AppContextMover.js","webpack://mathboard/./src/context/AppContextCanvas.js","webpack://mathboard/./src/context/AppContextLinea.js","webpack://mathboard/./src/context/AppContextPlano.js","webpack://mathboard/./src/context/AppContextText.js","webpack://mathboard/./src/hooks/useInitialState.js","webpack://mathboard/./src/hooks/useMover.js","webpack://mathboard/./src/hooks/useLapiz.js","webpack://mathboard/./src/hooks/useBorrador.js","webpack://mathboard/./src/hooks/useCuadrado.js","webpack://mathboard/./src/hooks/useCanvas.js","webpack://mathboard/./src/hooks/useLinea.js","webpack://mathboard/./src/hooks/usePlano.js","webpack://mathboard/./src/hooks/useText.js","webpack://mathboard/./src/containers/Menu1.jsx","webpack://mathboard/./src/containers/MenuPlano.jsx","webpack://mathboard/./src/containers/MenuMover.jsx","webpack://mathboard/./src/components/PaletaColor.jsx","webpack://mathboard/./src/components/PaletaGrosor.jsx","webpack://mathboard/./src/containers/MenuLapiz.jsx","webpack://mathboard/./src/containers/MenuBorrador.jsx","webpack://mathboard/./src/containers/MenuCuadrado.jsx","webpack://mathboard/./src/containers/MenuCuadricula.jsx","webpack://mathboard/./src/containers/MenuLinea.jsx","webpack://mathboard/./src/containers/MenuText.jsx","webpack://mathboard/./src/components/Header.jsx","webpack://mathboard/./src/components/key.jsx","webpack://mathboard/./src/components/KeySvg.jsx","webpack://mathboard/./src/components/KeyTxt.jsx","webpack://mathboard/./src/containers/Keyboard.jsx","webpack://mathboard/./src/components/NavIzq.jsx","webpack://mathboard/./src/utils/UtilsCuadricula.js","webpack://mathboard/./src/utils/UtilsCuadrado.js","webpack://mathboard/./src/utils/UtilsLinea.js","webpack://mathboard/./src/utils/UtilsLapiz.js","webpack://mathboard/./src/utils/UtilsPlano.js","webpack://mathboard/./src/utils/UtilsMover.js","webpack://mathboard/./src/utils/UtilsMoverLapiz.js","webpack://mathboard/./src/utils/UtilsText.js","webpack://mathboard/./src/components/PaintMover.jsx","webpack://mathboard/./src/components/PaintBorrador.jsx","webpack://mathboard/./src/components/Canvas.jsx","webpack://mathboard/./src/components/PaintCuadricula.jsx","webpack://mathboard/./src/components/PaintLapiz.jsx","webpack://mathboard/./src/components/PaintCuadrado.jsx","webpack://mathboard/./src/components/PaintLinea.jsx","webpack://mathboard/./src/components/PaintPlano.jsx","webpack://mathboard/./src/pages/Home.jsx","webpack://mathboard/./src/containers/Layout.jsx","webpack://mathboard/./src/routes/App.jsx","webpack://mathboard/./src/index.js","webpack://mathboard/webpack/bootstrap","webpack://mathboard/webpack/runtime/define property getters","webpack://mathboard/webpack/runtime/global","webpack://mathboard/webpack/runtime/hasOwnProperty shorthand","webpack://mathboard/webpack/runtime/jsonp chunk loading","webpack://mathboard/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import React from 'react';\n\nconst AppContext = React.createContext({});\n\nexport default AppContext;\n","import React from 'react';\n\nconst AppContextLapiz = React.createContext({});\n\nexport default AppContextLapiz;\n","import React from 'react';\n\nconst AppContextBorrador = React.createContext({});\n\nexport default AppContextBorrador;\n","import React from 'react';\n\nconst AppContextCuadrado = React.createContext({});\n\nexport default AppContextCuadrado;\n","import React from 'react';\n\nconst AppContextMover = React.createContext({});\n\nexport default AppContextMover;\n","import React from 'react';\n\nconst AppContextCanvas = React.createContext({});\n\nexport default AppContextCanvas;\n","import React from 'react';\n\nconst AppContextLinea = React.createContext({});\n\nexport default AppContextLinea;\n","import React from 'react';\n\nconst AppContextPlano = React.createContext({});\n\nexport default AppContextPlano;\n","import React from 'react';\n\nconst AppContextText = React.createContext({});\n\nexport default AppContextText;\n","import { useState } from 'react';\n\nconst initialState = {\n\talfabetoMay: [\n\t\t'QWERTYUIOP'.split(''),\n\t\t'ASDFGHJKLÑ'.split(''),\n\t\t'ZXCVBNM,'.split(''),\n\t],\n\talfabetoMin: [\n\t\t'qwertyuiop'.split(''),\n\t\t'asdfghjklñ'.split(''),\n\t\t'zxcvbnm.'.split(''),\n\t],\n\talfabeto: [\n\t\t'QWERTYUIOP'.split(''),\n\t\t'ASDFGHJKLÑ'.split(''),\n\t\t'ZXCVBNM,'.split(''),\n\t],\n\tactive: '',\n\tcolor: 'black',\n\tcolorFondo: 'green',\n\tgrosor: 1,\n};\nconst useInitialState = () => {\n\tconst [state, setState] = useState(initialState);\n\n\tconst toLowerCase = () => {\n\t\tconst auxArray = state.alfabetoMin;\n\t\tsetState({\n\t\t\t...state,\n\t\t\talfabeto: auxArray,\n\t\t});\n\t};\n\tconst toUpperCase = () => {\n\t\tconst auxArray = state.alfabetoMay;\n\t\tsetState({\n\t\t\t...state,\n\t\t\talfabeto: auxArray,\n\t\t});\n\t};\n\n\t// ACTIVA Y DESACTIVA LA OPCION SELECCIONADA DE LA PALETA DE LA PIZARRA\n\tconst updateCanvasPaleta = (optionIcon) => {\n\t\tswitch (optionIcon) {\n\t\t\tcase 'moverIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'moverIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'lapizIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'lapizIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'borradorIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'borradorIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'lineaIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'lineaIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'cuadradoIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'cuadradoIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'planoIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'planoIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'cuadriculaIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'cuadriculaIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'textIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'textIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('Opcion no registrada / useInitialState!!!');\n\t\t\t\tbreak;\n\t\t}\n\t};\n\tconst updateColor = (valor) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tcolor: valor,\n\t\t});\n\t};\n\tconst updateGrosor = (valor) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\tconst updateColorFondo = (valor) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tcolorFondo: valor,\n\t\t});\n\t};\n\n\treturn {\n\t\tstate,\n\t\ttoLowerCase,\n\t\ttoUpperCase,\n\t\tupdateCanvasPaleta,\n\t\tupdateColor,\n\t\tupdateColorFondo,\n\t\tupdateGrosor,\n\t};\n};\n\nexport default useInitialState;\n","import { useState } from 'react';\nconst initialStateMover = {\n\tactive: false,\n};\n\nconst useMover = () => {\n\tconst [stateMover, setStateMover] = useState(initialStateMover);\n\n\tconst updateMoverActive = (valor) => {\n\t\tsetStateMover({\n\t\t\t...stateMover,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\treturn {\n\t\tstateMover,\n\t\tupdateMoverActive,\n\t};\n};\n\nexport default useMover;\n","import { useState } from 'react';\nconst initialStateLapiz = {\n\tid: 0,\n\tactive: false,\n\tcolor: 'black',\n\tgrosor: 4,\n\thistoriaLapiz: [],\n};\n\nconst useLapiz = () => {\n\tconst [stateLapiz, setStateLapiz] = useState(initialStateLapiz);\n\n\tconst updateLapizActive = (valor) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateLapizColor = (valor) => {\n\t\tconsole.log('color util:', valor);\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tcolor: valor,\n\t\t});\n\t\tconsole.log('color:', stateLapiz);\n\t};\n\tconst updateLapizGrosor = (valor) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\tconst add_historiaLapiz = (valor) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\thistoriaLapiz: [...stateLapiz.historiaLapiz, valor],\n\t\t});\n\t};\n\tconst add_historiaLapizId = (lapiz, id) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tid: id,\n\t\t\thistoriaLapiz: [...stateLapiz.historiaLapiz, lapiz],\n\t\t});\n\t};\n\tconst updateLapizColorGrosor = (valor1, valor2) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tcolor: valor1,\n\t\t\tgrosor: valor2,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateLapiz,\n\t\tupdateLapizActive,\n\t\tupdateLapizColor,\n\t\tupdateLapizGrosor,\n\t\tadd_historiaLapiz,\n\t\tupdateLapizColorGrosor,\n\t\tadd_historiaLapizId,\n\t};\n};\n\nexport default useLapiz;\n","import { useState } from 'react';\nconst initialStateBorrador = {\n\tactive: false,\n\tcolor: 'white',\n\tgrosor: 10,\n\thistorialBorrador: [],\n};\n\nconst useBorrador = () => {\n\tconst [stateBorrador, setStateBorrador] = useState(initialStateBorrador);\n\n\tconst updateBorradorActive = (valor) => {\n\t\tsetStateBorrador({\n\t\t\t...stateBorrador,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateBorradorColor = (valor) => {\n\t\tsetStateBorrador({\n\t\t\t...stateBorrador,\n\t\t\tcolor: valor,\n\t\t});\n\t};\n\tconst updateBorradorGrosor = (valor) => {\n\t\tsetStateBorrador({\n\t\t\t...stateBorrador,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateBorrador,\n\t\tupdateBorradorActive,\n\t\tupdateBorradorColor,\n\t\tupdateBorradorGrosor,\n\t};\n};\n\nexport default useBorrador;\n","import { useState } from 'react';\nconst initialStateCuadrado = {\n\tactive: false,\n\tbordeEstado: true, // si tendra borde\n\tbordeGrosor: 5,\n\tbordeColor: 'yellow',\n\tfondoEstado: true, // si tendra fondo\n\tfondoColor: 'black',\n\tx_ini: 0,\n\ty_ini: 0,\n\twidth: 10,\n\theight: 10,\n\thistoriaCuadrado: [],\n};\n\nconst useCuadrado = () => {\n\tconst [stateCuadrado, setStateCuadrado] = useState(initialStateCuadrado);\n\n\tconst updateCuadradoActive = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\t// UPDATE GENERAL(HEADER - PALETA):\n\tconst updateCuadradoBordeGrosor = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeGrosor: valor,\n\t\t});\n\t};\n\tconst updateCuadradoBordeEstado = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeEstado: valor,\n\t\t});\n\t};\n\tconst updateCuadradoBorde_ColorEstado = (color, estado) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeColor: color,\n\t\t\tbordeEstado: estado,\n\t\t});\n\t};\n\tconst updateCuadradoFondoEstado = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tfondoEstado: valor,\n\t\t});\n\t};\n\tconst updateCuadradoFondo_ColorEstado = (color, estado) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tfondoColor: color,\n\t\t\tfondoEstado: estado,\n\t\t});\n\t};\n\t// CREATE: ADD_IN:\thistoriaCuadrado[]\n\tconst add_cuadrado_en_historia = (cuadrado) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\thistoriaCuadrado: [...stateCuadrado.historiaCuadrado, cuadrado],\n\t\t});\n\t};\n\t// DELETE: DELETE_IN:\thistoriaCuadrado[]\n\t// UPDATE: UPDATE_IN:\thistoriaCuadrado[]\n\tconst update_cuadrado_en_historia = (array) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\thistoriaCuadrado: array,\n\t\t});\n\t};\n\tconst update_cuadradoH = (array) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\thistoriaCuadrado: array,\n\t\t});\n\t};\n\tconst update_all = (\n\t\tcolorBorde,\n\t\tcolorFondo,\n\t\tbordeGrosor,\n\t\tbordeEstadoIn,\n\t\tfondoEstadoIn\n\t) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeColor: colorBorde,\n\t\t\tfondoColor: colorFondo,\n\t\t\tbordeGrosor: bordeGrosor,\n\t\t\tbordeEstado: bordeEstadoIn,\n\t\t\tfondoEstado: fondoEstadoIn,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateCuadrado,\n\t\tupdateCuadradoActive,\n\t\tupdateCuadradoBordeGrosor,\n\t\tupdateCuadradoBordeEstado,\n\t\tupdateCuadradoBorde_ColorEstado,\n\t\tupdateCuadradoFondoEstado,\n\t\tupdateCuadradoFondo_ColorEstado,\n\t\tadd_cuadrado_en_historia,\n\t\tupdate_cuadrado_en_historia,\n\t\tupdate_all,\n\t\tupdate_cuadradoH, // new\n\t};\n};\n\nexport default useCuadrado;\n","import { useState } from 'react';\n\nconst initialStateCanvas = {\n\tactive: false,\n\tid: 0,\n\twidth: 0,\n\theight: 0,\n\tcuadriculaWidth: 30,\n\tfondoColor: 'white',\n\tlineaColor: '#d5dbdb',\n\tlineaGrosor: 1,\n\ttipoCuadricula: 'cuadricula', // cuadricula, linea, ninguno\n};\n\nconst useCanvas = () => {\n\tconst [stateCanvas, setStateCanvas] = useState(initialStateCanvas);\n\n\tconst updateCuadriculaActive = (valor) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateCuadriculaWidth = (valor) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\tcuadriculaWidth: valor,\n\t\t});\n\t};\n\tconst update_width_height = (width, height) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t});\n\t};\n\tconst updateTipoCuadricula = (valor) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\ttipoCuadricula: valor,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateCanvas,\n\t\tupdateCuadriculaActive,\n\t\tupdateCuadriculaWidth,\n\t\tupdate_width_height,\n\t\tupdateTipoCuadricula,\n\t};\n};\n\nexport default useCanvas;\n","import { useState } from 'react';\nconst initialStateLinea = {\n\tactive: false,\n\tcolor: 'black',\n\tgrosor: 2,\n\tid: 0,\n\thistoriaLinea: [],\n};\n\nconst useLinea = () => {\n\tconst [stateLinea, setStateLinea] = useState(initialStateLinea);\n\n\tconst updateLineaActive = (valor) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateLineaColor = (valor) => {\n\t\tconsole.log('color util:', valor);\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tcolor: valor,\n\t\t});\n\t\tconsole.log('color:', stateLinea);\n\t};\n\tconst updateLineaGrosor = (valor) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\tconst add_historiaLinea = (valor) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\thistoriaLinea: [...stateLinea.historiaLinea, valor],\n\t\t});\n\t};\n\tconst add_historiaLinea_id = (valor, id) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tid: id,\n\t\t\thistoriaLinea: [...stateLinea.historiaLinea, valor],\n\t\t});\n\t};\n\tconst updateLineaColorGrosor = (valor1, valor2) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tcolor: valor1,\n\t\t\tgrosor: valor2,\n\t\t});\n\t};\n\tconst s_lineaUpdateH = (array) => {\n\t\tsetStateLinea({\n\t\t\t...setStateLinea,\n\t\t\thistoriaLinea: array,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateLinea,\n\t\tupdateLineaActive,\n\t\tupdateLineaColor,\n\t\tupdateLineaGrosor,\n\t\tadd_historiaLinea,\n\t\tadd_historiaLinea_id,\n\t\tupdateLineaColorGrosor,\n\t\ts_lineaUpdateH,\n\t};\n};\n\nexport default useLinea;\n","import { useState } from 'react';\nconst initialStatePlano = {\n\tactive: false,\n\tid: 0,\n\tx_min: -10,\n\ty_max: 10,\n\tsalto: 1,\n\tcolor_cuadricula: '#abb2b9',\n\twidth_cuadricula: 20,\n\thistoriaPlano: [],\n};\n\nconst usePlano = () => {\n\tconst [statePlano, setStatePlano] = useState(initialStatePlano);\n\n\tconst updatePlanoActive = (valor) => {\n\t\tsetStatePlano({\n\t\t\t...statePlano,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst add_plano_en_historia = (valor) => {\n\t\tsetStatePlano({\n\t\t\t...statePlano,\n\t\t\thistoriaPlano: [...statePlano.historiaPlano, valor],\n\t\t});\n\t};\n\tconst add_plano_en_historiaId = (valor, id) => {\n\t\tsetStatePlano({\n\t\t\t...statePlano,\n\t\t\tid: id,\n\t\t\thistoriaPlano: [...statePlano.historiaPlano, valor],\n\t\t});\n\t};\n\treturn {\n\t\tstatePlano,\n\t\tupdatePlanoActive,\n\t\tadd_plano_en_historia,\n\t\tadd_plano_en_historiaId,\n\t};\n};\n\nexport default usePlano;\n","import { useState } from 'react';\nconst initialStateText = {\n\tactive: false,\n\tid: 0,\n\ttamano: 20,\n\ttexto: 'new text',\n\tx_ini: 0,\n\ty_ini: 0,\n\tsalto: 1,\n\tcolor: 'black',\n\thistoriaText: [],\n};\n\nconst useText = () => {\n\tconst [stateText, setStateText] = useState(initialStateText);\n\n\tconst updateTextActive = (valor) => {\n\t\tsetStateText({\n\t\t\t...stateText,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst s_textAddH = (valor) => {\n\t\tsetStateText({\n\t\t\t...stateText,\n\t\t\thistoriaText: [...stateText.historiaText, valor],\n\t\t});\n\t};\n\tconst s_textAddHId = (valor, id) => {\n\t\tsetStateText({\n\t\t\t...stateText,\n\t\t\tid: id,\n\t\t\thistoriaText: [...stateText.historiaText, valor],\n\t\t});\n\t};\n\tconst s_textUpdateColor = (color) => {\n\t\tsetStateText({\n\t\t\t...stateText,\n\t\t\tcolor: color,\n\t\t});\n\t};\n\tconst s_textUpdateTamano = (tamano) => {\n\t\tsetStateText({\n\t\t\t...stateText,\n\t\t\ttamano: tamano,\n\t\t});\n\t};\n\tconst s_textUpdateText = (txt) => {\n\t\tsetStateText({\n\t\t\t...stateText,\n\t\t\ttexto: txt,\n\t\t});\n\t};\n\treturn {\n\t\tstateText,\n\t\tupdateTextActive,\n\t\ts_textAddH,\n\t\ts_textUpdateColor,\n\t\ts_textUpdateTamano,\n\t\ts_textUpdateText,\n\t\ts_textAddHId,\n\t};\n};\n\nexport default useText;\n","import React from 'react';\n\nconst MenuLapizAux = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h1>BIENVENIDO A LA PIZARRA DIGITAL WEB</h1>\n\t\t</div>\n\t);\n};\n\nexport default MenuLapizAux;\n","import React, { useContext, useEffect } from 'react';\n\nimport '../styles/MenuPlano.scss';\n\n// CONTEXT:\nimport AppContextPlano from '../context/AppContextPlano';\n\nconst MenuPlano = () => {\n\t// useContext:\n\tconst { statePlano } = useContext(AppContextPlano);\n\n\t// LOGICA\n\tconst handleAdd = () => {\n\t\tconsole.log('press add');\n\t};\n\t// LOGICA END.\n\n\t// useEffect\n\tuseEffect(() => {}, []);\n\treturn (\n\t\t<article className=\"article__menuPlano\">\n\t\t\t<div className=\"article__menuPlano__limites\">\n\t\t\t\t<div className=\"article__menuPlano__limites__minMay\">\n\t\t\t\t\t<span>X_MIN: </span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tdefaultValue={statePlano.x_min}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input type=\"button\" value=\"-\" />\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input type=\"button\" value=\"+\" />\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"article__menuPlano__limites__minMay\">\n\t\t\t\t\t<span>Y_MAY:</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tdefaultValue={statePlano.y_max}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input type=\"button\" value=\"-\" />\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input type=\"button\" value=\"+\" />\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"article__menuPlano__salto\">\n\t\t\t\t<div className=\"article__menuPlano__salto__minMay\">\n\t\t\t\t\t<span>PRESS:</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tdefaultValue=\"ADD\"\n\t\t\t\t\t\t\tonClick={() => handleAdd()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default MenuPlano;\n","import React from 'react';\n\nconst MenuMover = () => {\n\treturn <div>mover</div>;\n};\n\nexport default MenuMover;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\n\n// styles:\nimport '../styles/PaletaColor.scss';\nimport iconLineaNone from '../assets/icons/lineaNone.svg';\n\nconst PaletaColor = (value) => {\n\t// useContext:\n\tconst { state, updateColor, updateColorFondo } = useContext(AppContext);\n\n\t// LOGICA:\n\tconst arrayPaletaColor = [\n\t\t{ colorLine: 'white', id: `colorNone-${value.tipo}` },\n\t\t{ colorLine: 'black', id: `colorBlack-${value.tipo}` },\n\t\t{ colorLine: 'red', id: `colorRed-${value.tipo}` },\n\t\t{ colorLine: 'green', id: `colorGreen-${value.tipo}` },\n\t\t{ colorLine: 'blue', id: `colorBlue-${value.tipo}` },\n\t\t{ colorLine: 'yellow', id: `colorYellow-${value.tipo}` },\n\t];\n\tconst updatePaletaColor = (color) => {\n\t\tarrayPaletaColor.forEach((dato) =>\n\t\t\tdocument.getElementById(dato.id).classList.remove('activePaletaColor')\n\t\t);\n\t\tlet elem = arrayPaletaColor.find((elem) => elem.colorLine == color);\n\t\tdocument.getElementById(elem.id).classList.add('activePaletaColor');\n\t};\n\tconst handlePaletaColor = (color) => {\n\t\tupdatePaletaColor(color);\n\t\tvalue.tipo == 'linea'\n\t\t\t? updateColor(color) // CONTEXT COLOR\n\t\t\t: updateColorFondo(color); // CONTEXT colorFondo\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t// se ejecuta solo la 1ra vez que se carga el componente.\n\t\tvalue.tipo == 'linea'\n\t\t\t? updatePaletaColor(state.color)\n\t\t\t: updatePaletaColor(state.colorFondo);\n\t}, [updateColor, updateColorFondo]);\n\n\treturn (\n\t\t<div className=\"article__menuLapiz__paletaColor\">\n\t\t\t<div>\n\t\t\t\t<span>{value.title}: </span>\n\t\t\t</div>\n\t\t\t<div className=\"article__menuLapiz__paletaColor__container\">\n\t\t\t\t{arrayPaletaColor.map((elem) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`color activePaletaColor ${elem.colorLine}`}\n\t\t\t\t\t\tid={elem.id}\n\t\t\t\t\t\tonClick={() => handleColor('colorNegro')}\n\t\t\t\t\t\tkey={elem.id}\n\t\t\t\t\t\tonClick={() => handlePaletaColor(elem.colorLine)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{elem.colorLine == 'white' && <img src={iconLineaNone} />}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default PaletaColor;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\n\n// styles:\nimport '../styles/PaletaGrosor.scss';\n//import iconLineaNone from '../assets/icons/lineaNone.svg';\nimport iconLineaS from '../assets/icons/lineaS.svg';\nimport iconLineaM from '../assets/icons/lineaM.svg';\nimport iconLineaL from '../assets/icons/lineaL.svg';\nimport iconLineaXL from '../assets/icons/lineaXL.svg';\nimport iconLineaXXL from '../assets/icons/lineaXXL.svg';\n\nconst PaletaGrosor = (title) => {\n\t// useContext:\n\tconst { state, updateGrosor } = useContext(AppContext);\n\n\t// LOGICA:\n\tconst arrayIconLinea = [\n\t\t//{ iconLine: iconLineaNone, grosor: 0, id: 'iconLineaNone' },\n\t\t{ iconLine: iconLineaS, grosor: 1, id: 'iconLineaS' },\n\t\t{ iconLine: iconLineaM, grosor: 2, id: 'iconLineaM' },\n\t\t{ iconLine: iconLineaL, grosor: 4, id: 'iconLineaL' },\n\t\t{ iconLine: iconLineaXL, grosor: 6, id: 'iconLineaXL' },\n\t\t{ iconLine: iconLineaXXL, grosor: 10, id: 'iconLineaXXL' },\n\t];\n\tconst updatePaletaGrosor = (grosor) => {\n\t\tconst array = document.querySelectorAll('.activeIconLinea');\n\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\tarray[i].classList.remove('activeIconLinea');\n\t\t}\n\t\tlet elem = arrayIconLinea.find((elem) => elem.grosor == grosor);\n\t\tdocument.getElementById(elem.id).classList.add('activeIconLinea');\n\t};\n\tconst handleLineaGrosor = (grosor) => {\n\t\tupdatePaletaGrosor(grosor);\n\t\tupdateGrosor(grosor); // CONTEXT\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t// se ejecuta solo la 1ra vez que se carga el componente.\n\t\tupdatePaletaGrosor(state.grosor);\n\t}, []);\n\n\treturn (\n\t\t<div className=\"article__menuLapiz__tamano\">\n\t\t\t<span htmlFor=\"\">{title.title}: </span>\n\t\t\t<div className=\"article__menuLapiz__tamano__icons\">\n\t\t\t\t{arrayIconLinea.map((elem) => (\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"article__menuLapiz__tamano__icons__icon \"\n\t\t\t\t\t\tsrc={elem.iconLine}\n\t\t\t\t\t\tid={elem.id}\n\t\t\t\t\t\tkey={`key-${elem.id}`}\n\t\t\t\t\t\tonClick={() => handleLineaGrosor(elem.grosor)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default PaletaGrosor;\n","import React, { useContext, useEffect } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\nimport AppContextLapiz from '../context/AppContextLapiz';\n\n// components:\nimport PaletaColor from '../components/PaletaColor';\nimport PaletaGrosor from '../components/PaletaGrosor';\n\n// styles:\nimport '../styles/MenuLapiz.scss';\n\nconst MenuLapiz = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\tconst { updateLapizColorGrosor } = useContext(AppContextLapiz);\n\n\t// LOGICA:\n\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tupdateLapizColorGrosor(state.color, state.grosor);\n\t}, [state]);\n\tuseEffect(() => {\n\t\t//console.log('STATE LAPIZ:', stateLapiz);\n\t}, []);\n\n\treturn (\n\t\t<article className=\"article__menuLapiz\">\n\t\t\t{<PaletaGrosor title=\"LINEA\" />}\n\t\t\t{<PaletaColor tipo=\"linea\" title=\"Color\" />}\n\t\t</article>\n\t);\n};\n\nexport default MenuLapiz;\n","import React, { useContext, useEffect } from 'react';\n\n// context:\nimport AppContextBorrador from '../context/AppContextBorrador';\n\n// style:\nimport '../styles/MenuBorrador.scss';\n\nconst MenuBorrador = () => {\n\t// useContext:\n\tconst { stateBorrador, updateBorradorGrosor } =\n\t\tuseContext(AppContextBorrador);\n\n\t// LOGICA:\n\tconst updatePaletaGrosor = (grosor) => {\n\t\tdocument.getElementById('grosorBorrador').value = grosor;\n\t};\n\tconst handleGrosor = (opMatematica) => {\n\t\tlet valor = parseInt(document.getElementById('grosorBorrador').value);\n\t\tlet update = true;\n\t\tswitch (opMatematica) {\n\t\t\tcase '+':\n\t\t\t\tvalor + 1 < 20 ? (valor = valor + 1) : (update = false);\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\tvalor - 1 > 0 ? (valor = valor - 1) : (update = false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tif (update) {\n\t\t\tdocument.getElementById('grosorBorrador').value = valor;\n\t\t\tupdateBorradorGrosor(valor); // CONTEXT\n\t\t} else {\n\t\t\tconsole.log('limite');\n\t\t}\n\t};\n\t// LOGICA END.\n\n\t// EFFECT:\n\tuseEffect(() => {\n\t\tupdatePaletaGrosor(stateBorrador.grosor);\n\t}, [stateBorrador, updateBorradorGrosor]);\n\n\treturn (\n\t\t<article className=\"article__menuBorrador\">\n\t\t\t<div className=\"article__menuBorrador__tamano\">\n\t\t\t\t<span htmlFor=\"\">TAMAÑO DEL BORRADOR: </span>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\tid=\"grosorBorrador\"\n\t\t\t\t\tplaceholder=\"2\"\n\t\t\t\t\tdefaultValue=\"4\"\n\t\t\t\t\tdisabled\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\tid=\"button1_txt\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tvalue=\"+\"\n\t\t\t\t\tonClick={() => handleGrosor('+')}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\tid=\"button2_txt\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tvalue=\"-\"\n\t\t\t\t\tonClick={() => handleGrosor('-')}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default MenuBorrador;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\n\n// styles:\nimport '../styles/MenuCuadrado.scss';\n\n// components:\nimport PaletaGrosor from '../components/PaletaGrosor';\nimport PaletaColorBorde from '../components/PaletaColor';\nimport PaletaColorFondo from '../components/PaletaColor';\n\nconst MenuCuadrado = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\tconst {\n\t\tstateCuadrado,\n\t\tupdateCuadradoBordeGrosor,\n\t\tupdateCuadradoBorde_ColorEstado,\n\t\tupdateCuadradoFondo_ColorEstado,\n\t\tupdate_all,\n\t} = useContext(AppContextCuadrado);\n\n\t// LOGICA:\n\t// LOGICA END\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t// solo 1 vez al cargar el componente:\n\t}, []);\n\tuseEffect(() => {\n\t\t// solo cuando se modifica [stateCuadrado]:\n\t}, [stateCuadrado]);\n\n\tuseEffect(() => {\n\t\t// se ejecuta cada vez que se modifica el state.color\n\t\tupdateCuadradoBorde_ColorEstado(state.color, state.color != 'white');\n\t}, [state.color]);\n\n\tuseEffect(() => {\n\t\t// se ejecuta cada vez que se modifica el state\n\t\tupdateCuadradoFondo_ColorEstado(\n\t\t\tstate.colorFondo,\n\t\t\tstate.colorFondo != 'white'\n\t\t);\n\t}, [state.colorFondo]);\n\n\tuseEffect(() => {\n\t\tupdateCuadradoBordeGrosor(state.grosor);\n\t}, [state.grosor]);\n\n\tuseEffect(() => {\n\t\tupdate_all(\n\t\t\tstate.color,\n\t\t\tstate.colorFondo,\n\t\t\tstate.grosor,\n\t\t\tstate.color != 'white',\n\t\t\tstate.colorFondo != 'white'\n\t\t);\n\t}, []);\n\treturn (\n\t\t<article className=\"article__menuCuadrado\">\n\t\t\t{<PaletaGrosor title=\"BORDE\" />}\n\t\t\t{<PaletaColorBorde tipo=\"linea\" title=\"Borde\" />}\n\t\t\t{<PaletaColorFondo tipo=\"fondo\" title=\"Fondo\" />}\n\t\t</article>\n\t);\n};\n\nexport default MenuCuadrado;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContextCanvas from '../context/AppContextCanvas';\n\n// styles:\nimport '../styles/MenuCuadricula.scss';\nimport iconCuadricula from '../assets/icons/cuadricula.svg';\nimport iconCuadriculaSin from '../assets/icons/cuadriculaSin.svg';\nimport iconCuadriculaNone from '../assets/icons/lineaNone.svg';\n\nconst MenuCuadricula = () => {\n\t// useContext:\n\tconst { stateCanvas, updateTipoCuadricula, updateCuadriculaWidth } =\n\t\tuseContext(AppContextCanvas);\n\n\t// LOGICA:\n\tconst arrayIconCuadricula = [\n\t\t{\n\t\t\ticonCuadricula: iconCuadricula,\n\t\t\ttipo: 'cuadricula',\n\t\t\tid: 'iconCuadricula',\n\t\t},\n\t\t{\n\t\t\ticonCuadricula: iconCuadriculaSin,\n\t\t\ttipo: 'linea',\n\t\t\tid: 'iconCuadriculaSin',\n\t\t},\n\t\t{\n\t\t\ticonCuadricula: iconCuadriculaNone,\n\t\t\ttipo: 'ninguno',\n\t\t\tid: 'iconCuadriculaNone',\n\t\t},\n\t];\n\tconst updatePaleta_tipoCuadricula = (tipo) => {\n\t\tconst array = document.querySelectorAll('.activeIconCuadricula');\n\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\tarray[i].classList.remove('activeIconCuadricula');\n\t\t}\n\t\tlet elem = arrayIconCuadricula.find((elem) => elem.tipo == tipo);\n\t\tdocument.getElementById(elem.id).classList.add('activeIconCuadricula');\n\t};\n\tconst handleCuadriculaTipo = (tipo) => {\n\t\tupdatePaleta_tipoCuadricula(tipo);\n\t\tupdateTipoCuadricula(tipo);\n\t};\n\tconst handleBtnAncho = (op) => {\n\t\top == '-' && stateCanvas.cuadriculaWidth > 10\n\t\t\t? updateCuadriculaWidth(stateCanvas.cuadriculaWidth - 10)\n\t\t\t: '';\n\t\top == '+' ? updateCuadriculaWidth(stateCanvas.cuadriculaWidth + 10) : '';\n\t};\n\t// LOGICA END.\n\n\t// useEffect\n\tuseEffect(() => {\n\t\tupdatePaleta_tipoCuadricula(stateCanvas.tipoCuadricula);\n\t}, []);\n\n\treturn (\n\t\t<article className=\"article__menuCuadricula\">\n\t\t\t<div className=\"article__menuCuadricula__paletaTipo\">\n\t\t\t\t<div>\n\t\t\t\t\t<span>Cuadricula: </span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"article__menuCuadricula__paletaTipo__icons\">\n\t\t\t\t\t{arrayIconCuadricula.map((elem) => (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName=\"article__menuCuadricula__paletaTipo__icons__icon \"\n\t\t\t\t\t\t\tsrc={elem.iconCuadricula}\n\t\t\t\t\t\t\tid={elem.id}\n\t\t\t\t\t\t\tkey={`key-${elem.id}`}\n\t\t\t\t\t\t\tonClick={() => handleCuadriculaTipo(elem.tipo)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"article__menuCuadricula__paletaAncho\">\n\t\t\t\t<div>\n\t\t\t\t\t<span>Tamaño: </span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputButton\">\n\t\t\t\t\t<input type=\"button\" value=\"-\" onClick={() => handleBtnAncho('-')} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputButton\">\n\t\t\t\t\t<input type=\"button\" value=\"+\" onClick={() => handleBtnAncho('+')} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default MenuCuadricula;\n","import React, { useContext, useEffect } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\nimport AppContextLinea from '../context/AppContextLinea';\n\n// components:\nimport PaletaColor from '../components/PaletaColor';\nimport PaletaGrosor from '../components/PaletaGrosor';\n\n// styles:\nimport '../styles/MenuLinea.scss';\n\nconst MenuLinea = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\tconst { updateLineaColorGrosor } = useContext(AppContextLinea);\n\n\t// LOGICA:\n\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tupdateLineaColorGrosor(state.color, state.grosor);\n\t}, [state]);\n\tuseEffect(() => {\n\t\t//console.log('STATE Linea:', stateLinea);\n\t}, []);\n\n\treturn (\n\t\t<article className=\"article__menuLinea\">\n\t\t\t{<PaletaGrosor title=\"LINEA\" />}\n\t\t\t{<PaletaColor tipo=\"linea\" title=\"Color\" />}\n\t\t</article>\n\t);\n};\n\nexport default MenuLinea;\n","import React, { useContext, useEffect } from 'react';\n\nimport AppContextText from '../context/AppContextText';\n\nimport '../styles/MenuText.scss';\n\nimport { u_textGrafica } from '../utils/UtilsText';\n\nconst MenuText = () => {\n\t// useContext:\n\tconst { s_textUpdateColor, stateText, s_textUpdateTamano, s_textAddHId } =\n\t\tuseContext(AppContextText);\n\n\t// LOGICA\n\tlet canvas = '';\n\tlet context = '';\n\tconst textoNew = {\n\t\tid: stateText.id,\n\t\ttamano: 11,\n\t\ttexto: 'new text',\n\t\tx_ini: 400,\n\t\ty_ini: 400,\n\t\tcolor: stateText.color,\n\t\tvisible: true,\n\t};\n\tconst arrayColorLinea = [\n\t\t{ colorLine: 'black', id: 'colorBlackText' },\n\t\t{ colorLine: 'red', id: 'colorRedText' },\n\t\t{ colorLine: 'green', id: 'colorGreenText' },\n\t\t{ colorLine: 'blue', id: 'colorBlueText' },\n\t\t{ colorLine: 'yellow', id: 'colorYellowText' },\n\t];\n\tconst graficaTexto = (context, obj) => {\n\t\tcontext.fillStyle = 'red'; //color de relleno\n\t\tcontext.font = `${obj.tamano}px arial`; //estilo de texto\n\t\tcontext.beginPath(); //iniciar ruta\n\t\tcontext.fillText(obj.texto, obj.x_ini, obj.y_ini); //texto con método stroke\n\t\tcontext.closePath();\n\t};\n\tconst graficaTexto2 = () => {\n\t\tcanvas = document.getElementById('canvas-1');\n\t\tcontext = canvas.getContext('2d');\n\t\tcontext.fillStyle = textoNew.color; //color de relleno\n\t\tcontext.font = `${textoNew.tamano}px arial`; //estilo de texto\n\t\tcontext.beginPath(); //iniciar ruta\n\t\tcontext.fillText(textoNew.texto, textoNew.x_ini, textoNew.y_ini); //texto con método stroke\n\t\tcontext.closePath();\n\t};\n\tconst updatePaletaColor = (color) => {\n\t\tconst array = document.querySelectorAll('.activeColorText');\n\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\tarray[i].classList.remove('activeColorText');\n\t\t}\n\t\tlet elem = arrayColorLinea.find((elem) => elem.colorLine == color);\n\t\tlet x = document.getElementById(elem.id);\n\t\tx.classList.add('activeColorText');\n\t\ttextoNew.color = color;\n\t};\n\tconst updatePaletaSize = (size) => {\n\t\tdocument.getElementById('t_inputTamano').value = size;\n\t};\n\tconst updatePaletaTexto = (txt) => {\n\t\tdocument.getElementById('t_inputTexto').value = txt;\n\t};\n\tconst handleColor = (color) => {\n\t\tupdatePaletaColor(color);\n\t\ts_textUpdateColor(color); // CONTEXT\n\t};\n\tconst handleAdd = () => {\n\t\tlet tamano = document.getElementById('t_inputTamano').value;\n\t\tlet texto = document.getElementById('t_inputTexto').value;\n\t\tlet color = stateText.color;\n\t\ttextoNew.texto = texto;\n\t\ttextoNew.color = color;\n\t\ttextoNew.tamano = tamano;\n\t\tgraficaTexto2();\n\t\t//u_textGrafica(context, textoNew);\n\t\ts_textAddHId(textoNew, stateText.id + 1);\n\t};\n\tconst handleSize = (op) => {\n\t\tlet tamano = parseInt(document.getElementById('t_inputTamano').value);\n\t\tif (op == '+') tamano++;\n\t\telse tamano--;\n\t\tdocument.getElementById('t_inputTamano').value = tamano;\n\t\ts_textUpdateTamano(tamano);\n\t};\n\n\t// LOGICA END\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById('canvas-1');\n\t\tcontext = canvas.getContext('2d');\n\t\tupdatePaletaColor(stateText.color);\n\t\tupdatePaletaSize(stateText.tamano);\n\t\tupdatePaletaTexto(stateText.texto);\n\t}, []);\n\treturn (\n\t\t<article className=\"article__menuText\">\n\t\t\t<div className=\"article__menuText__tamano\">\n\t\t\t\t<span htmlFor=\"\">TAMAÑO: </span>\n\t\t\t\t<input type=\"text\" defaultValue=\"11\" id=\"t_inputTamano\" />\n\t\t\t\t<input type=\"button\" value=\"-\" onClick={() => handleSize('-')} />\n\t\t\t\t<input type=\"button\" value=\"+\" onClick={() => handleSize('+')} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input type=\"text\" defaultValue=\"hola daniel\" id=\"t_inputTexto\" />\n\t\t\t\t<input type=\"button\" value=\"ADD\" onClick={() => handleAdd()} />\n\t\t\t</div>\n\t\t\t<div className=\"article__menuText__paletaColor\">\n\t\t\t\t<div>\n\t\t\t\t\t<span>COLOR: </span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"article__menuText__paletaColor__container\">\n\t\t\t\t\t{arrayColorLinea.map((elem) => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`color activeColorText ${elem.colorLine}`}\n\t\t\t\t\t\t\tid={elem.id}\n\t\t\t\t\t\t\tkey={elem.id}\n\t\t\t\t\t\t\tonClick={() => handleColor(elem.colorLine)}\n\t\t\t\t\t\t></div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default MenuText;\n","import React, { useEffect, useContext, useState } from 'react';\n\n// estilos:\nimport '../styles/Header.scss';\n\n// containers:\nimport Menu1 from '../containers/Menu1';\nimport MenuPlano from '../containers/MenuPlano';\nimport MenuMover from '../containers/MenuMover';\nimport MenuLapiz from '../containers/MenuLapiz';\nimport MenuBorrador from '../containers/MenuBorrador';\nimport MenuCuadrado from '../containers/MenuCuadrado';\nimport MenuCuadricula from '../containers/MenuCuadricula';\nimport MenuLinea from '../containers/MenuLinea';\nimport MenuText from '../containers/MenuText';\n\n// context:\nimport AppContext from '../context/AppContext';\n\n// iconos:\n\nconst Header = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\n\t// useState:\n\tconst [toggleMenu1, setToggleMenu1] = useState(false);\n\t//const [toggleMenu2, setToggleMenu2] = useState(false);\n\tconst [toggleMenuMover, setToggleMenuMover] = useState(false);\n\tconst [toggleMenuLapiz, setToggleMenuLapiz] = useState(false);\n\tconst [toggleMenuBorrador, setToggleMenuBorrador] = useState(false);\n\tconst [toggleMenuCuadrado, setToggleMenuCuadrado] = useState(false);\n\tconst [toggleMenuCuadricula, setToggleMenuCuadricula] = useState(false);\n\tconst [toggleMenuLinea, setToggleMenuLinea] = useState(false);\n\tconst [toggleMenuPlano, setToggleMenuPlano] = useState(false);\n\tconst [toggleMenuText, setToggleMenuText] = useState(false);\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tswitch (state.active) {\n\t\t\tcase 'moverIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(true);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lapizIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(true);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'borradorIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(true);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadradoIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(true);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lineaIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(true);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'planoIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(true);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadriculaIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(true);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'textIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetToggleMenu1(true);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tbreak;\n\t\t}\n\t}, [state]);\n\treturn (\n\t\t<nav className=\"header__nav\">\n\t\t\t<div className=\"navbar-left\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"/\">MathBoard</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div className=\"navbar-central\">\n\t\t\t\t{toggleMenu1 && <Menu1 />}\n\t\t\t\t{toggleMenuPlano && <MenuPlano />}\n\t\t\t\t{toggleMenuMover && <MenuMover />}\n\t\t\t\t{toggleMenuLapiz && <MenuLapiz />}\n\t\t\t\t{toggleMenuBorrador && <MenuBorrador />}\n\t\t\t\t{toggleMenuCuadrado && <MenuCuadrado />}\n\t\t\t\t{toggleMenuCuadricula && <MenuCuadricula />}\n\t\t\t\t{toggleMenuLinea && <MenuLinea />}\n\t\t\t\t{toggleMenuText && <MenuText />}\n\t\t\t</div>\n\t\t\t<div className=\"navbar-right\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li className=\"navbar-email\">UMSA / INFORMÁTICA</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\n\nexport default Header;\n","import React from 'react';\n\nimport '../styles/Key.scss';\n\nconst Key = (valor) => {\n\tconst handleClick = (key) => {\n\t\tconsole.log(key);\n\t};\n\n\treturn (\n\t\t<input\n\t\t\ttype=\"button\"\n\t\t\tvalue={valor.element}\n\t\t\tclassName={`key ${valor.element}`}\n\t\t\tonClick={() => handleClick(valor.element)}\n\t\t/>\n\t);\n};\n\nexport default Key;\n","import React, { useState, useContext } from 'react';\n\nimport AppContext from '../context/AppContext';\n\nimport '../styles/KeySvg.scss';\n\nconst KeySvg = (svg) => {\n\tconst [toggleShift, setToggleShift] = useState(false);\n\n\tconst { toLowerCase, toUpperCase } = useContext(AppContext);\n\n\tconst handleClick = (option) => {\n\t\tswitch (option) {\n\t\t\tcase 'shift-fill':\n\t\t\t\tconsole.log(option);\n\t\t\t\tsetToggleShift(!toggleShift);\n\t\t\t\ttoggleShift ? toUpperCase() : toLowerCase();\n\t\t\t\tbreak;\n\t\t\tcase 'DEL':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tcase 'caret-left':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tcase 'caret-right':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tcase 'backspace':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\treturn (\n\t\t<input\n\t\t\ttype=\"button\"\n\t\t\tvalue=\"\"\n\t\t\tclassName={`keySvg ${svg.element}`}\n\t\t\tid={svg.element}\n\t\t\tonClick={() => handleClick(svg.element)}\n\t\t/>\n\t);\n};\n\nexport default KeySvg;\n","import React from 'react';\n\nimport '../styles/KeySvg.scss';\n\nconst KeyTxt = (txt) => {\n\tconst handleClick = (option) => {\n\t\tconsole.log(option);\n\t};\n\n\treturn (\n\t\t<input\n\t\t\ttype=\"button\"\n\t\t\tvalue={txt.element}\n\t\t\tclassName={`keySvg ${txt.element}`}\n\t\t\tid={txt.element}\n\t\t\tonClick={() => handleClick(txt.element)}\n\t\t/>\n\t);\n};\n\nexport default KeyTxt;\n","import React, { useState, useContext } from 'react';\n\nimport AppContext from '../context/AppContext';\n\nimport Key from '../components/key';\nimport KeySvg from '../components/KeySvg';\nimport KeyTxt from '../components/KeyTxt';\n\nimport '../styles/Keyboard.scss';\n\nconst Keyboard = () => {\n\tconst { state } = useContext(AppContext);\n\tconst array = state.alfabeto;\n\n\tconst arrayNumbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n\treturn (\n\t\t<aside className=\"keyboard\">\n\t\t\t<div className=\"keyboard__alfaNumerico\">\n\t\t\t\t<div>\n\t\t\t\t\t{arrayNumbers.map((element) => (\n\t\t\t\t\t\t<Key element={element} key={`key-${element}`} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{array[0].map((elm) => (\n\t\t\t\t\t\t<Key element={elm} key={`key-${elm}`} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{array[1].map((elm) => (\n\t\t\t\t\t\t<Key element={elm} key={`key-${elm}`} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"keyboard__alfaNumerico__flex\">\n\t\t\t\t\t<KeySvg element={'shift-fill'} key={`key-fill`} />\n\t\t\t\t\t{array[2].map((elm) => (\n\t\t\t\t\t\t<Key element={elm} key={`key-${elm}`} />\n\t\t\t\t\t))}\n\t\t\t\t\t<KeySvg element={'backspace'} key={`key-backspace`} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"keyboard__alfaNumerico__flex\">\n\t\t\t\t\t<KeyTxt element={'DEL'} key={`key-del`} />\n\t\t\t\t\t<Key element={'espacio'} key={`key-espacio`} />\n\t\t\t\t\t<KeySvg element={'caret-left'} key={`key-caret-left`} />\n\t\t\t\t\t<KeySvg element={'caret-right'} key={`key-caret-right`} />\n\t\t\t\t\t<KeyTxt element={'INI'} key={`key-ini`} />\n\t\t\t\t\t<KeyTxt element={'FIN'} key={`key-fin`} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"keyboard__simbolos\">simbolos</div>\n\t\t</aside>\n\t);\n};\n\nexport default Keyboard;\n","import React, { useState, useContext, useEffect } from 'react';\n\nimport AppContext from '../context/AppContext';\nimport AppContextMover from '../context/AppContextMover';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextBorrador from '../context/AppContextBorrador';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextCuadricula from '../context/AppContextCanvas';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\nimport Keyboard from '../containers/Keyboard';\n\nimport '../styles/NavIzq.scss';\nimport moverIcon from '../assets/icons/move1.svg';\nimport lapizIcon from '../assets/icons/pen1.svg';\nimport borradorIcon from '../assets/icons/eraser1.svg';\nimport calculadoraIcon from '../assets/icons/calculator.svg';\nimport planoIcon from '../assets/icons/graph-up.svg';\nimport plusIcon from '../assets/icons/plus-square.svg';\nimport textIcon from '../assets/icons/textarea.svg';\nimport zoomInIcon from '../assets/icons/zoom-in.svg';\nimport zoomOutIcon from '../assets/icons/zoom-out.svg';\nimport cuadradoIcon from '../assets/icons/square.svg';\nimport lineaIcon from '../assets/icons/linea.svg';\nimport funcionIcon from '../assets/icons/function1.svg';\nimport sumatoriaIcon from '../assets/icons/sumatoria1.svg';\nimport imageIcon from '../assets/icons/image1.svg';\n\nimport cuadriculaIcon from '../assets/icons/cuadricula.svg';\nimport keyboardIcon from '../assets/icons/keyboard1.svg';\n\nconst NavIzq = () => {\n\t// useContext:\n\tconst { state, updateCanvasPaleta } = useContext(AppContext);\n\tconst { updateMoverActive } = useContext(AppContextMover);\n\tconst { updateLapizActive } = useContext(AppContextLapiz);\n\tconst { updateBorradorActive } = useContext(AppContextBorrador);\n\tconst { updateCuadradoActive } = useContext(AppContextCuadrado);\n\tconst { updateCuadriculaActive } = useContext(AppContextCuadricula);\n\tconst { updateLineaActive } = useContext(AppContextLinea);\n\tconst { updatePlanoActive } = useContext(AppContextPlano);\n\tconst { updateTextActive } = useContext(AppContextText);\n\n\t// useState:\n\tconst [toggleKeyboard, setToggleKeyboard] = useState(false);\n\n\tconst iconosPaleta = [\n\t\t[moverIcon, 'moverIcon'],\n\t\t[lapizIcon, 'lapizIcon'],\n\t\t[borradorIcon, 'borradorIcon'],\n\t\t// [funcionIcon, 'funcionIcon'],\n\t\t// [sumatoriaIcon, 'sumatoriaIcon'],\n\t\t[textIcon, 'textIcon'],\n\t\t[lineaIcon, 'lineaIcon'],\n\t\t[cuadradoIcon, 'cuadradoIcon'],\n\t\t// [calculadoraIcon, 'calculadoraIcon'],\n\t\t[planoIcon, 'planoIcon'],\n\t\t// [imageIcon, 'imageIcon'],\n\t\t// [zoomInIcon, 'zoomInIcon'],\n\t\t// [zoomOutIcon, 'zoomOutIcon'],\n\t\t[cuadriculaIcon, 'cuadriculaIcon'],\n\t];\n\n\tconst handleIcon = (icon) => {\n\t\t// HOOKS - useInitialState:\n\t\tupdateCanvasPaleta(icon);\n\n\t\t// HOOKS - useLapiz:\n\t\tswitch (icon) {\n\t\t\tcase 'moverIcon':\n\t\t\t\tupdateMoverActive(true);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lapizIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(true);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'borradorIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(true);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lineaIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(true);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadradoIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(true);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'planoIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(true);\n\t\t\t\tupdateCuadriculaActive(true);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadriculaIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(true);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'textIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tupdateTextActive(true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('Opcion no registrada!!!');\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t//console.log('useEffect: [state]');\n\t\ticonosPaleta.map((elem) => {\n\t\t\tif (state.active == elem[1]) {\n\t\t\t\tdocument.getElementById(elem[1]).classList.add('navIzq__nav__active');\n\t\t\t} else {\n\t\t\t\tdocument\n\t\t\t\t\t.getElementById(elem[1])\n\t\t\t\t\t.classList.remove('navIzq__nav__active');\n\t\t\t}\n\t\t});\n\t\treturn () => {\n\t\t\t//console.log('return useEffect: [state]');\n\t\t};\n\t}, [state]);\n\n\treturn (\n\t\t<nav className=\"navIzq__nav\">\n\t\t\t<div className=\"navIzq__nav__top\">\n\t\t\t\t{iconosPaleta.map((elem) => (\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={elem[0]}\n\t\t\t\t\t\tonClick={() => handleIcon(elem[1])}\n\t\t\t\t\t\tkey={elem[1]}\n\t\t\t\t\t\tid={elem[1]}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"navIzq__nav__botton\">\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"navIzq__nav__div__keyboard\"\n\t\t\t\t\tsrc={keyboardIcon}\n\t\t\t\t\tonClick={() => setToggleKeyboard(!toggleKeyboard)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{toggleKeyboard && <Keyboard />}\n\t\t</nav>\n\t);\n};\n\nexport default NavIzq;\n","const utilsCuadricula_graficaCuadricula = (context, canvas) => {\n\tcontext.lineWidth = canvas.lineaGrosor; // lineaGrosor\n\tcontext.strokeStyle = canvas.lineaColor; // lineaColor\n\tcontext.fillStyle = 'white';\n\tcontext.setLineDash([0, 0]);\n\n\tcontext.beginPath();\n\tcontext.moveTo(0, 0); // (x_ini, y_ini)\n\tcontext.lineTo(canvas.width, 0); // (x_fin, y_ini)\n\tcontext.lineTo(canvas.width, canvas.height); // (x_fin, y_ini)\n\tcontext.lineTo(0, canvas.height); // (x_fin, y_ini)\n\tcontext.lineTo(0, 0); // (x_fin, y_ini)\n\tcontext.fill();\n\tcontext.stroke(); // bordeColor = true\n\tcontext.closePath();\n\n\t// VERTICAL: |\n\tif (canvas.tipoCuadricula == 'cuadricula') {\n\t\tlet nroLineasV = canvas.width / canvas.cuadriculaWidth - 1;\n\t\tlet incV = canvas.cuadriculaWidth;\n\t\tlet i = 0;\n\t\tfor (i = 0; i < nroLineasV; i++) {\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(incV, 0); // (x_ini, y_ini)\n\t\t\tcontext.lineTo(incV, canvas.height); // (x_fin, y_ini)\n\t\t\tcontext.stroke(); // bordeColor = true\n\t\t\tincV = incV + canvas.cuadriculaWidth;\n\t\t}\n\t}\n\t// HORIZONTAL: -\n\tif (\n\t\tcanvas.tipoCuadricula == 'cuadricula' ||\n\t\tcanvas.tipoCuadricula == 'linea'\n\t) {\n\t\tlet nroLineasH = canvas.height / canvas.cuadriculaWidth - 1;\n\t\tlet incH = canvas.cuadriculaWidth;\n\t\tlet i = 0;\n\t\tfor (i = 0; i < nroLineasH; i++) {\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(0, incH); // (x_ini, y_ini)\n\t\t\tcontext.lineTo(canvas.width, incH); // (x_fin, y_ini)\n\t\t\tcontext.stroke(); // bordeColor = true\n\t\t\tincH = incH + canvas.cuadriculaWidth;\n\t\t}\n\t}\n};\n\nexport { utilsCuadricula_graficaCuadricula };\n","// cuadrado segmentado:\nconst utilsCuadrado_graficaCuadradoSegmentado = (context, cuadrado) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.fillStyle = 'yellow'; // fondo Color\n\tcontext.lineWidth = 1; // borde grosor de linea\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\tlet width = cuadrado.x_fin - cuadrado.x_ini;\n\tlet height = cuadrado.y_fin - cuadrado.y_ini;\n\n\tcontext.beginPath();\n\tcontext.strokeRect(cuadrado.x_ini, cuadrado.y_ini, width, height);\n\tcontext.fillRect(cuadrado.x_ini, cuadrado.y_ini, width, height);\n\tcontext.closePath();\n};\n\n// limpia el canvas:\nconst utilsCuadrado_LimpiaCuadrado = (context, cuadrado) => {\n\tlet width = cuadrado.x_fin - cuadrado.x_ini;\n\tlet height = cuadrado.y_fin - cuadrado.y_ini;\n\tcontext.clearRect(cuadrado.x_ini, cuadrado.y_ini, width, height);\n};\n\n// cuadrado:\nconst utilsCuadrado_graficaCuadrado = (context, cuadrado) => {\n\tcontext.strokeStyle = cuadrado.bordeColor; // bordeColor\n\tcontext.fillStyle = cuadrado.fondoColor; // fondoColor\n\tcontext.lineWidth = cuadrado.bordeGrosor; // bordeGrosor\n\tcontext.setLineDash([0, 0]); // lineas no segmentadas\n\n\tcontext.beginPath();\n\tcontext.moveTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\n\tcuadrado.fondoEstado ? context.fill() : ''; // fondoColor = true\n\tcuadrado.bordeEstado ? context.stroke() : ''; // bordeColor = true\n\tcontext.closePath();\n};\n\n// GRAFICA CUADRADOS - HISORIA:\nconst utilsCuadrado_graficaCuadradoHistoria = (context, array) => {\n\tarray.forEach((element) => utilsCuadrado_graficaCuadrado(context, element));\n};\nconst u_cuadradoGraficaH = (context, array) => {\n\tarray.forEach((element) => utilsCuadrado_graficaCuadrado(context, element));\n};\n\n// GRAFICA CUADRADOS - HISORIA MENOS EL I-ESIMO id:\nconst UC_graficaCuadradoHistoria_menosI = (context, array, i) => {\n\tarray.forEach((element) =>\n\t\telement.id != i ? utilsCuadrado_graficaCuadrado(context, element) : ''\n\t);\n};\n\n// CUADRADO: GET\nconst u_cuadradoGet = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((elem) =>\n\t\telem.x_ini < x && x < elem.x_fin && elem.y_ini < y && y < elem.y_fin\n\t\t\t? (resp = elem)\n\t\t\t: ''\n\t);\n\treturn resp;\n};\n// CUADRADO: DELETE POR ID\nconst u_cuadradoDeleteById = (array, cuadradoId) => {\n\tconsole.log('id:', cuadradoId);\n\tlet arrayNew = [];\n\tarray.forEach((element) => {\n\t\telement.id != cuadradoId ? arrayNew.push(element) : '';\n\t});\n\treturn arrayNew;\n};\n\nexport {\n\tutilsCuadrado_graficaCuadrado,\n\tutilsCuadrado_graficaCuadradoHistoria,\n\tutilsCuadrado_graficaCuadradoSegmentado,\n\tutilsCuadrado_LimpiaCuadrado,\n\tUC_graficaCuadradoHistoria_menosI,\n\tu_cuadradoGet,\n\tu_cuadradoDeleteById,\n\tu_cuadradoGraficaH,\n};\n","// LINEA:\nconst utilsLinea_graficaLinea = (context, linea) => {\n\tif (linea.visible) {\n\t\tcontext.lineWidth = linea.grosor;\n\t\tcontext.strokeStyle = linea.color;\n\t\tcontext.setLineDash([0, 0]);\n\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(linea.x_ini, linea.y_ini);\n\t\tcontext.lineTo(linea.x_fin, linea.y_fin);\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t}\n};\n\n// LAPIZ - HISORIA:\nconst utilsLinea_graficaLineaHistoria = (context, array) => {\n\tarray.forEach((element) => {\n\t\tutilsLinea_graficaLinea(context, element);\n\t});\n};\n// LINEA: GET\nconst u_lineaGet = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((elem) => {\n\t\tif (elem.visible) {\n\t\t\tlet p = {\n\t\t\t\tx1: elem.x_ini,\n\t\t\t\ty1: elem.y_ini,\n\t\t\t\tx2: elem.x_fin,\n\t\t\t\ty2: elem.y_fin,\n\t\t\t};\n\t\t\tlet a = p.y1 - p.y2;\n\t\t\tlet b = p.x2 - p.x1;\n\t\t\tlet c = p.y1 * (p.x1 - p.x2) - p.x1 * (p.y1 - p.y2);\n\t\t\tlet dnum = a * x + b * y + c;\n\t\t\tdnum < 0 ? (dnum = dnum * -1) : '';\n\t\t\tlet dden = Math.sqrt(a * a + b * b);\n\t\t\tlet d = dnum / dden;\n\t\t\tif (d < 20) resp = elem;\n\t\t}\n\t});\n\treturn resp;\n};\n// LINEA: GRAFICA HISOTORIA\nconst u_lineaGraficaH = (context, array) => {\n\tarray.forEach((element) => {\n\t\tutilsLinea_graficaLinea(context, element);\n\t});\n};\n// LINEA: DELETE POR ID\nconst u_lineaDeleteById = (array, linea_id) => {\n\tarray.forEach((element) => {\n\t\telement.id == linea_id ? (element.visible = false) : '';\n\t});\n\treturn array;\n};\n\nexport {\n\tutilsLinea_graficaLinea,\n\tutilsLinea_graficaLineaHistoria,\n\tu_lineaDeleteById,\n\tu_lineaGraficaH,\n\tu_lineaGet,\n};\n","// LAPIZ: GRAFICA\nconst utilsLapiz_graficaLapiz = (context, lapiz) => {\n\tif (lapiz.visible) {\n\t\tcontext.lineWidth = lapiz.grosor;\n\t\tcontext.strokeStyle = lapiz.color;\n\t\tcontext.setLineDash([0, 0]);\n\t\tcontext.beginPath();\n\t\tlet sw = true;\n\t\tlapiz.historiaLinea.forEach((element) => {\n\t\t\tsw ? context.moveTo(element[0], element[1]) : '';\n\t\t\tsw = false;\n\t\t\tcontext.lineTo(element[2], element[3]);\n\t\t});\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t}\n};\n// LAPIZ: GRAFICA HISORIA:\nconst utilsLapiz_graficaLapizHistoria = (context, array) => {\n\tarray.forEach((element) => utilsLapiz_graficaLapiz(context, element));\n};\n\n// LAPIZ: GET\nconst u_lapizGet = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((lapiz) => {\n\t\tif (lapiz.visible) {\n\t\t\tlet x1 = lapiz.x_min;\n\t\t\tlet y1 = lapiz.y_min;\n\t\t\tlet x2 = lapiz.x_may;\n\t\t\tlet y2 = lapiz.y_may;\n\t\t\tif (x1 - 20 < x && x < x2 + 20 && y1 - 20 < y && y < y2 + 20) {\n\t\t\t\tresp = lapiz;\n\t\t\t}\n\t\t}\n\t});\n\treturn resp;\n};\n// LAPIZ: ELIMINA LAPIZ POR ID\nconst u_lapizDeleteById = (array, lapiz_id) => {\n\tarray.forEach((element) => {\n\t\telement.id == lapiz_id ? (element.visible = false) : '';\n\t});\n};\nconst u_lapizGraficaH = (context, array) => {\n\tarray.forEach((element) => utilsLapiz_graficaLapiz(context, element));\n};\n\nexport {\n\tutilsLapiz_graficaLapiz,\n\tutilsLapiz_graficaLapizHistoria,\n\tu_lapizGet,\n\tu_lapizDeleteById,\n\tu_lapizGraficaH,\n};\n","const Texto = {\n\ttexto: 'Hola mundo', //texto de prueba\n\ttexto_color: 'black', //color externo\n\ttexto_fondo: 'black', //color de relleno\n\ttexto_font: 'bold 20px arial', //estilo de texto\n};\nconst generaRango = (start, stop, step) =>\n\tArray.from({ length: (stop - start) / step + 1 }, (_, i) => start + i * step);\n// ej. let array = generaRango(inicio, fin, salto);\n\nconst uPlano_graficaNumeros = (context, plano) => {\n\tlet arrayX = [];\n\tlet width = plano.x_fin - plano.x_ini;\n\tlet n = parseInt(width / plano.width_cuadricula);\n\tlet x = plano.x_min;\n\tfor (let i = 0; i < n - 1; i++) {\n\t\tarrayX.push(x);\n\t\tx = x + plano.salto;\n\t}\n\tcontext.fillStyle = 'black'; //color de relleno\n\tcontext.font = '11px arial'; //estilo de texto\n\tcontext.beginPath(); //iniciar ruta\n\tlet x1 = plano.x_ini + plano.width_cuadricula - 3;\n\tlet y1 = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula + 11;\n\tarrayX.forEach((x) => {\n\t\tx != 0\n\t\t\t? context.fillText(x, x1, y1) //texto con método stroke\n\t\t\t: context.fillText(x, x1 - 5, y1);\n\t\tx1 = x1 + plano.width_cuadricula;\n\t});\n\tcontext.closePath();\n\n\tlet arrayY = [];\n\tlet heigth = plano.y_fin - plano.y_ini;\n\tn = parseInt(heigth / plano.width_cuadricula);\n\tlet y = plano.y_max;\n\tfor (let i = 0; i < n; i++) {\n\t\tarrayY.push(y);\n\t\ty = y - plano.salto;\n\t}\n\tx1 = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula - 3;\n\ty1 = plano.y_ini + plano.width_cuadricula + 5;\n\n\tcontext.textAlign = 'end';\n\tcontext.beginPath(); //iniciar ruta\n\tarrayY.forEach((y) => {\n\t\tif (y != 0) context.fillText(y, x1, y1); //texto con método stroke\n\t\ty1 = y1 + plano.width_cuadricula;\n\t});\n\tcontext.closePath();\n\n\tcontext.textAlign = 'start';\n\tcontext.beginPath(); //iniciar ruta\n\tx1 = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula + 8;\n\ty1 = plano.y_ini + 12;\n\tcontext.fillText('Y', x1, y1);\n\tx1 = plano.x_fin - 12;\n\ty1 = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula - 10;\n\tcontext.fillText('X', x1, y1);\n\tcontext.closePath();\n};\nconst utilsPlano_graficaCuadricula = (context, plano) => {\n\tcontext.lineWidth = 1; // lineaGrosor\n\t//context.strokeStyle = plano.color_cuadricula; // lineaColor\n\tcontext.strokeStyle = '#d5dbdb'; // lineaColor\n\tcontext.setLineDash([0, 0]);\n\tlet width = plano.x_fin - plano.x_ini;\n\tlet width_cuadricula = plano.width_cuadricula;\n\t// VERTICAL: |\n\tlet nroLineasV = width / width_cuadricula - 1;\n\tlet incV = width_cuadricula;\n\tlet x1 = plano.x_ini + incV;\n\tlet y1 = plano.y_ini;\n\tlet y2 = plano.y_fin;\n\tlet i = 0;\n\tfor (i = 0; i < nroLineasV; i++) {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(x1, y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(x1, y2); // (x_fin, y_ini)\n\t\tcontext.stroke(); // bordeColor = true\n\t\tx1 = x1 + incV;\n\t}\n\t// HORIZONTAL: -\n\tlet height = plano.y_fin - plano.y_ini;\n\tlet nroLineasH = height / width_cuadricula - 1;\n\tlet incH = width_cuadricula;\n\tx1 = plano.x_ini;\n\tlet x2 = plano.x_fin;\n\ty1 = plano.y_ini + incH;\n\n\tfor (i = 0; i < nroLineasH; i++) {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(x1, y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(x2, y1); // (x_fin, y_ini)\n\t\tcontext.stroke(); // bordeColor = true\n\t\ty1 = y1 + incH;\n\t}\n};\n// PLANO SIN EJES:\nconst uPlano_graficaCuadrado = (context, cuadrado) => {\n\tcontext.strokeStyle = cuadrado.bordeColor; // bordeColor\n\tcontext.fillStyle = cuadrado.fondoColor; // fondoColor\n\tcontext.lineWidth = cuadrado.bordeGrosor; // bordeGrosor\n\tcontext.setLineDash([0, 0]); // lineas no segmentadas\n\n\tcontext.beginPath();\n\tcontext.moveTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\n\tcuadrado.fondoEstado ? context.fill() : ''; // fondoColor = true\n\tcuadrado.bordeEstado ? context.stroke() : ''; // bordeColor = true\n\tcontext.closePath();\n};\n// LINEA:\nconst utilsLinea_graficaLinea = (context, linea) => {\n\tcontext.lineWidth = linea.grosor;\n\tcontext.strokeStyle = linea.color;\n\tcontext.setLineDash([0, 0]);\n\n\tcontext.beginPath();\n\tcontext.moveTo(linea.x_ini, linea.y_ini);\n\tcontext.lineTo(linea.x_fin, linea.y_fin);\n\tcontext.stroke();\n\tcontext.closePath();\n};\n// TRIANGULO:\nconst utilsPlano_graficaTriangulo = (context, plano) => {\n\tlet x1 = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula;\n\tlet y1 = plano.y_ini + 2;\n\tlet x2 = x1 - 5;\n\tlet y2 = y1 + 5;\n\tlet x3 = x1 + 5;\n\tlet y3 = y1 + 5;\n\tcontext.beginPath();\n\tcontext.fillStyle = 'black';\n\tcontext.moveTo(x1, y1);\n\tcontext.lineTo(x2, y2);\n\tcontext.lineTo(x3, y3);\n\tcontext.closePath();\n\tcontext.stroke();\n\tcontext.fill();\n\n\tx1 = plano.x_fin - 2;\n\ty1 = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula;\n\tx2 = x1 - 5;\n\ty2 = y1 - 5;\n\tx3 = x1 - 5;\n\ty3 = y1 + 5;\n\tcontext.beginPath();\n\tcontext.fillStyle = 'black';\n\tcontext.moveTo(x1, y1);\n\tcontext.lineTo(x2, y2);\n\tcontext.lineTo(x3, y3);\n\tcontext.closePath();\n\tcontext.stroke();\n\tcontext.fill();\n};\nconst uPlano_graficaCuadradoConEjes = (context, plano) => {\n\tif (plano.visible) {\n\t\tcontext.strokeStyle = plano.bordeColor; // bordeColor\n\t\tcontext.fillStyle = plano.fondoColor; // fondoColor\n\t\tcontext.lineWidth = plano.bordeGrosor; // bordeGrosor\n\t\tcontext.setLineDash([0, 0]); // lineas no segmentadas\n\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(plano.x_ini, plano.y_ini); // (x_ini, y_ini)\n\t\tcontext.lineTo(plano.x_fin, plano.y_ini); // (x_fin, y_ini)\n\t\tcontext.lineTo(plano.x_fin, plano.y_fin); // (x_fin, y_fin)\n\t\tcontext.lineTo(plano.x_ini, plano.y_fin); // (x_ini, y_fin)\n\t\tcontext.lineTo(plano.x_ini, plano.y_ini); // (x_ini, y_ini)\n\n\t\tplano.fondoEstado ? context.fill() : ''; // fondoColor = true\n\t\tplano.bordeEstado ? context.stroke() : ''; // bordeColor = true\n\t\tcontext.closePath();\n\n\t\tutilsPlano_graficaCuadricula(context, plano);\n\t\tlet Linea = {\n\t\t\tid: 0,\n\t\t\tgrosor: 1,\n\t\t\tcolor: 'black',\n\t\t\tx_ini: 0,\n\t\t\ty_ini: 0,\n\t\t\tx_fin: 0,\n\t\t\ty_fin: 0,\n\t\t};\n\t\tLinea.x_ini = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula;\n\t\tLinea.x_fin = Linea.x_ini;\n\t\tLinea.y_ini = plano.y_ini;\n\t\tLinea.y_fin = plano.y_fin;\n\t\tutilsLinea_graficaLinea(context, Linea); // VERTICAL\n\t\tLinea.x_ini = plano.x_ini;\n\t\tLinea.x_fin = plano.x_fin;\n\t\tLinea.y_ini = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula;\n\t\tLinea.y_fin = Linea.y_ini;\n\t\tutilsLinea_graficaLinea(context, Linea); // HORIZONTAL\n\n\t\tutilsPlano_graficaTriangulo(context, plano);\n\t\t// NUMEROS:\n\t\tuPlano_graficaNumeros(context, plano);\n\t}\n};\n\n// GRAFICA PLANOS - HISORIA:\nconst uPlano_graficaCuadradoHistoria = (context, array) => {\n\tarray.forEach((element) => uPlano_graficaCuadrado(context, element));\n};\nconst uPlano_graficaCuadradoHistoriaConEjes = (context, array) => {\n\tarray.forEach((element) => uPlano_graficaCuadradoConEjes(context, element));\n};\n// PLANO: GET\nconst u_planoGet = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((plano) => {\n\t\tif (plano.visible) {\n\t\t\tplano.x_ini < x && x < plano.x_fin && plano.y_ini < y && y < plano.y_fin\n\t\t\t\t? (resp = plano)\n\t\t\t\t: '';\n\t\t}\n\t});\n\treturn resp;\n};\n// PLANO: GRAFICA PLANO\nconst u_planoGraficaH = (context, array) => {\n\tarray.forEach((element) => uPlano_graficaCuadradoConEjes(context, element));\n};\n// PLANO: DELETE POR ID\nconst u_planoDeleteById = (array, id) => {\n\tarray.forEach((element) => {\n\t\telement.id == id ? (element.visible = false) : '';\n\t});\n};\nexport {\n\tuPlano_graficaCuadrado,\n\tuPlano_graficaCuadradoConEjes,\n\tuPlano_graficaCuadradoHistoria,\n\tuPlano_graficaCuadradoHistoriaConEjes,\n\tu_planoGet,\n\tu_planoGraficaH,\n\tu_planoDeleteById,\n};\n","// SELECT CUADRADO DE HISTORIA:\nconst u_getCuadrado = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((elem) => {\n\t\tif (elem.visible) {\n\t\t\telem.x_ini < x && x < elem.x_fin && elem.y_ini < y && y < elem.y_fin\n\t\t\t\t? (resp = elem)\n\t\t\t\t: '';\n\t\t}\n\t});\n\treturn resp;\n};\n// MUEVE CUADRADO SELECT:\nconst u_moverCuadrado = (cuadrado, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tcuadrado.x_ini = cuadrado.x_ini + recorrido_x;\n\tcuadrado.y_ini = cuadrado.y_ini + recorrido_y;\n\tcuadrado.x_fin = cuadrado.x_fin + recorrido_x;\n\tcuadrado.y_fin = cuadrado.y_fin + recorrido_y;\n\treturn cuadrado;\n};\n// UPDATE ZISE CUADRADO SELECT:\nconst u_updateZiseCuadrado = (cuadrado, mouse) => {\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tswitch (mouse.cuadrado_pto) {\n\t\tcase 'top':\n\t\t\tcuadrado.y_ini = cuadrado.y_ini + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'right':\n\t\t\tcuadrado.x_fin = cuadrado.x_fin + recorrido_x;\n\t\t\tbreak;\n\t\tcase 'button':\n\t\t\tcuadrado.y_fin = cuadrado.y_fin + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'lefth':\n\t\t\tcuadrado.x_ini = cuadrado.x_ini + recorrido_x;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log('ocurrio un error');\n\t\t\tbreak;\n\t}\n\treturn cuadrado;\n};\n// CUADRADOS PEQUEÑOS PAR UPDATE DEL CUADRADO:\nconst get_pts_redimencion = (cuadrado) => {\n\tlet width_p = 10;\n\tlet width_c = 2;\n\n\tlet x_ini = cuadrado.x_ini - width_c;\n\tlet y_ini = cuadrado.y_ini - width_c;\n\tlet x_fin = cuadrado.x_fin + width_c;\n\tlet y_fin = cuadrado.y_fin + width_c;\n\n\tlet vectorPuntosCuadrado = [\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_ini - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_ini + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_fin - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_fin + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_fin - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_fin + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_ini + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t];\n\treturn vectorPuntosCuadrado;\n};\n// CUADRADO SEGMENTADO:\nconst u_cuadradoSegmentado = (context, cuadrado) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 2; // borde grosor de linea\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet x_ini = cuadrado.x_ini - 2;\n\tlet y_ini = cuadrado.y_ini - 2;\n\tlet x_fin = cuadrado.x_fin + 2;\n\tlet y_fin = cuadrado.y_fin + 2;\n\n\tcontext.beginPath();\n\tcontext.moveTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(x_fin, y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(x_fin, y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(x_ini, y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.stroke();\n\tcontext.closePath();\n\n\tcontext.fillStyle = 'red'; // borde Color\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet array = get_pts_redimencion(cuadrado);\n\tarray.forEach((elem) => {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y1); // (x_fin, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y2); // (x_fin, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y2); // (x_ini, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.fill();\n\t\tcontext.closePath();\n\t});\n};\n\n// SELECT LINEA DE HISTORIA:\nconst u_getLinea = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((elem) => {\n\t\tif (elem.visible) {\n\t\t\tlet p = {\n\t\t\t\tx1: elem.x_ini,\n\t\t\t\ty1: elem.y_ini,\n\t\t\t\tx2: elem.x_fin,\n\t\t\t\ty2: elem.y_fin,\n\t\t\t};\n\t\t\tlet a = p.y1 - p.y2;\n\t\t\tlet b = p.x2 - p.x1;\n\t\t\tlet c = p.y1 * (p.x1 - p.x2) - p.x1 * (p.y1 - p.y2);\n\t\t\tlet dnum = a * x + b * y + c;\n\t\t\tdnum < 0 ? (dnum = dnum * -1) : '';\n\t\t\tlet dden = Math.sqrt(a * a + b * b);\n\t\t\tlet d = dnum / dden;\n\t\t\tif (d < 20) resp = elem;\n\t\t}\n\t});\n\treturn resp;\n};\n// CUADRADOS PARA UPDATE LINEA:\nconst get_pts_redimencion_linea = (linea) => {\n\tlet width_p = 10;\n\n\tlet x_ini = linea.x_ini;\n\tlet y_ini = linea.y_ini;\n\tlet x_fin = linea.x_fin;\n\tlet y_fin = linea.y_fin;\n\n\tlet vectorPuntosLinea = [\n\t\t{\n\t\t\tx1: x_ini - width_p,\n\t\t\ty1: y_ini - width_p,\n\t\t\tx2: x_ini + width_p,\n\t\t\ty2: y_ini + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_fin - width_p,\n\t\t\ty1: y_fin - width_p,\n\t\t\tx2: x_fin + width_p,\n\t\t\ty2: y_fin + width_p,\n\t\t},\n\t];\n\treturn vectorPuntosLinea;\n};\n// LINEA SEGMENTADO:\nconst u_lineaSegmentado = (context, linea) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 1; // borde grosor de linea\n\tcontext.setLineDash([10, 4]); // lineas segmentadas\n\n\tlet x_ini = linea.x_ini;\n\tlet y_ini = linea.y_ini;\n\tlet x_fin = linea.x_fin;\n\tlet y_fin = linea.y_fin;\n\n\tlet inc = 20;\n\n\tcontext.beginPath();\n\tcontext.moveTo(x_ini - inc, y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(x_ini + inc, y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(x_fin + inc, y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(x_fin - inc, y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(x_ini - inc, y_ini); // (x_ini, y_ini)\n\tcontext.stroke();\n\tcontext.closePath();\n\n\tcontext.fillStyle = 'red'; // borde Color\n\tcontext.setLineDash([10, 4]); // lineas segmentadas\n\n\tlet array = get_pts_redimencion_linea(linea);\n\tarray.forEach((elem) => {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y1); // (x_fin, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y2); // (x_fin, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y2); // (x_ini, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.fill();\n\t\tcontext.closePath();\n\t});\n};\n// MUEVE LINEA SELECT:\nconst u_moverLinea = (linea, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tlinea.x_ini = linea.x_ini + recorrido_x;\n\tlinea.y_ini = linea.y_ini + recorrido_y;\n\tlinea.x_fin = linea.x_fin + recorrido_x;\n\tlinea.y_fin = linea.y_fin + recorrido_y;\n\treturn linea;\n};\n// UPDATE ZISE LINEA SELECT:\nconst u_updateZiseLinea = (linea, mouse) => {\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tswitch (mouse.linea_pto) {\n\t\tcase 'ini':\n\t\t\tlinea.x_ini = linea.x_ini + recorrido_x;\n\t\t\tlinea.y_ini = linea.y_ini + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'fin':\n\t\t\tlinea.x_fin = linea.x_fin + recorrido_x;\n\t\t\tlinea.y_fin = linea.y_fin + recorrido_y;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log('ocurrio un error');\n\t\t\tbreak;\n\t}\n\treturn linea;\n};\n\n// PLANO:\nconst u_getPlano = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((plano) => {\n\t\tif (plano.visible) {\n\t\t\tplano.x_ini < x && x < plano.x_fin && plano.y_ini < y && y < plano.y_fin\n\t\t\t\t? (resp = plano)\n\t\t\t\t: '';\n\t\t}\n\t});\n\treturn resp;\n};\n// PLANO SEGMENTADO:\nconst u_planoSegmentado = (context, cuadrado) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 2; // borde grosor de linea\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet x_ini = cuadrado.x_ini - 2;\n\tlet y_ini = cuadrado.y_ini - 2;\n\tlet x_fin = cuadrado.x_fin + 2;\n\tlet y_fin = cuadrado.y_fin + 2;\n\n\tcontext.beginPath();\n\tcontext.moveTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(x_fin, y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(x_fin, y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(x_ini, y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.stroke();\n\tcontext.closePath();\n\n\tcontext.fillStyle = 'red'; // borde Color\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet array = get_pts_redimencion(cuadrado);\n\tarray.forEach((elem) => {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y1); // (x_fin, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y2); // (x_fin, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y2); // (x_ini, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.fill();\n\t\tcontext.closePath();\n\t});\n};\n// MUEVE PLANO SELECT:\nconst u_moverPlano = (plano, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tplano.x_ini = plano.x_ini + recorrido_x;\n\tplano.y_ini = plano.y_ini + recorrido_y;\n\tplano.x_fin = plano.x_fin + recorrido_x;\n\tplano.y_fin = plano.y_fin + recorrido_y;\n\treturn plano;\n};\n// CUADRADOS PEQUEÑOS PAR UPDATE DEL PLANO:\nconst get_pts_redimencion_plano = (cuadrado) => {\n\tlet width_p = 10;\n\tlet width_c = 2;\n\n\tlet x_ini = cuadrado.x_ini - width_c;\n\tlet y_ini = cuadrado.y_ini - width_c;\n\tlet x_fin = cuadrado.x_fin + width_c;\n\tlet y_fin = cuadrado.y_fin + width_c;\n\n\tlet vectorPuntosCuadrado = [\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_ini - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_ini + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_fin - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_fin + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_fin - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_fin + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_ini + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t];\n\treturn vectorPuntosCuadrado;\n};\n// UPDATE ZISE CUADRADO SELECT:\nconst u_updateZisePlano = (plano, mouse) => {\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tswitch (mouse.plano_pto) {\n\t\tcase 'top':\n\t\t\tplano.y_ini = plano.y_ini + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'right':\n\t\t\tplano.x_fin = plano.x_fin + recorrido_x;\n\t\t\tbreak;\n\t\tcase 'button':\n\t\t\tplano.y_fin = plano.y_fin + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'lefth':\n\t\t\tplano.x_ini = plano.x_ini + recorrido_x;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log('ocurrio un error');\n\t\t\tbreak;\n\t}\n\treturn plano;\n};\nexport {\n\tu_getCuadrado,\n\tu_moverCuadrado,\n\tu_cuadradoSegmentado,\n\tget_pts_redimencion,\n\tu_updateZiseCuadrado,\n\tu_getLinea,\n\tu_lineaSegmentado,\n\tu_moverLinea,\n\tget_pts_redimencion_linea,\n\tu_updateZiseLinea,\n\tu_getPlano,\n\tu_planoSegmentado,\n\tu_moverPlano,\n\tget_pts_redimencion_plano,\n\tu_updateZisePlano,\n};\n","const u_getLapiz = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((lapiz) => {\n\t\tif (lapiz.visible) {\n\t\t\tlet x1 = lapiz.x_min;\n\t\t\tlet y1 = lapiz.y_min;\n\t\t\tlet x2 = lapiz.x_may;\n\t\t\tlet y2 = lapiz.y_may;\n\t\t\tif (x1 - 20 < x && x < x2 + 20 && y1 - 20 < y && y < y2 + 20) {\n\t\t\t\tresp = lapiz;\n\t\t\t}\n\t\t}\n\t});\n\treturn resp;\n};\n// CUADRADO SEGMENTADO:\nconst u_lapizSegmentado = (context, lapiz) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 1; // borde grosor de linea\n\tcontext.setLineDash([10, 4]); // lineas segmentadas\n\n\tcontext.beginPath();\n\tcontext.moveTo(lapiz.x_min - 20, lapiz.y_min - 20); // (x_ini, y_ini)\n\tcontext.lineTo(lapiz.x_may + 20, lapiz.y_min - 20); // (x_fin, y_ini)\n\tcontext.lineTo(lapiz.x_may + 20, lapiz.y_may + 20); // (x_fin, y_fin)\n\tcontext.lineTo(lapiz.x_min - 20, lapiz.y_may + 20); // (x_ini, y_fin)\n\tcontext.lineTo(lapiz.x_min - 20, lapiz.y_min - 20); // (x_ini, y_ini)\n\tcontext.stroke();\n\tcontext.closePath();\n};\n// MUEVE LAPIZ SELECT:\nconst u_moverLapiz = (lapiz, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tlapiz.historiaLinea.forEach((linea) => {\n\t\tlinea[0] = linea[0] + recorrido_x;\n\t\tlinea[1] = linea[1] + recorrido_y;\n\t\tlinea[2] = linea[2] + recorrido_x;\n\t\tlinea[3] = linea[3] + recorrido_y;\n\t});\n\tlapiz.x_min = lapiz.x_min + recorrido_x;\n\tlapiz.x_may = lapiz.x_may + recorrido_x;\n\tlapiz.y_min = lapiz.y_min + recorrido_y;\n\tlapiz.y_may = lapiz.y_may + recorrido_y;\n\treturn lapiz;\n};\n\nexport { u_getLapiz, u_lapizSegmentado, u_moverLapiz };\n","// TEXTO: GRAFICA\nconst u_textGrafica = (context, obj) => {\n\tcontext.fillStyle = obj.color;\n\tcontext.font = `${obj.tamano}px arial`;\n\tcontext.beginPath();\n\tcontext.fillText(obj.texto, obj.x_ini, obj.y_ini);\n\tcontext.stroke(); // quit\n\tcontext.closePath();\n};\n// TEXTO: GRAFICA HISORIA\nconst u_textGraficaH = (context, array) => {\n\tarray.forEach((element) => {\n\t\tif (element.visible) {\n\t\t\tu_textGrafica(context, element);\n\t\t}\n\t});\n};\n// TEXTO: GET\nconst u_getText = (array, x, y) => {\n\tconsole.log(array, x, y);\n\tlet resp = '';\n\tarray.forEach((texto) => {\n\t\tlet x1 = texto.x_ini;\n\t\tlet x2 = x1 + 100;\n\t\tlet y1 = texto.y_ini - 50;\n\t\tlet y2 = texto.y_ini;\n\t\tif (texto.visible) {\n\t\t\tx1 < x && x < x2 && y1 < y && y < y2 ? (resp = texto) : '';\n\t\t}\n\t});\n\tconsole.log('resp:', resp);\n\treturn resp;\n};\n// TEXTO: MOVER\nconst u_textMover = (texto, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\ttexto.x_ini = texto.x_ini + recorrido_x;\n\ttexto.y_ini = texto.y_ini + recorrido_y;\n\treturn texto;\n};\n// TEXTO: DELETE POR ID\nconst u_textDeleteById = (array, id) => {\n\tarray.forEach((element) => {\n\t\telement.id == id ? (element.visible = false) : '';\n\t});\n};\nexport {\n\tu_textGraficaH,\n\tu_textGrafica,\n\tu_getText,\n\tu_textMover,\n\tu_textDeleteById,\n};\n","import { useContext, useEffect } from 'react';\n\n// CONTEXT:\nimport AppContextMover from '../context/AppContextMover';\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport { utilsCuadrado_graficaCuadradoHistoria } from '../utils/UtilsCuadrado';\nimport { utilsLinea_graficaLineaHistoria } from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\nimport { uPlano_graficaCuadradoHistoriaConEjes } from '../utils/UtilsPlano';\nimport {\n\tu_getCuadrado,\n\tu_moverCuadrado,\n\tu_cuadradoSegmentado,\n\tget_pts_redimencion,\n\tu_updateZiseCuadrado,\n\tu_getLinea, // linea\n\tu_lineaSegmentado,\n\tu_moverLinea,\n\tget_pts_redimencion_linea,\n\tu_updateZiseLinea,\n\tu_getPlano,\n\tu_planoSegmentado,\n\tu_moverPlano,\n\tget_pts_redimencion_plano,\n\tu_updateZisePlano,\n} from '../utils/UtilsMover';\nimport {\n\tu_getLapiz,\n\tu_lapizSegmentado,\n\tu_moverLapiz,\n} from '../utils/UtilsMoverLapiz';\nimport { u_textGraficaH, u_getText, u_textMover } from '../utils/UtilsText';\n\nconst PaintMover = (id_canvas) => {\n\t// useContext\n\tconst { stateMover } = useContext(AppContextMover);\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\tconst { stateText } = useContext(AppContextText);\n\n\t// LOGICA:\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tuPlano_graficaCuadradoHistoriaConEjes(context, statePlano.historiaPlano); // plano cartesiano\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t\tu_textGraficaH(context, stateText.historiaText);\n\t};\n\tlet canvas = '';\n\tlet context = '';\n\tlet cuadradoSelect = {};\n\tlet lineaSelect = {};\n\tlet lapizSelect = {};\n\tlet planoSelect = {};\n\tlet textSelect = {};\n\n\tconst mouse = {\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t\tclick: false,\n\t\t// CUADRADO\n\t\tmover_cuadrado: false,\n\t\tseleccionar_cuadrado_pts: false,\n\t\tcuadrado_punto_mover: false,\n\t\tcuadrado_pto: '',\n\t\t// LINEA\n\t\tmover_linea: false,\n\t\tseleccionar_linea_pts: false,\n\t\tlinea_punto_mover: false,\n\t\tlinea_pto: '',\n\t\t// LAPIZ\n\t\tactive: true,\n\t\tmover_lapiz: false,\n\t\t// PLANO:\n\t\tplano_mover: false,\n\t\tplano_seleccionar_pts: false,\n\t\tplano_pto_mover: false,\n\t\tplano_pto: '',\n\t\t// TEXTO\n\t\ttexo_active: true,\n\t\ttexto_mover: false,\n\t};\n\tconst canvasMoverDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\tconst x_real = x - canvasMoverDatos.left;\n\t\tconst y_real = y - canvasMoverDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\t};\n\tconst busca_cuadrado_ptoClick = (x, y, array) => {\n\t\tlet resp = '';\n\t\tif (\n\t\t\tarray[0].x1 < x &&\n\t\t\tx < array[0].x2 &&\n\t\t\tarray[0].y1 < y &&\n\t\t\ty < array[0].y2\n\t\t)\n\t\t\tresp = 'top';\n\t\telse if (\n\t\t\tarray[1].x1 < x &&\n\t\t\tx < array[1].x2 &&\n\t\t\tarray[1].y1 < y &&\n\t\t\ty < array[1].y2\n\t\t)\n\t\t\tresp = 'right';\n\t\telse if (\n\t\t\tarray[2].x1 < x &&\n\t\t\tx < array[2].x2 &&\n\t\t\tarray[2].y1 < y &&\n\t\t\ty < array[2].y2\n\t\t)\n\t\t\tresp = 'button';\n\t\telse if (\n\t\t\tarray[3].x1 < x &&\n\t\t\tx < array[3].x2 &&\n\t\t\tarray[3].y1 < y &&\n\t\t\ty < array[3].y2\n\t\t)\n\t\t\tresp = 'lefth';\n\t\treturn resp;\n\t};\n\tconst busca_linea_ptoClick = (x, y, array) => {\n\t\tlet resp = '';\n\t\tif (\n\t\t\tarray[0].x1 < x &&\n\t\t\tx < array[0].x2 &&\n\t\t\tarray[0].y1 < y &&\n\t\t\ty < array[0].y2\n\t\t)\n\t\t\tresp = 'ini';\n\t\telse if (\n\t\t\tarray[1].x1 < x &&\n\t\t\tx < array[1].x2 &&\n\t\t\tarray[1].y1 < y &&\n\t\t\ty < array[1].y2\n\t\t)\n\t\t\tresp = 'fin';\n\t\treturn resp;\n\t};\n\tconst clickSobreLapiz = () => {\n\t\tlapizSelect || cuadradoSelect || lineaSelect ? paint() : '';\n\t\tlapizSelect = u_getLapiz(\n\t\t\tstateLapiz.historiaLapiz,\n\t\t\tmouse.pos.x,\n\t\t\tmouse.pos.y\n\t\t);\n\t\tif (lapizSelect) {\n\t\t\tu_lapizSegmentado(context, lapizSelect);\n\t\t\tmouse.mover_lapiz = true;\n\t\t}\n\t};\n\t// 1:\n\tconst mouseDownMover = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\n\t\t// LAPIZ:\n\t\tclickSobreLapiz();\n\t\tif (!lapizSelect) {\n\t\t\t// no se hizo click sobre el lapiz.\n\t\t\t// LINEA:\n\t\t\tif (mouse.seleccionar_linea_pts) {\n\t\t\t\t// selecciono previamente una linea\n\t\t\t\tlet arrayPts = get_pts_redimencion_linea(lineaSelect);\n\t\t\t\tmouse.linea_pto = busca_linea_ptoClick(\n\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\tmouse.pos.y,\n\t\t\t\t\tarrayPts\n\t\t\t\t);\n\t\t\t\tif (mouse.linea_pto != '') {\n\t\t\t\t\t// hizo click sobre uno de los puntos de la linea\n\t\t\t\t\tmouse.linea_punto_mover = true;\n\t\t\t\t\tmouse.mover_linea = false;\n\t\t\t\t} else {\n\t\t\t\t\t// no hizo click sobre los puntos de la linea\n\t\t\t\t\tmouse.linea_punto_mover = false;\n\t\t\t\t\tmouse.mover_linea = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!mouse.linea_punto_mover) {\n\t\t\t\t// no tiene seleccionado una linea previamente\n\t\t\t\tlineaSelect = u_getLinea(\n\t\t\t\t\tstateLinea.historiaLinea,\n\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\tmouse.pos.y\n\t\t\t\t);\n\t\t\t\tif (lineaSelect) {\n\t\t\t\t\t// selecciono una linea\n\t\t\t\t\tmouse.seleccionar_linea_pts = true;\n\t\t\t\t\tmouse.mover_linea = true;\n\t\t\t\t\tmouse.linea_punto_mover = false;\n\t\t\t\t\tu_lineaSegmentado(context, lineaSelect);\n\t\t\t\t} else {\n\t\t\t\t\t// no selecciono una linea\n\t\t\t\t\tmouse.seleccionar_linea_pts = false;\n\t\t\t\t\tmouse.mover_linea = false;\n\t\t\t\t\tmouse.linea_punto_mover = false;\n\t\t\t\t\t//paint();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!lineaSelect) {\n\t\t\t\t// no hizo click sobre una linea\n\t\t\t\t// CUADRADO:\n\t\t\t\tif (mouse.seleccionar_cuadrado_pts) {\n\t\t\t\t\t// ya tiene seleccionado un cuadrado previamente\n\t\t\t\t\tlet arrayPts = get_pts_redimencion(cuadradoSelect);\n\t\t\t\t\tmouse.cuadrado_pto = busca_cuadrado_ptoClick(\n\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\tmouse.pos.y,\n\t\t\t\t\t\tarrayPts\n\t\t\t\t\t);\n\t\t\t\t\tif (mouse.cuadrado_pto != '') {\n\t\t\t\t\t\tconsole.log(mouse.cuadrado_pto);\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = true; // se movera el lado seleccionado\n\t\t\t\t\t\tmouse.mover_cuadrado = false; // no se movera el cuadrado\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = false; // move_size\n\t\t\t\t\t\tmouse.mover_cuadrado = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!mouse.cuadrado_punto_mover) {\n\t\t\t\t\t// no tiene seleccionando un cuadrado aun\n\t\t\t\t\tcuadradoSelect = u_getCuadrado(\n\t\t\t\t\t\tstateCuadrado.historiaCuadrado,\n\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\tmouse.pos.y\n\t\t\t\t\t);\n\t\t\t\t\tif (cuadradoSelect) {\n\t\t\t\t\t\t// encontro un cuadrado donde hizo click\n\t\t\t\t\t\tmouse.seleccionar_cuadrado_pts = true;\n\t\t\t\t\t\tmouse.mover_cuadrado = true;\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = false;\n\t\t\t\t\t\tu_cuadradoSegmentado(context, cuadradoSelect);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// no encontro un cuadrado donde hizo click\n\t\t\t\t\t\tmouse.seleccionar_cuadrado_pts = false;\n\t\t\t\t\t\tmouse.mover_cuadrado = false;\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = false;\n\t\t\t\t\t\t//paint();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!cuadradoSelect) {\n\t\t\t\t\t// no hizo click sobre un cuadrado.\n\t\t\t\t\t// PLANO:\n\t\t\t\t\tif (mouse.plano_seleccionar_pts) {\n\t\t\t\t\t\tconsole.log('selection plano preview');\n\t\t\t\t\t\t// ya tiene seleccionado un plano previamente\n\t\t\t\t\t\tlet arrayPts = get_pts_redimencion_plano(planoSelect);\n\t\t\t\t\t\tmouse.plano_pto = busca_cuadrado_ptoClick(\n\t\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\t\tmouse.pos.y,\n\t\t\t\t\t\t\tarrayPts\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (mouse.plano_pto != '') {\n\t\t\t\t\t\t\tconsole.log(mouse.plano_pto);\n\t\t\t\t\t\t\tmouse.plano_pto_mover = true; // se movera el lado seleccionado\n\t\t\t\t\t\t\tmouse.plano_mover = false; // no se movera el cuadrado\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmouse.plano_pto_mover = false; // move_size\n\t\t\t\t\t\t\tmouse.plano_mover = false;\n\t\t\t\t\t\t\tmouse.plano_seleccionar_pts = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!mouse.plano_seleccionar_pts) {\n\t\t\t\t\t\t// no tiene seleccionado un plano aun\n\t\t\t\t\t\tplanoSelect = u_getPlano(\n\t\t\t\t\t\t\tstatePlano.historiaPlano,\n\t\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\t\tmouse.pos.y\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (planoSelect) {\n\t\t\t\t\t\t\tconsole.log('selection plano');\n\t\t\t\t\t\t\t// hizo click sobre un plano\n\t\t\t\t\t\t\tmouse.plano_seleccionar_pts = true;\n\t\t\t\t\t\t\tmouse.plano_mover = true;\n\t\t\t\t\t\t\tmouse.plano_pto_mover = false;\n\t\t\t\t\t\t\tu_planoSegmentado(context, planoSelect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// TEXTO\n\t\t\t\t\t\t\tconsole.log('busca texto');\n\t\t\t\t\t\t\ttextSelect = u_getText(\n\t\t\t\t\t\t\t\tstateText.historiaText,\n\t\t\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\t\t\tmouse.pos.y\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (textSelect) {\n\t\t\t\t\t\t\t\tconsole.log('selection texto');\n\t\t\t\t\t\t\t\t// hizo click sobre un plano\n\t\t\t\t\t\t\t\tmouse.texto_mover = true;\n\t\t\t\t\t\t\t\t//mouse.plano_pto_mover = false;\n\t\t\t\t\t\t\t\t//u_planoSegmentado(context, planoSelect);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!lapizSelect && !lineaSelect && !cuadradoSelect && !planoSelect) {\n\t\t\tconsole.log('paint');\n\t\t\tpaint();\n\t\t}\n\t};\n\t// 2:\n\tconst mouseMoveMover = (e) => {\n\t\tif (mouse.click) {\n\t\t\tif (mouse.mover_cuadrado) {\n\t\t\t\t// CUADRADO:\n\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\tcuadradoSelect = u_moverCuadrado(cuadradoSelect, mouse);\n\t\t\t\tpaint();\n\t\t\t\tu_cuadradoSegmentado(context, cuadradoSelect);\n\t\t\t} else {\n\t\t\t\t// CUADRADO PTOS:\n\t\t\t\tif (mouse.cuadrado_punto_mover) {\n\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\tcuadradoSelect = u_updateZiseCuadrado(cuadradoSelect, mouse);\n\t\t\t\t\tpaint();\n\t\t\t\t\tu_cuadradoSegmentado(context, cuadradoSelect);\n\t\t\t\t} else {\n\t\t\t\t\t// LINEA:\n\t\t\t\t\tif (mouse.mover_linea) {\n\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\tlineaSelect = u_moverLinea(lineaSelect, mouse);\n\t\t\t\t\t\tpaint();\n\t\t\t\t\t\tu_lineaSegmentado(context, lineaSelect);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// LINEA PTOS:\n\t\t\t\t\t\tif (mouse.linea_punto_mover) {\n\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\tlineaSelect = u_updateZiseLinea(lineaSelect, mouse);\n\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\tu_lineaSegmentado(context, lineaSelect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// LAPIZ:\n\t\t\t\t\t\t\tif (mouse.mover_lapiz) {\n\t\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\t\tlapizSelect = u_moverLapiz(lapizSelect, mouse);\n\t\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\t\tu_lapizSegmentado(context, lapizSelect);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// PLANO:\n\t\t\t\t\t\t\t\tif (mouse.plano_mover) {\n\t\t\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\t\t\tplanoSelect = u_moverPlano(planoSelect, mouse);\n\t\t\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\t\t\tu_planoSegmentado(context, planoSelect);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// PLANO PTOS:\n\t\t\t\t\t\t\t\t\tif (mouse.plano_pto_mover) {\n\t\t\t\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\t\t\t\tplanoSelect = u_updateZisePlano(planoSelect, mouse);\n\t\t\t\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\t\t\t\tu_planoSegmentado(context, planoSelect);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// TEXTO\n\t\t\t\t\t\t\t\t\t\tif (mouse.texto_mover) {\n\t\t\t\t\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\t\t\t\t\ttextSelect = u_textMover(textSelect, mouse);\n\t\t\t\t\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t// 3:\n\tconst mouseUpMover = (e) => {\n\t\tif (mouse.cuadrado_punto_mover) {\n\t\t\tif (cuadradoSelect.x_fin < cuadradoSelect.x_ini) {\n\t\t\t\tlet aux = cuadradoSelect.x_fin;\n\t\t\t\tcuadradoSelect.x_fin = cuadradoSelect.x_ini;\n\t\t\t\tcuadradoSelect.x_ini = aux;\n\t\t\t}\n\t\t\tif (cuadradoSelect.y_fin < cuadradoSelect.y_ini) {\n\t\t\t\tlet aux = cuadradoSelect.y_fin;\n\t\t\t\tcuadradoSelect.y_fin = cuadradoSelect.y_ini;\n\t\t\t\tcuadradoSelect.y_ini = aux;\n\t\t\t}\n\t\t}\n\t\tmouse.click = false;\n\t\t// CUADRADO:\n\t\tmouse.mover_cuadrado = false;\n\t\tmouse.cuadrado_punto_mover = false;\n\t\tmouse.cuadrado_pto = '';\n\t\t// LINEA:\n\t\tmouse.mover_linea = false;\n\t\tmouse.linea_punto_mover = false;\n\t\tmouse.linea_pto = '';\n\t\t// LAPIZ:\n\t\tmouse.mover_lapiz = false;\n\t\t// PLANO:\n\t\tmouse.plano_mover = false;\n\t\tmouse.plano_pto_mover = false;\n\t\tmouse.plano_pto = '';\n\t\tmouse.texto_mover = false;\n\t};\n\tconst update_canvasMoverDatos = () => {\n\t\tcanvasMoverDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasMoverDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasMoverDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasMoverDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (stateMover.active) {\n\t\t\tupdate_canvasMoverDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownMover);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveMover);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpMover);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownMover);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveMover);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpMover);\n\t\t};\n\t}, [stateCuadrado, stateLinea]);\n\n\t// RENDER:\n\t// return console.log('paint mover');\n};\n\nexport default PaintMover;\n","import React, { useEffect, useContext } from 'react';\n\n// CONTEXT:\nimport AppContextBorrador from '../context/AppContextBorrador';\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// UTILS:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport {\n\tu_cuadradoGet,\n\tu_cuadradoDeleteById,\n\tu_cuadradoGraficaH,\n} from '../utils/UtilsCuadrado';\nimport {\n\tu_lapizGet,\n\tu_lapizDeleteById,\n\tu_lapizGraficaH,\n} from '../utils/UtilsLapiz';\nimport {\n\tu_lineaGet,\n\tu_lineaDeleteById,\n\tu_lineaGraficaH,\n} from '../utils/UtilsLinea';\nimport {\n\tu_planoGet,\n\tu_planoDeleteById,\n\tu_planoGraficaH,\n} from '../utils/UtilsPlano';\nimport {\n\tu_textGraficaH,\n\tu_textDeleteById,\n\tu_getText,\n} from '../utils/UtilsText';\n\nconst PaintBorrador = (id_canvas) => {\n\t// useContext:\n\tconst { stateBorrador } = useContext(AppContextBorrador);\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { statePlano } = useContext(AppContextPlano);\n\tconst { stateText } = useContext(AppContextText);\n\n\t// LOGICA:\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tu_cuadradoGraficaH(context, stateCuadrado.historiaCuadrado);\n\t\tu_lapizGraficaH(context, stateLapiz.historiaLapiz);\n\t\tu_lineaGraficaH(context, stateLinea.historiaLinea);\n\t\tu_planoGraficaH(context, statePlano.historiaPlano);\n\t\tu_textGraficaH(context, stateText.historiaText);\n\t};\n\tlet canvas = '';\n\tlet context = '';\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst capturaPosPosprev = (e) => {\n\t\tlet x = e.clientX;\n\t\tlet y = e.clientY;\n\t\tlet x_real = x - canvasBorradorDatos.left;\n\t\tlet y_real = y - canvasBorradorDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\t};\n\tconst cuadradoDelete = () => {\n\t\tlet res = false;\n\t\tlet array = stateCuadrado.historiaCuadrado;\n\t\tlet cuadrado = u_cuadradoGet(array, mouse.pos.x, mouse.pos.y);\n\t\tif (cuadrado) {\n\t\t\tstateCuadrado.historiaCuadrado = u_cuadradoDeleteById(array, cuadrado.id);\n\t\t\t// paint();\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst lapizDelete = () => {\n\t\tlet res = false;\n\t\tlet array = stateLapiz.historiaLapiz;\n\t\tlet lapiz = u_lapizGet(array, mouse.pos.x, mouse.pos.y);\n\t\tif (lapiz) {\n\t\t\tu_lapizDeleteById(array, lapiz.id);\n\t\t\t// paint();\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst lineaDelete = () => {\n\t\tlet res = false;\n\t\tlet array = stateLinea.historiaLinea;\n\t\tlet linea = u_lineaGet(array, mouse.pos.x, mouse.pos.y);\n\t\tif (linea) {\n\t\t\tu_lineaDeleteById(array, linea.id);\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst planoDelete = () => {\n\t\tlet res = false;\n\t\tlet array = statePlano.historiaPlano;\n\t\tlet plano = u_planoGet(array, mouse.pos.x, mouse.pos.y);\n\t\tif (plano) {\n\t\t\tu_planoDeleteById(array, plano.id);\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst textDelete = () => {\n\t\tlet res = false;\n\t\tlet array = stateText.historiaText;\n\t\tlet text = u_getText(array, mouse.pos.x, mouse.pos.y);\n\t\tif (text) {\n\t\t\tu_textDeleteById(array, text.id);\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst mouseDownBorrador = (e) => {\n\t\tconsole.log('click borrador');\n\t\tcapturaPosPosprev(e);\n\t\t// LAPIZ:\n\t\tlet res = lapizDelete();\n\t\tif (res) {\n\t\t\tpaint();\n\t\t} else {\n\t\t\t// LINEA:\n\t\t\tres = lineaDelete();\n\t\t\tif (res) {\n\t\t\t\tpaint();\n\t\t\t} else {\n\t\t\t\t// CUADRADO\n\t\t\t\tres = cuadradoDelete();\n\t\t\t\tif (res) {\n\t\t\t\t\tpaint();\n\t\t\t\t} else {\n\t\t\t\t\t// plano\n\t\t\t\t\tres = planoDelete();\n\t\t\t\t\tif (res) {\n\t\t\t\t\t\tpaint();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// TEXTO\n\t\t\t\t\t\tres = textDelete();\n\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tconst canvasBorradorDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst update_canvasBorradorDatos = () => {\n\t\tcanvasBorradorDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasBorradorDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasBorradorDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasBorradorDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (stateBorrador.active) {\n\t\t\tupdate_canvasBorradorDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownBorrador);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownBorrador);\n\t\t};\n\t}, [stateBorrador]);\n\t// RENDER:\n\t// return console.log('hola soy el borrador');\n};\n\nexport default PaintBorrador;\n","import React, { useState, useEffect, useContext } from 'react';\n\n// context:\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextCanvas from '../context/AppContextCanvas';\n\n// styles:\nimport '../styles/Canvas.scss';\n\n// components:\nimport PaintMover from './PaintMover';\nimport PainLapiz from '../components/PaintLapiz';\nimport PaintBorrador from './PaintBorrador';\nimport PaintLinea from './PaintLinea';\nimport PaintCuadrado from './PaintCuadrado';\nimport PaintCuadricula from './PaintCuadricula';\nimport PaintPlano from './PaintPlano';\n\nconst Canvas = () => {\n\t// useContext:\n\tconst { update_width_height } = useContext(AppContextCanvas);\n\n\t// useState:\n\tconst [canvasWidth, setCanvasWidth] = useState(window.innerWidth - 75);\n\tconst [canvasHeight, setCanvasHeight] = useState(window.innerHeight - 90);\n\n\t// LOGICA:\n\t// update_width_height;\n\n\tPaintCuadricula('canvas-1');\n\tPaintMover('canvas-1');\n\tPainLapiz('canvas-1');\n\tPaintBorrador('canvas-1');\n\tPaintCuadrado('canvas-1');\n\tPaintLinea('canvas-1');\n\tPaintPlano('canvas-1');\n\n\tconst updateCanvasWidth = () => setCanvasWidth(window.innerWidth - 75);\n\tconst updateCanvasHeight = () => setCanvasHeight(window.innerHeight - 90);\n\t// LOGICA END.\n\n\t// useEfect:\n\tuseEffect(() => {\n\t\t// redimencionamos el canvas la primera vez:\n\t\twindow.addEventListener('resize', updateCanvasWidth);\n\t\twindow.addEventListener('resize', updateCanvasHeight);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', updateCanvasWidth);\n\t\t\twindow.removeEventListener('resize', updateCanvasHeight);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tupdate_width_height(canvasWidth, canvasHeight);\n\t}, [canvasWidth, canvasHeight]);\n\n\treturn (\n\t\t<canvas\n\t\t\tclassName=\"canvas\"\n\t\t\twidth={canvasWidth}\n\t\t\theight={canvasHeight}\n\t\t\tid=\"canvas-1\"\n\t\t></canvas>\n\t);\n};\n\nexport default Canvas;\n","import { useEffect, useContext } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport { utilsCuadrado_graficaCuadradoHistoria } from '../utils/UtilsCuadrado';\nimport { utilsLinea_graficaLineaHistoria } from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\nimport { uPlano_graficaCuadradoHistoriaConEjes } from '../utils/UtilsPlano';\nimport { u_textGraficaH } from '../utils/UtilsText';\n\nconst PaintCuadricula = (canvasId) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\tconst { stateText } = useContext(AppContextText);\n\n\t// LOGICA:\n\tlet context = '';\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas);\n\t\tuPlano_graficaCuadradoHistoriaConEjes(context, statePlano.historiaPlano);\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz);\n\t\tu_textGraficaH(context, stateText.historiaText);\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcontext = document.getElementById(canvasId).getContext('2d');\n\t\tpaint();\n\t}, [\n\t\tstateCanvas.width,\n\t\tstateCanvas.height,\n\t\tstateCanvas.tipoCuadricula,\n\t\tstateCanvas.cuadriculaWidth,\n\t]);\n};\n//const saludar = () => console.log('hola daniel');\n\nexport default PaintCuadricula;\n","import React, { useEffect, useContext } from 'react';\n\n// useContext:\nimport AppContextLapiz from '../context/AppContextLapiz';\n\nconst PaintLapiz = (id_canvas) => {\n\t// useContext:\n\tconst { stateLapiz, add_historiaLapizId } = useContext(AppContextLapiz);\n\n\t// LOGICA:\n\tlet canvas = '';\n\tlet context = '';\n\tconst lapizNew = {\n\t\tid: stateLapiz.id,\n\t\tvisible: true,\n\t\tgrosor: stateLapiz.grosor,\n\t\tcolor: stateLapiz.color,\n\t\thistoriaLinea: [],\n\t\tx_min: 2000,\n\t\tx_may: 0,\n\t\ty_min: 2000,\n\t\ty_may: 0,\n\t};\n\tconst lapizLinea = {\n\t\tgrosor: stateLapiz.grosor,\n\t\tcolor: stateLapiz.color,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\t};\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst canvasLapizDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\n\t\tconst x_real = x - canvasLapizDatos.left;\n\t\tconst y_real = y - canvasLapizDatos.top;\n\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\n\t\tlapizLinea.x_ini = mouse.pos_prev.x;\n\t\tlapizLinea.y_ini = mouse.pos_prev.y;\n\t\tlapizLinea.x_fin = mouse.pos.x;\n\t\tlapizLinea.y_fin = mouse.pos.y;\n\t};\n\n\tconst graficaLinea = (linea) => {\n\t\tcontext.strokeStyle = linea.color;\n\t\tcontext.lineWidth = linea.grosor;\n\t\tcontext.setLineDash([0, 0]);\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(linea.x_ini, linea.y_ini);\n\t\tcontext.lineTo(linea.x_fin, linea.y_fin);\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t\t// busca cotas minimas X:\n\t\tlinea.x_ini < lapizNew.x_min ? (lapizNew.x_min = linea.x_ini) : '';\n\t\tlinea.x_fin < lapizNew.x_min ? (lapizNew.x_min = linea.x_fin) : '';\n\t\t// busca cotas maximas X:\n\t\tlinea.x_ini > lapizNew.x_may ? (lapizNew.x_may = linea.x_ini) : '';\n\t\tlinea.x_fin > lapizNew.x_may ? (lapizNew.x_may = linea.x_fin) : '';\n\t\t// busca cotas minimas Y:\n\t\tlinea.y_ini < lapizNew.y_min ? (lapizNew.y_min = linea.y_ini) : '';\n\t\tlinea.y_fin < lapizNew.y_min ? (lapizNew.y_min = linea.y_fin) : '';\n\t\t// busca cotas maximas Y:\n\t\tlinea.y_ini > lapizNew.y_may ? (lapizNew.y_may = linea.y_ini) : '';\n\t\tlinea.y_fin > lapizNew.y_may ? (lapizNew.y_may = linea.y_fin) : '';\n\t};\n\tconst mouseDownLapiz = (e) => {\n\t\tstateLapiz.grosor > 0\n\t\t\t? (mouse.click = true)\n\t\t\t: console.log('el grosor es 0.');\n\t\tcaptura_Pos_Posprev(e);\n\t};\n\tconst mouseMoveLapiz = (e) => {\n\t\tif (mouse.click) {\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\tgraficaLinea(lapizLinea);\n\t\t\tlapizNew.historiaLinea.push([\n\t\t\t\tlapizLinea.x_ini,\n\t\t\t\tlapizLinea.y_ini,\n\t\t\t\tlapizLinea.x_fin,\n\t\t\t\tlapizLinea.y_fin,\n\t\t\t]);\n\t\t}\n\t};\n\tconst mouseUpLapiz = (e) => {\n\t\tif (mouse.click) {\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\tgraficaLinea(lapizLinea);\n\t\t\tlapizNew.historiaLinea.push([\n\t\t\t\tlapizLinea.x_ini,\n\t\t\t\tlapizLinea.y_ini,\n\t\t\t\tlapizLinea.x_fin,\n\t\t\t\tlapizLinea.y_fin,\n\t\t\t]);\n\t\t\t//lapizNew.id = stateLapiz.id;\n\t\t\tadd_historiaLapizId(lapizNew, stateLapiz.id + 1);\n\t\t}\n\t\tmouse.click = false;\n\t};\n\tconst update_canvasLapizDatos = () => {\n\t\tcanvasLapizDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasLapizDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasLapizDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasLapizDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\n\t\tif (stateLapiz.active) {\n\t\t\tupdate_canvasLapizDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownLapiz);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveLapiz);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpLapiz);\n\t\t}\n\t\treturn () => {\n\t\t\t//canvasLapiz.removeEventListener('click', saludar);\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownLapiz);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveLapiz);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpLapiz);\n\t\t};\n\t}, [stateLapiz]);\n\n\t// return console.log('hola soy lapiz');\n};\n\nexport default PaintLapiz;\n","import React, { useContext, useEffect } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport {\n\tutilsCuadrado_graficaCuadrado,\n\tutilsCuadrado_graficaCuadradoHistoria,\n} from '../utils/UtilsCuadrado';\nimport { utilsLinea_graficaLineaHistoria } from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\nimport { uPlano_graficaCuadradoHistoriaConEjes } from '../utils/UtilsPlano';\nimport { u_textGraficaH } from '../utils/UtilsText';\n\nconst PaintCuadrado = (id_canvas) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado, add_cuadrado_en_historia } =\n\t\tuseContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\tconst { stateText } = useContext(AppContextText);\n\n\t// LOGICA:\n\tlet canvas = '';\n\tlet context = '';\n\tconst cuadrado = {\n\t\tid: stateCuadrado.id,\n\t\tvisible: true,\n\t\tbordeEstado: stateCuadrado.bordeEstado,\n\t\tbordeGrosor: stateCuadrado.bordeGrosor,\n\t\tbordeColor: stateCuadrado.bordeColor,\n\t\tfondoEstado: stateCuadrado.fondoEstado,\n\t\tfondoColor: stateCuadrado.fondoColor,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\t};\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tprimerClick: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst mouseReinicia = () => {\n\t\tmouse.click = false;\n\t\tmouse.move = false;\n\t\tmouse.primerClick = false;\n\t\tmouse.pos.x = 0;\n\t\tmouse.pos_prev.x = 0;\n\t\tmouse.pos.y = 0;\n\t\tmouse.pos_prev.y = 0;\n\t};\n\n\tconst canvasCuadradoDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\tconst x_real = x - canvasCuadradoDatos.left;\n\t\tconst y_real = y - canvasCuadradoDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\n\t\tif (mouse.primerClick) {\n\t\t\tcuadrado.x_ini = mouse.pos_prev.x;\n\t\t\tcuadrado.y_ini = mouse.pos_prev.y;\n\t\t\tmouse.primerClick = false;\n\t\t}\n\t\tcuadrado.x_fin = mouse.pos.x;\n\t\tcuadrado.y_fin = mouse.pos.y;\n\t};\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tuPlano_graficaCuadradoHistoriaConEjes(context, statePlano.historiaPlano); // plano cartesiano\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t\tu_textGraficaH(context, stateText.historiaText);\n\t};\n\tconst mouseDownCuadrado = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\t};\n\tconst mouseMoveCuadrado = (e) => {\n\t\tif (mouse.click) {\n\t\t\tif (!mouse.move) {\n\t\t\t\tmouse.primerClick = true;\n\t\t\t\tmouse.move = true;\n\t\t\t}\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\tpaint();\n\t\t\tutilsCuadrado_graficaCuadrado(context, cuadrado);\n\t\t}\n\t};\n\tconst mouseUpCuadrado = (e) => {\n\t\t//captura_Pos_Posprev(e);\n\t\tif (mouse.click && mouse.pos_prev.x != 0 && mouse.pos_prev.y != 0) {\n\t\t\tcuadrado.id = stateCuadrado.historiaCuadrado.length;\n\t\t\tif (cuadrado.x_ini > cuadrado.x_fin) {\n\t\t\t\tlet aux = cuadrado.x_ini;\n\t\t\t\tcuadrado.x_ini = cuadrado.x_fin;\n\t\t\t\tcuadrado.x_fin = aux;\n\t\t\t}\n\t\t\tif (cuadrado.y_ini > cuadrado.y_fin) {\n\t\t\t\tlet aux = cuadrado.y_ini;\n\t\t\t\tcuadrado.y_ini = cuadrado.y_fin;\n\t\t\t\tcuadrado.y_fin = aux;\n\t\t\t}\n\t\t\tpaint();\n\t\t\tadd_cuadrado_en_historia(cuadrado);\n\t\t\tutilsCuadrado_graficaCuadrado(context, cuadrado);\n\t\t}\n\t\tmouseReinicia();\n\t};\n\tconst update_canvasCuadradoDatos = () => {\n\t\tcanvasCuadradoDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasCuadradoDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasCuadradoDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasCuadradoDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\n\t\tif (stateCuadrado.active) {\n\t\t\tupdate_canvasCuadradoDatos();\n\n\t\t\tcanvas.addEventListener('mousedown', mouseDownCuadrado);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveCuadrado);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpCuadrado);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownCuadrado);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveCuadrado);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpCuadrado);\n\t\t};\n\t}, [stateCuadrado]);\n\tuseEffect(() => {\n\t\t// console.log(stateCuadrado);\n\t}, [add_cuadrado_en_historia]);\n\n\t// return console.log('soy el paintCuadrado');\n};\n\nexport default PaintCuadrado;\n","import { useContext, useEffect } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport { utilsCuadrado_graficaCuadradoHistoria } from '../utils/UtilsCuadrado';\nimport {\n\tutilsLinea_graficaLinea,\n\tutilsLinea_graficaLineaHistoria,\n} from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\nimport { uPlano_graficaCuadradoHistoriaConEjes } from '../utils/UtilsPlano';\nimport { u_textGraficaH } from '../utils/UtilsText';\n\nconst PaintLinea = (id_canvas) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea, add_historiaLinea_id } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\tconst { stateText } = useContext(AppContextText);\n\n\t// LOGICA:\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tuPlano_graficaCuadradoHistoriaConEjes(context, statePlano.historiaPlano); // plano cartesiano\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t\tu_textGraficaH(context, stateText.historiaText);\n\t};\n\tlet canvas = '';\n\tlet context = '';\n\n\tconst canvasLineaDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst update_canvasLineaDatos = () => {\n\t\tcanvasLineaDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasLineaDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasLineaDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasLineaDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tprimerClick: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst mouseReinicia = () => {\n\t\tmouse.click = false;\n\t\tmouse.move = false;\n\t\tmouse.primerClick = false;\n\t\tmouse.pos.x = 0;\n\t\tmouse.pos_prev.x = 0;\n\t\tmouse.pos.y = 0;\n\t\tmouse.pos_prev.y = 0;\n\t};\n\tconst Linea = {\n\t\tid: stateLinea.id,\n\t\tvisible: true,\n\t\tgrosor: stateLinea.grosor,\n\t\tcolor: stateLinea.color,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\tconst x_real = x - canvasLineaDatos.left;\n\t\tconst y_real = y - canvasLineaDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\n\t\tif (mouse.primerClick) {\n\t\t\tLinea.x_ini = mouse.pos_prev.x;\n\t\t\tLinea.y_ini = mouse.pos_prev.y;\n\t\t\tmouse.primerClick = false;\n\t\t}\n\t\tLinea.x_fin = mouse.pos.x;\n\t\tLinea.y_fin = mouse.pos.y;\n\t};\n\tconst mouseDownLinea = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\t};\n\tconst mouseMoveLinea = (e) => {\n\t\tif (mouse.click) {\n\t\t\tif (!mouse.move) {\n\t\t\t\tmouse.primerClick = true;\n\t\t\t\tmouse.move = true;\n\t\t\t}\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\tpaint();\n\t\t\tutilsLinea_graficaLinea(context, Linea); // utilsPaint_graficaLinea\n\t\t}\n\t};\n\tconst mouseUpLinea = () => {\n\t\tif (mouse.click && mouse.pos_prev.x != 0 && mouse.pos_prev.y != 0) {\n\t\t\tLinea.id = stateLinea.id;\n\t\t\tpaint();\n\t\t\tadd_historiaLinea_id(Linea, stateLinea.id + 1);\n\t\t\tutilsLinea_graficaLinea(context, Linea);\n\t\t}\n\t\tmouseReinicia();\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (stateLinea.active) {\n\t\t\tupdate_canvasLineaDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownLinea);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveLinea);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpLinea);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownLinea);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveLinea);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpLinea);\n\t\t};\n\t}, [stateLinea]);\n};\n\nexport default PaintLinea;\n","import React, { useEffect, useContext } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport { utilsCuadrado_graficaCuadradoHistoria } from '../utils/UtilsCuadrado';\nimport { utilsLinea_graficaLineaHistoria } from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\n\nimport {\n\tuPlano_graficaCuadrado,\n\tuPlano_graficaCuadradoConEjes,\n\tuPlano_graficaCuadradoHistoria,\n\tu_planoGraficaH,\n} from '../utils/UtilsPlano';\nimport { u_textGraficaH } from '../utils/UtilsText';\n\nconst PaintPlano = (id_canvas) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano, add_plano_en_historiaId } = useContext(AppContextPlano);\n\tconst { stateText } = useContext(AppContextText);\n\n\t// LOGICA:\n\tlet canvas = '';\n\tlet context = '';\n\tconst canvasPlanoDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst update_canvasPlanoDatos = () => {\n\t\tcanvasPlanoDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasPlanoDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasPlanoDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasPlanoDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\t// uPlano_graficaCuadradoHistoria(context, statePlano.historiaPlano);\n\t\tu_planoGraficaH(context, statePlano.historiaPlano);\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t\tu_textGraficaH(context, stateText.historiaText);\n\t};\n\tlet mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tprimerClick: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst mouseReinicia = () => {\n\t\tmouse.click = false;\n\t\tmouse.move = false;\n\t\tmouse.primerClick = false;\n\t\tmouse.pos.x = 0;\n\t\tmouse.pos_prev.x = 0;\n\t\tmouse.pos.y = 0;\n\t\tmouse.pos_prev.y = 0;\n\t};\n\tconst plano = {\n\t\tid: statePlano.id,\n\t\tvisible: true,\n\t\tbordeEstado: true,\n\t\tbordeGrosor: 2,\n\t\tbordeColor: statePlano.color_cuadricula,\n\t\tfondoEstado: true,\n\t\tfondoColor: 'white',\n\t\twidth_cuadricula: statePlano.width_cuadricula,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\n\t\tx_min: statePlano.x_min,\n\t\ty_max: statePlano.y_max,\n\t\tsalto: statePlano.salto,\n\t};\n\tlet captura_Pos_Posprev = (e) => {\n\t\tlet x = e.clientX;\n\t\tlet y = e.clientY;\n\t\tlet x_real = x - canvasPlanoDatos.left;\n\t\tlet y_real = y - canvasPlanoDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\n\t\tif (mouse.primerClick) {\n\t\t\tplano.x_ini = mouse.pos_prev.x;\n\t\t\tplano.y_ini = mouse.pos_prev.y;\n\t\t\tmouse.primerClick = false;\n\t\t}\n\t\tplano.x_fin = mouse.pos.x;\n\t\tplano.y_fin = mouse.pos.y;\n\t};\n\t// 1:\n\tconst mouseDownPlano = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\t\tconsole.log('click');\n\t};\n\t// 2:\n\tconst mouseMovePlano = (e) => {\n\t\t// if (mouse.click) {\n\t\t// \tif (!mouse.move) {\n\t\t// \t\tmouse.primerClick = true;\n\t\t// \t\tmouse.move = true;\n\t\t// \t}\n\t\t// \tcaptura_Pos_Posprev(e);\n\t\t// \tpaint();\n\t\t// \tuPlano_graficaCuadrado(context, plano);\n\t\t// }\n\t};\n\t// 3:\n\tlet mouseUpPlano = (e) => {\n\t\tcaptura_Pos_Posprev(e);\n\t\tconsole.log('solto click');\n\t\tconsole.log(mouse);\n\t\tif (mouse.pos_prev.x != 0 && mouse.pos_prev.y != 0) {\n\t\t\tconsole.log('solto click');\n\t\t\tconsole.log(mouse);\n\t\t\tplano.x_ini = mouse.pos.x - 150;\n\t\t\tplano.y_ini = mouse.pos.y - 150;\n\t\t\tplano.x_fin = mouse.pos.x + 150;\n\t\t\tplano.y_fin = mouse.pos.y + 150;\n\t\t\tpaint();\n\t\t\t//uPlano_graficaCuadrado(context, plano);\n\t\t\t//paint();\n\t\t\t//paint();\n\t\t\tuPlano_graficaCuadradoConEjes(context, plano);\n\t\t\tadd_plano_en_historiaId(plano, statePlano.id + 1);\n\t\t}\n\t\tmouseReinicia();\n\t};\n\t// LOGICA END.\n\n\t// EFFECT:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (statePlano.active) {\n\t\t\tupdate_canvasPlanoDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownPlano);\n\t\t\tcanvas.addEventListener('mousemove', mouseMovePlano);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpPlano);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownPlano);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMovePlano);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpPlano);\n\t\t};\n\t}, [statePlano]);\n\tuseEffect(() => {\n\t\t//console.log('hola');\n\t}, []);\n};\n\nexport default PaintPlano;\n","import React from 'react';\nimport Canvas from '../components/Canvas';\n\nimport '../styles/Home.scss';\n\nconst Home = () => {\n\t// const heightPantalla = screen.height - 180;\n\t// const widthPantalla = screen.width - 55;\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t<Canvas />\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import React from 'react';\nimport Header from '../components/Header';\nimport NavIzq from '../components/NavIzq';\nimport Home from '../pages/Home';\n\nconst Layout = ({ children }) => {\n\treturn (\n\t\t<div className=\"Layout\">\n\t\t\t<Header />\n\t\t\t<NavIzq />\n\t\t\t<Home />\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nexport default Layout;\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\n// CONTEXT:\nimport AppContext from '../context/AppContext';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextBorrador from '../context/AppContextBorrador';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextMover from '../context/AppContextMover';\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// HOOKS:\nimport useInitialState from '../hooks/useInitialState';\nimport useMover from '../hooks/useMover';\nimport useLapiz from '../hooks/useLapiz';\nimport useBorrador from '../hooks/useBorrador';\nimport useCuadrado from '../hooks/useCuadrado';\nimport useCanvas from '../hooks/useCanvas';\nimport useLinea from '../hooks/useLinea';\nimport usePlano from '../hooks/usePlano';\nimport useText from '../hooks/useText';\n\nimport Layout from '../containers/Layout';\nimport Home from '../pages/Home';\nimport '../styles/global.css';\n\nconst App = () => {\n\tconst initialState = useInitialState();\n\tconst initialStateMover = useMover();\n\tconst initialStateLapiz = useLapiz();\n\tconst initialStateBorrador = useBorrador();\n\tconst initialStateCuadrado = useCuadrado();\n\tconst initialStateCanvas = useCanvas();\n\tconst initialStateLinea = useLinea();\n\tconst initialStatePlano = usePlano();\n\tconst initialStateText = useText();\n\n\treturn (\n\t\t<AppContext.Provider value={initialState}>\n\t\t\t<AppContextCanvas.Provider value={initialStateCanvas}>\n\t\t\t\t<AppContextMover.Provider value={initialStateMover}>\n\t\t\t\t\t<AppContextLapiz.Provider value={initialStateLapiz}>\n\t\t\t\t\t\t<AppContextBorrador.Provider value={initialStateBorrador}>\n\t\t\t\t\t\t\t<AppContextCuadrado.Provider value={initialStateCuadrado}>\n\t\t\t\t\t\t\t\t<AppContextLinea.Provider value={initialStateLinea}>\n\t\t\t\t\t\t\t\t\t<AppContextPlano.Provider value={initialStatePlano}>\n\t\t\t\t\t\t\t\t\t\t<AppContextText.Provider value={initialStateText}>\n\t\t\t\t\t\t\t\t\t\t\t<BrowserRouter>\n\t\t\t\t\t\t\t\t\t\t\t\t<Layout>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <Routes>\n\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/\" element={<Home />} />\n\t\t\t\t\t\t\t\t\t</Routes> */}\n\t\t\t\t\t\t\t\t\t\t\t\t</Layout>\n\t\t\t\t\t\t\t\t\t\t\t</BrowserRouter>\n\t\t\t\t\t\t\t\t\t\t</AppContextText.Provider>\n\t\t\t\t\t\t\t\t\t</AppContextPlano.Provider>\n\t\t\t\t\t\t\t\t</AppContextLinea.Provider>\n\t\t\t\t\t\t\t</AppContextCuadrado.Provider>\n\t\t\t\t\t\t</AppContextBorrador.Provider>\n\t\t\t\t\t</AppContextLapiz.Provider>\n\t\t\t\t</AppContextMover.Provider>\n\t\t\t</AppContextCanvas.Provider>\n\t\t</AppContext.Provider>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './routes/App';\n\nReactDom.render(<App />, document.getElementById('app'));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmathboard\"] = self[\"webpackChunkmathboard\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [829], function() { return __webpack_require__(3882); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","React","initialState","alfabetoMay","split","alfabetoMin","alfabeto","active","color","colorFondo","grosor","state","setState","useState","toLowerCase","auxArray","toUpperCase","updateCanvasPaleta","optionIcon","console","log","updateColor","valor","updateColorFondo","updateGrosor","initialStateMover","stateMover","setStateMover","updateMoverActive","initialStateLapiz","id","historiaLapiz","stateLapiz","setStateLapiz","updateLapizActive","updateLapizColor","updateLapizGrosor","add_historiaLapiz","updateLapizColorGrosor","valor1","valor2","add_historiaLapizId","lapiz","initialStateBorrador","historialBorrador","stateBorrador","setStateBorrador","updateBorradorActive","updateBorradorColor","updateBorradorGrosor","initialStateCuadrado","bordeEstado","bordeGrosor","bordeColor","fondoEstado","fondoColor","x_ini","y_ini","width","height","historiaCuadrado","stateCuadrado","setStateCuadrado","updateCuadradoActive","updateCuadradoBordeGrosor","updateCuadradoBordeEstado","updateCuadradoBorde_ColorEstado","estado","updateCuadradoFondoEstado","updateCuadradoFondo_ColorEstado","add_cuadrado_en_historia","cuadrado","update_cuadrado_en_historia","array","update_all","colorBorde","bordeEstadoIn","fondoEstadoIn","update_cuadradoH","initialStateCanvas","cuadriculaWidth","lineaColor","lineaGrosor","tipoCuadricula","stateCanvas","setStateCanvas","updateCuadriculaActive","updateCuadriculaWidth","update_width_height","updateTipoCuadricula","initialStateLinea","historiaLinea","stateLinea","setStateLinea","updateLineaActive","updateLineaColor","updateLineaGrosor","add_historiaLinea","add_historiaLinea_id","updateLineaColorGrosor","s_lineaUpdateH","initialStatePlano","x_min","y_max","salto","color_cuadricula","width_cuadricula","historiaPlano","statePlano","setStatePlano","updatePlanoActive","add_plano_en_historia","add_plano_en_historiaId","initialStateText","tamano","texto","historiaText","stateText","setStateText","updateTextActive","s_textAddH","s_textUpdateColor","s_textUpdateTamano","s_textUpdateText","txt","s_textAddHId","useContext","AppContextPlano","useEffect","className","type","defaultValue","value","onClick","AppContext","arrayPaletaColor","colorLine","tipo","updatePaletaColor","forEach","dato","document","getElementById","classList","remove","elem","find","add","title","map","handleColor","handlePaletaColor","src","iconLineaNone","arrayIconLinea","iconLine","iconLineaS","iconLineaM","iconLineaL","iconLineaXL","iconLineaXXL","updatePaletaGrosor","querySelectorAll","i","length","htmlFor","handleLineaGrosor","AppContextLapiz","AppContextBorrador","handleGrosor","opMatematica","parseInt","update","placeholder","disabled","AppContextCuadrado","AppContextCanvas","arrayIconCuadricula","iconCuadricula","iconCuadriculaSin","iconCuadriculaNone","updatePaleta_tipoCuadricula","handleBtnAncho","op","handleCuadriculaTipo","AppContextLinea","AppContextText","canvas","context","textoNew","visible","arrayColorLinea","handleSize","size","getContext","fillStyle","font","beginPath","fillText","closePath","handleAdd","toggleMenu1","setToggleMenu1","toggleMenuMover","setToggleMenuMover","toggleMenuLapiz","setToggleMenuLapiz","toggleMenuBorrador","setToggleMenuBorrador","toggleMenuCuadrado","setToggleMenuCuadrado","toggleMenuCuadricula","setToggleMenuCuadricula","toggleMenuLinea","setToggleMenuLinea","toggleMenuPlano","setToggleMenuPlano","toggleMenuText","setToggleMenuText","href","Menu1","element","key","handleClick","svg","toggleShift","setToggleShift","option","elm","AppContextMover","AppContextCuadricula","toggleKeyboard","setToggleKeyboard","iconosPaleta","moverIcon","lapizIcon","borradorIcon","textIcon","lineaIcon","cuadradoIcon","planoIcon","cuadriculaIcon","icon","handleIcon","keyboardIcon","utilsCuadricula_graficaCuadricula","lineWidth","strokeStyle","setLineDash","moveTo","lineTo","fill","stroke","nroLineasV","incV","nroLineasH","incH","utilsCuadrado_graficaCuadrado","x_fin","y_fin","utilsCuadrado_graficaCuadradoHistoria","utilsLinea_graficaLinea","linea","utilsLinea_graficaLineaHistoria","utilsLapiz_graficaLapiz","sw","utilsLapiz_graficaLapizHistoria","uPlano_graficaCuadradoConEjes","plano","x1","y1","y2","x2","utilsPlano_graficaCuadricula","Linea","x3","y3","utilsPlano_graficaTriangulo","arrayX","n","x","push","arrayY","heigth","y","textAlign","uPlano_graficaNumeros","uPlano_graficaCuadradoHistoriaConEjes","u_planoGraficaH","get_pts_redimencion","width_p","u_cuadradoSegmentado","get_pts_redimencion_linea","u_lineaSegmentado","u_planoSegmentado","u_lapizSegmentado","y_min","x_may","y_may","u_textGraficaH","obj","u_textGrafica","u_getText","resp","id_canvas","paint","u_cuadradoGraficaH","u_lapizGraficaH","u_lineaGraficaH","mouse","click","move","pos","pos_prev","mouseDownBorrador","e","clientX","clientY","x_real","canvasBorradorDatos","left","y_real","top","capturaPosPosprev","res","u_lapizGet","lapiz_id","u_lapizDeleteById","lapizDelete","p","a","b","c","dnum","Math","sqrt","u_lineaGet","linea_id","u_lineaDeleteById","lineaDelete","u_cuadradoGet","cuadradoId","arrayNew","u_cuadradoDeleteById","cuadradoDelete","u_planoGet","u_planoDeleteById","planoDelete","text","u_textDeleteById","textDelete","getBoundingClientRect","addEventListener","removeEventListener","canvasWidth","setCanvasWidth","window","innerWidth","canvasHeight","setCanvasHeight","innerHeight","canvasId","PaintCuadricula","cuadradoSelect","lineaSelect","lapizSelect","planoSelect","textSelect","mover_cuadrado","seleccionar_cuadrado_pts","cuadrado_punto_mover","cuadrado_pto","mover_linea","seleccionar_linea_pts","linea_punto_mover","linea_pto","mover_lapiz","plano_mover","plano_seleccionar_pts","plano_pto_mover","plano_pto","texo_active","texto_mover","canvasMoverDatos","captura_Pos_Posprev","busca_cuadrado_ptoClick","mouseDownMover","u_getLapiz","arrayPts","busca_linea_ptoClick","u_getLinea","u_getCuadrado","get_pts_redimencion_plano","u_getPlano","mouseMoveMover","recorrido_x","recorrido_y","u_moverCuadrado","u_updateZiseCuadrado","u_moverLinea","u_updateZiseLinea","u_moverLapiz","u_moverPlano","u_updateZisePlano","u_textMover","mouseUpMover","aux","PaintMover","lapizNew","lapizLinea","canvasLapizDatos","graficaLinea","mouseDownLapiz","mouseMoveLapiz","mouseUpLapiz","PainLapiz","PaintBorrador","primerClick","canvasCuadradoDatos","mouseDownCuadrado","mouseMoveCuadrado","mouseUpCuadrado","PaintCuadrado","canvasLineaDatos","mouseDownLinea","mouseMoveLinea","mouseUpLinea","PaintLinea","canvasPlanoDatos","mouseDownPlano","mouseMovePlano","mouseUpPlano","PaintPlano","updateCanvasWidth","updateCanvasHeight","children","useInitialState","useMover","useLapiz","useBorrador","useCuadrado","useCanvas","useLinea","usePlano","useText","ReactDom","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}
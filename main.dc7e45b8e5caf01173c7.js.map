{"version":3,"file":"main.dc7e45b8e5caf01173c7.js","mappings":"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","sources":["webpack://mathboard/webpack/runtime/chunk loaded","webpack://mathboard/./src/context/AppContext.js","webpack://mathboard/./src/context/AppContextLapiz.js","webpack://mathboard/./src/context/AppContextBorrador.js","webpack://mathboard/./src/context/AppContextCuadrado.js","webpack://mathboard/./src/context/AppContextMover.js","webpack://mathboard/./src/context/AppContextCanvas.js","webpack://mathboard/./src/context/AppContextLinea.js","webpack://mathboard/./src/context/AppContextPlano.js","webpack://mathboard/./src/context/AppContextText.js","webpack://mathboard/./src/hooks/useInitialState.js","webpack://mathboard/./src/hooks/useMover.js","webpack://mathboard/./src/hooks/useLapiz.js","webpack://mathboard/./src/hooks/useBorrador.js","webpack://mathboard/./src/hooks/useCuadrado.js","webpack://mathboard/./src/hooks/useCanvas.js","webpack://mathboard/./src/hooks/useLinea.js","webpack://mathboard/./src/hooks/usePlano.js","webpack://mathboard/./src/hooks/useText.js","webpack://mathboard/./src/containers/Menu1.jsx","webpack://mathboard/./src/containers/MenuPlano.jsx","webpack://mathboard/./src/containers/MenuMover.jsx","webpack://mathboard/./src/components/PaletaColor.jsx","webpack://mathboard/./src/components/PaletaGrosor.jsx","webpack://mathboard/./src/containers/MenuLapiz.jsx","webpack://mathboard/./src/containers/MenuBorrador.jsx","webpack://mathboard/./src/containers/MenuCuadrado.jsx","webpack://mathboard/./src/containers/MenuCuadricula.jsx","webpack://mathboard/./src/containers/MenuLinea.jsx","webpack://mathboard/./src/containers/MenuText.jsx","webpack://mathboard/./src/components/Header.jsx","webpack://mathboard/./src/components/key.jsx","webpack://mathboard/./src/components/KeySvg.jsx","webpack://mathboard/./src/components/KeyTxt.jsx","webpack://mathboard/./src/containers/Keyboard.jsx","webpack://mathboard/./src/components/NavIzq.jsx","webpack://mathboard/./src/utils/UtilsCuadricula.js","webpack://mathboard/./src/utils/UtilsPlano.js","webpack://mathboard/./src/utils/UtilsCuadrado.js","webpack://mathboard/./src/utils/UtilsLinea.js","webpack://mathboard/./src/utils/UtilsLapiz.js","webpack://mathboard/./src/utils/UtilsText.js","webpack://mathboard/./src/components/PaintMover.jsx","webpack://mathboard/./src/components/PaintBorrador.jsx","webpack://mathboard/./src/components/Canvas.jsx","webpack://mathboard/./src/components/PaintCuadricula.jsx","webpack://mathboard/./src/components/PaintLapiz.jsx","webpack://mathboard/./src/components/PaintCuadrado.jsx","webpack://mathboard/./src/components/PaintLinea.jsx","webpack://mathboard/./src/components/PaintPlano.jsx","webpack://mathboard/./src/pages/Home.jsx","webpack://mathboard/./src/containers/Layout.jsx","webpack://mathboard/./src/routes/App.jsx","webpack://mathboard/./src/index.js","webpack://mathboard/webpack/bootstrap","webpack://mathboard/webpack/runtime/define property getters","webpack://mathboard/webpack/runtime/global","webpack://mathboard/webpack/runtime/hasOwnProperty shorthand","webpack://mathboard/webpack/runtime/jsonp chunk loading","webpack://mathboard/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import React from 'react';\n\nconst AppContext = React.createContext({});\n\nexport default AppContext;\n","import React from 'react';\n\nconst AppContextLapiz = React.createContext({});\n\nexport default AppContextLapiz;\n","import React from 'react';\n\nconst AppContextBorrador = React.createContext({});\n\nexport default AppContextBorrador;\n","import React from 'react';\n\nconst AppContextCuadrado = React.createContext({});\n\nexport default AppContextCuadrado;\n","import React from 'react';\n\nconst AppContextMover = React.createContext({});\n\nexport default AppContextMover;\n","import React from 'react';\n\nconst AppContextCanvas = React.createContext({});\n\nexport default AppContextCanvas;\n","import React from 'react';\n\nconst AppContextLinea = React.createContext({});\n\nexport default AppContextLinea;\n","import React from 'react';\n\nconst AppContextPlano = React.createContext({});\n\nexport default AppContextPlano;\n","import React from 'react';\n\nconst AppContextText = React.createContext({});\n\nexport default AppContextText;\n","import { useState } from 'react';\n\nconst initialState = {\n\talfabetoMay: [\n\t\t'QWERTYUIOP'.split(''),\n\t\t'ASDFGHJKLÑ'.split(''),\n\t\t'ZXCVBNM,'.split(''),\n\t],\n\talfabetoMin: [\n\t\t'qwertyuiop'.split(''),\n\t\t'asdfghjklñ'.split(''),\n\t\t'zxcvbnm.'.split(''),\n\t],\n\talfabeto: [\n\t\t'QWERTYUIOP'.split(''),\n\t\t'ASDFGHJKLÑ'.split(''),\n\t\t'ZXCVBNM,'.split(''),\n\t],\n\tactive: '',\n\tcolor: 'red',\n\tcolorFondo: 'yellow',\n\tgrosor: 2,\n};\nconst useInitialState = () => {\n\tconst [state, setState] = useState(initialState);\n\n\tconst toLowerCase = () => {\n\t\tconst auxArray = state.alfabetoMin;\n\t\tsetState({\n\t\t\t...state,\n\t\t\talfabeto: auxArray,\n\t\t});\n\t};\n\tconst toUpperCase = () => {\n\t\tconst auxArray = state.alfabetoMay;\n\t\tsetState({\n\t\t\t...state,\n\t\t\talfabeto: auxArray,\n\t\t});\n\t};\n\n\t// ACTIVA Y DESACTIVA LA OPCION SELECCIONADA DE LA PALETA DE LA PIZARRA\n\tconst updateCanvasPaleta = (optionIcon) => {\n\t\tswitch (optionIcon) {\n\t\t\tcase 'moverIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'moverIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'lapizIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'lapizIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'borradorIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'borradorIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'lineaIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'lineaIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'cuadradoIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'cuadradoIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'planoIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'planoIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'cuadriculaIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'cuadriculaIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'textIcon':\n\t\t\t\tsetState({\n\t\t\t\t\t...state,\n\t\t\t\t\tactive: 'textIcon',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('Opcion no registrada / useInitialState!!!');\n\t\t\t\tbreak;\n\t\t}\n\t};\n\tconst updateColor = (valor) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tcolor: valor,\n\t\t});\n\t};\n\tconst updateGrosor = (valor) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\tconst updateColorFondo = (valor) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tcolorFondo: valor,\n\t\t});\n\t};\n\n\treturn {\n\t\tstate,\n\t\ttoLowerCase,\n\t\ttoUpperCase,\n\t\tupdateCanvasPaleta,\n\t\tupdateColor,\n\t\tupdateColorFondo,\n\t\tupdateGrosor,\n\t};\n};\n\nexport default useInitialState;\n","import { useState } from 'react';\nconst initialStateMover = {\n\tactive: false,\n};\n\nconst useMover = () => {\n\tconst [stateMover, setStateMover] = useState(initialStateMover);\n\n\tconst updateMoverActive = (valor) => {\n\t\tsetStateMover({\n\t\t\t...stateMover,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\treturn {\n\t\tstateMover,\n\t\tupdateMoverActive,\n\t};\n};\n\nexport default useMover;\n","import { useState } from 'react';\nconst initialStateLapiz = {\n\tid: 0,\n\tactive: false,\n\tcolor: 'black',\n\tgrosor: 4,\n\thistoriaLapiz: [],\n};\n\nconst useLapiz = () => {\n\tconst [stateLapiz, setStateLapiz] = useState(initialStateLapiz);\n\n\tconst updateLapizActive = (valor) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateLapizColor = (valor) => {\n\t\tconsole.log('color util:', valor);\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tcolor: valor,\n\t\t});\n\t\tconsole.log('color:', stateLapiz);\n\t};\n\tconst updateLapizGrosor = (valor) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\tconst add_historiaLapiz = (valor) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\thistoriaLapiz: [...stateLapiz.historiaLapiz, valor],\n\t\t});\n\t};\n\tconst add_historiaLapizId = (lapiz, id) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tid: id,\n\t\t\thistoriaLapiz: [...stateLapiz.historiaLapiz, lapiz],\n\t\t});\n\t};\n\tconst s_lapizAddHId = (lapiz, id) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tid: id,\n\t\t\thistoriaLapiz: [...stateLapiz.historiaLapiz, lapiz],\n\t\t});\n\t};\n\tconst updateLapizColorGrosor = (valor1, valor2) => {\n\t\tsetStateLapiz({\n\t\t\t...stateLapiz,\n\t\t\tcolor: valor1,\n\t\t\tgrosor: valor2,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateLapiz,\n\t\tupdateLapizActive,\n\t\tupdateLapizColor,\n\t\tupdateLapizGrosor,\n\t\t//add_historiaLapiz,\n\t\tupdateLapizColorGrosor,\n\t\t//add_historiaLapizId,\n\t\ts_lapizAddHId,\n\t};\n};\n\nexport default useLapiz;\n","import { useState } from 'react';\nconst initialStateBorrador = {\n\tactive: false,\n\tcolor: 'white',\n\tgrosor: 10,\n\thistorialBorrador: [],\n};\n\nconst useBorrador = () => {\n\tconst [stateBorrador, setStateBorrador] = useState(initialStateBorrador);\n\n\tconst updateBorradorActive = (valor) => {\n\t\tsetStateBorrador({\n\t\t\t...stateBorrador,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateBorradorColor = (valor) => {\n\t\tsetStateBorrador({\n\t\t\t...stateBorrador,\n\t\t\tcolor: valor,\n\t\t});\n\t};\n\tconst updateBorradorGrosor = (valor) => {\n\t\tsetStateBorrador({\n\t\t\t...stateBorrador,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateBorrador,\n\t\tupdateBorradorActive,\n\t\tupdateBorradorColor,\n\t\tupdateBorradorGrosor,\n\t};\n};\n\nexport default useBorrador;\n","import { useState } from 'react';\nconst initialStateCuadrado = {\n\tactive: false,\n\tbordeEstado: true, // si tendra borde\n\tbordeGrosor: 5,\n\tbordeColor: 'yellow',\n\tfondoEstado: true, // si tendra fondo\n\tfondoColor: 'black',\n\tx_ini: 0,\n\ty_ini: 0,\n\twidth: 10,\n\theight: 10,\n\thistoriaCuadrado: [],\n};\n\nconst useCuadrado = () => {\n\tconst [stateCuadrado, setStateCuadrado] = useState(initialStateCuadrado);\n\n\tconst updateCuadradoActive = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\t// UPDATE GENERAL(HEADER - PALETA):\n\tconst updateCuadradoBordeGrosor = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeGrosor: valor,\n\t\t});\n\t};\n\tconst updateCuadradoBordeEstado = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeEstado: valor,\n\t\t});\n\t};\n\tconst updateCuadradoBorde_ColorEstado = (color, estado) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeColor: color,\n\t\t\tbordeEstado: estado,\n\t\t});\n\t};\n\tconst updateCuadradoFondoEstado = (valor) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tfondoEstado: valor,\n\t\t});\n\t};\n\tconst updateCuadradoFondo_ColorEstado = (color, estado) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tfondoColor: color,\n\t\t\tfondoEstado: estado,\n\t\t});\n\t};\n\t// CREATE: ADD_IN:\thistoriaCuadrado[]\n\tconst add_cuadrado_en_historia = (cuadrado) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\thistoriaCuadrado: [...stateCuadrado.historiaCuadrado, cuadrado],\n\t\t});\n\t};\n\tconst s_cuadradoAddH = (cuadrado) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\thistoriaCuadrado: [...stateCuadrado.historiaCuadrado, cuadrado],\n\t\t});\n\t};\n\t// DELETE: DELETE_IN:\thistoriaCuadrado[]\n\t// UPDATE: UPDATE_IN:\thistoriaCuadrado[]\n\tconst update_cuadrado_en_historia = (array) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\thistoriaCuadrado: array,\n\t\t});\n\t};\n\tconst update_cuadradoH = (array) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\thistoriaCuadrado: array,\n\t\t});\n\t};\n\tconst update_all = (\n\t\tcolorBorde,\n\t\tcolorFondo,\n\t\tbordeGrosor,\n\t\tbordeEstadoIn,\n\t\tfondoEstadoIn\n\t) => {\n\t\tsetStateCuadrado({\n\t\t\t...stateCuadrado,\n\t\t\tbordeColor: colorBorde,\n\t\t\tfondoColor: colorFondo,\n\t\t\tbordeGrosor: bordeGrosor,\n\t\t\tbordeEstado: bordeEstadoIn,\n\t\t\tfondoEstado: fondoEstadoIn,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateCuadrado,\n\t\tupdateCuadradoActive,\n\t\tupdateCuadradoBordeGrosor,\n\t\tupdateCuadradoBordeEstado,\n\t\tupdateCuadradoBorde_ColorEstado,\n\t\tupdateCuadradoFondoEstado,\n\t\tupdateCuadradoFondo_ColorEstado,\n\t\tadd_cuadrado_en_historia,\n\t\tupdate_cuadrado_en_historia,\n\t\tupdate_all,\n\t\tupdate_cuadradoH, // new\n\t\ts_cuadradoAddH,\n\t};\n};\n\nexport default useCuadrado;\n","import { useState } from 'react';\n\nconst initialStateCanvas = {\n\tactive: false,\n\tid: 0,\n\twidth: 0,\n\theight: 0,\n\tcuadriculaWidth: 30,\n\tfondoColor: 'white',\n\tlineaColor: '#d5dbdb',\n\tlineaGrosor: 1,\n\ttipoCuadricula: 'cuadricula', // cuadricula, linea, ninguno\n};\n\nconst useCanvas = () => {\n\tconst [stateCanvas, setStateCanvas] = useState(initialStateCanvas);\n\n\tconst updateCuadriculaActive = (valor) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateCuadriculaWidth = (valor) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\tcuadriculaWidth: valor,\n\t\t});\n\t};\n\tconst update_width_height = (width, height) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t});\n\t};\n\tconst updateTipoCuadricula = (valor) => {\n\t\tsetStateCanvas({\n\t\t\t...stateCanvas,\n\t\t\ttipoCuadricula: valor,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateCanvas,\n\t\tupdateCuadriculaActive,\n\t\tupdateCuadriculaWidth,\n\t\tupdate_width_height,\n\t\tupdateTipoCuadricula,\n\t};\n};\n\nexport default useCanvas;\n","import { useState } from 'react';\nconst initialStateLinea = {\n\tactive: false,\n\tcolor: 'black',\n\tgrosor: 2,\n\tid: 0,\n\thistoriaLinea: [],\n};\n\nconst useLinea = () => {\n\tconst [stateLinea, setStateLinea] = useState(initialStateLinea);\n\n\tconst updateLineaActive = (valor) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst updateLineaColor = (valor) => {\n\t\tconsole.log('color util:', valor);\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tcolor: valor,\n\t\t});\n\t\tconsole.log('color:', stateLinea);\n\t};\n\tconst updateLineaGrosor = (valor) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tgrosor: valor,\n\t\t});\n\t};\n\tconst add_historiaLinea = (valor) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\thistoriaLinea: [...stateLinea.historiaLinea, valor],\n\t\t});\n\t};\n\tconst add_historiaLinea_id = (valor, id) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tid: id,\n\t\t\thistoriaLinea: [...stateLinea.historiaLinea, valor],\n\t\t});\n\t};\n\tconst s_lineaAddHId = (valor, id) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tid: id,\n\t\t\thistoriaLinea: [...stateLinea.historiaLinea, valor],\n\t\t});\n\t};\n\tconst updateLineaColorGrosor = (valor1, valor2) => {\n\t\tsetStateLinea({\n\t\t\t...stateLinea,\n\t\t\tcolor: valor1,\n\t\t\tgrosor: valor2,\n\t\t});\n\t};\n\tconst s_lineaUpdateH = (array) => {\n\t\tsetStateLinea({\n\t\t\t...setStateLinea,\n\t\t\thistoriaLinea: array,\n\t\t});\n\t};\n\n\treturn {\n\t\tstateLinea,\n\t\tupdateLineaActive,\n\t\tupdateLineaColor,\n\t\tupdateLineaGrosor,\n\t\tadd_historiaLinea,\n\t\t//add_historiaLinea_id,\n\t\tupdateLineaColorGrosor,\n\t\ts_lineaUpdateH,\n\t\ts_lineaAddHId,\n\t};\n};\n\nexport default useLinea;\n","import { useState } from 'react';\nconst initialStatePlano = {\n\tactive: false,\n\tid: 0,\n\tx_min: -10,\n\ty_max: 10,\n\tsalto: 1,\n\tcolor_cuadricula: '#abb2b9',\n\twidth_cuadricula: 20,\n\thistoriaPlano: [],\n};\n\nconst usePlano = () => {\n\tconst [statePlano, setStatePlano] = useState(initialStatePlano);\n\n\tconst updatePlanoActive = (valor) => {\n\t\tsetStatePlano({\n\t\t\t...statePlano,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst add_plano_en_historia = (valor) => {\n\t\tsetStatePlano({\n\t\t\t...statePlano,\n\t\t\thistoriaPlano: [...statePlano.historiaPlano, valor],\n\t\t});\n\t};\n\tconst s_planoAddHId = (valor, id) => {\n\t\tsetStatePlano({\n\t\t\t...statePlano,\n\t\t\tid: id,\n\t\t\thistoriaPlano: [...statePlano.historiaPlano, valor],\n\t\t});\n\t};\n\treturn {\n\t\tstatePlano,\n\t\tupdatePlanoActive,\n\t\tadd_plano_en_historia,\n\t\ts_planoAddHId,\n\t};\n};\n\nexport default usePlano;\n","import { useState } from 'react';\nconst initialStateText = {\n\tactive: false,\n\tid: 0,\n\ttamano: 20,\n\ttexto: 'new text',\n\tx_ini: 0,\n\ty_ini: 0,\n\tsalto: 1,\n\tcolor: 'black',\n\thistoriaText: [],\n};\n\nconst useText = () => {\n\tconst [stateText, setStateText] = useState(initialStateText);\n\n\tconst updateTextActive = (valor) => {\n\t\tsetStateText({\n\t\t\t...stateText,\n\t\t\tactive: valor,\n\t\t});\n\t};\n\tconst s_textAddH = (valor) => {\n\t\tsetStateText({\n\t\t\t...stateText,\n\t\t\thistoriaText: [...stateText.historiaText, valor],\n\t\t});\n\t};\n\tconst s_textAddHId = (valor, id) => {\n\t\tsetStateText({\n\t\t\t...stateText,\n\t\t\tid: id,\n\t\t\thistoriaText: [...stateText.historiaText, valor],\n\t\t});\n\t};\n\tconst s_textUpdateColor = (color) => {\n\t\tsetStateText({\n\t\t\t...stateText,\n\t\t\tcolor: color,\n\t\t});\n\t};\n\tconst s_textUpdateTamano = (tamano) => {\n\t\tsetStateText({\n\t\t\t...stateText,\n\t\t\ttamano: tamano,\n\t\t});\n\t};\n\tconst s_textUpdateText = (txt) => {\n\t\tsetStateText({\n\t\t\t...stateText,\n\t\t\ttexto: txt,\n\t\t});\n\t};\n\treturn {\n\t\tstateText,\n\t\tupdateTextActive,\n\t\ts_textAddH,\n\t\ts_textUpdateColor,\n\t\ts_textUpdateTamano,\n\t\ts_textUpdateText,\n\t\ts_textAddHId,\n\t};\n};\n\nexport default useText;\n","import React from 'react';\n\nconst MenuLapizAux = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h1>BIENVENIDO A LA PIZARRA DIGITAL WEB</h1>\n\t\t</div>\n\t);\n};\n\nexport default MenuLapizAux;\n","import React, { useContext, useEffect } from 'react';\n\nimport '../styles/MenuPlano.scss';\n\n// CONTEXT:\nimport AppContextPlano from '../context/AppContextPlano';\n\nconst MenuPlano = () => {\n\t// useContext:\n\tconst { statePlano } = useContext(AppContextPlano);\n\n\t// LOGICA\n\tconst handleAdd = () => {\n\t\tconsole.log('press add');\n\t};\n\t// LOGICA END.\n\n\t// useEffect\n\tuseEffect(() => {}, []);\n\treturn (\n\t\t<article className=\"article__menuPlano\">\n\t\t\t<div className=\"article__menuPlano__limites\">\n\t\t\t\t<div className=\"article__menuPlano__limites__minMay\">\n\t\t\t\t\t<span>X_MIN: </span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tdefaultValue={statePlano.x_min}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input type=\"button\" value=\"-\" />\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input type=\"button\" value=\"+\" />\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"article__menuPlano__limites__minMay\">\n\t\t\t\t\t<span>Y_MAY:</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tdefaultValue={statePlano.y_max}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input type=\"button\" value=\"-\" />\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input type=\"button\" value=\"+\" />\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"article__menuPlano__salto\">\n\t\t\t\t<div className=\"article__menuPlano__salto__minMay\">\n\t\t\t\t\t<span>PRESS:</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tdefaultValue=\"ADD\"\n\t\t\t\t\t\t\tonClick={() => handleAdd()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default MenuPlano;\n","import React from 'react';\n\nconst MenuMover = () => {\n\treturn <div>mover</div>;\n};\n\nexport default MenuMover;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\n\n// styles:\nimport '../styles/PaletaColor.scss';\nimport iconLineaNone from '../assets/icons/lineaNone.svg';\n\nconst PaletaColor = (value) => {\n\t// useContext:\n\tconst { state, updateColor, updateColorFondo } = useContext(AppContext);\n\n\t// LOGICA:\n\tconst arrayPaletaColor = [\n\t\t{ colorLine: 'white', id: `colorNone-${value.tipo}` },\n\t\t{ colorLine: 'black', id: `colorBlack-${value.tipo}` },\n\t\t{ colorLine: 'red', id: `colorRed-${value.tipo}` },\n\t\t{ colorLine: 'green', id: `colorGreen-${value.tipo}` },\n\t\t{ colorLine: 'blue', id: `colorBlue-${value.tipo}` },\n\t\t{ colorLine: 'yellow', id: `colorYellow-${value.tipo}` },\n\t];\n\tconst updatePaletaColor = (color) => {\n\t\tarrayPaletaColor.forEach((dato) =>\n\t\t\tdocument.getElementById(dato.id).classList.remove('activePaletaColor')\n\t\t);\n\t\tlet elem = arrayPaletaColor.find((elem) => elem.colorLine == color);\n\t\tdocument.getElementById(elem.id).classList.add('activePaletaColor');\n\t};\n\tconst handlePaletaColor = (color) => {\n\t\tupdatePaletaColor(color);\n\t\tvalue.tipo == 'linea'\n\t\t\t? updateColor(color) // CONTEXT COLOR\n\t\t\t: updateColorFondo(color); // CONTEXT colorFondo\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t// se ejecuta solo la 1ra vez que se carga el componente.\n\t\tvalue.tipo == 'linea'\n\t\t\t? updatePaletaColor(state.color)\n\t\t\t: updatePaletaColor(state.colorFondo);\n\t}, [updateColor, updateColorFondo]);\n\n\treturn (\n\t\t<div className=\"article__menuLapiz__paletaColor\">\n\t\t\t<div>\n\t\t\t\t<span>{value.title}: </span>\n\t\t\t</div>\n\t\t\t<div className=\"article__menuLapiz__paletaColor__container\">\n\t\t\t\t{arrayPaletaColor.map((elem) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`color activePaletaColor ${elem.colorLine}`}\n\t\t\t\t\t\tid={elem.id}\n\t\t\t\t\t\tonClick={() => handleColor('colorNegro')}\n\t\t\t\t\t\tkey={elem.id}\n\t\t\t\t\t\tonClick={() => handlePaletaColor(elem.colorLine)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{elem.colorLine == 'white' && <img src={iconLineaNone} />}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default PaletaColor;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\n\n// styles:\nimport '../styles/PaletaGrosor.scss';\n//import iconLineaNone from '../assets/icons/lineaNone.svg';\nimport iconLineaS from '../assets/icons/lineaS.svg';\nimport iconLineaM from '../assets/icons/lineaM.svg';\nimport iconLineaL from '../assets/icons/lineaL.svg';\nimport iconLineaXL from '../assets/icons/lineaXL.svg';\nimport iconLineaXXL from '../assets/icons/lineaXXL.svg';\n\nconst PaletaGrosor = (title) => {\n\t// useContext:\n\tconst { state, updateGrosor } = useContext(AppContext);\n\n\t// LOGICA:\n\tconst arrayIconLinea = [\n\t\t//{ iconLine: iconLineaNone, grosor: 0, id: 'iconLineaNone' },\n\t\t{ iconLine: iconLineaS, grosor: 1, id: 'iconLineaS' },\n\t\t{ iconLine: iconLineaM, grosor: 2, id: 'iconLineaM' },\n\t\t{ iconLine: iconLineaL, grosor: 4, id: 'iconLineaL' },\n\t\t{ iconLine: iconLineaXL, grosor: 6, id: 'iconLineaXL' },\n\t\t{ iconLine: iconLineaXXL, grosor: 10, id: 'iconLineaXXL' },\n\t];\n\tconst updatePaletaGrosor = (grosor) => {\n\t\tconst array = document.querySelectorAll('.activeIconLinea');\n\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\tarray[i].classList.remove('activeIconLinea');\n\t\t}\n\t\tlet elem = arrayIconLinea.find((elem) => elem.grosor == grosor);\n\t\tdocument.getElementById(elem.id).classList.add('activeIconLinea');\n\t};\n\tconst handleLineaGrosor = (grosor) => {\n\t\tupdatePaletaGrosor(grosor);\n\t\tupdateGrosor(grosor); // CONTEXT\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t// se ejecuta solo la 1ra vez que se carga el componente.\n\t\tupdatePaletaGrosor(state.grosor);\n\t}, []);\n\n\treturn (\n\t\t<div className=\"article__menuLapiz__tamano\">\n\t\t\t<span htmlFor=\"\">{title.title}: </span>\n\t\t\t<div className=\"article__menuLapiz__tamano__icons\">\n\t\t\t\t{arrayIconLinea.map((elem) => (\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"article__menuLapiz__tamano__icons__icon \"\n\t\t\t\t\t\tsrc={elem.iconLine}\n\t\t\t\t\t\tid={elem.id}\n\t\t\t\t\t\tkey={`key-${elem.id}`}\n\t\t\t\t\t\tonClick={() => handleLineaGrosor(elem.grosor)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default PaletaGrosor;\n","import React, { useContext, useEffect } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\nimport AppContextLapiz from '../context/AppContextLapiz';\n\n// components:\nimport PaletaColor from '../components/PaletaColor';\nimport PaletaGrosor from '../components/PaletaGrosor';\n\n// styles:\nimport '../styles/MenuLapiz.scss';\n\nconst MenuLapiz = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\tconst { updateLapizColorGrosor } = useContext(AppContextLapiz);\n\n\t// LOGICA:\n\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tupdateLapizColorGrosor(state.color, state.grosor);\n\t}, [state]);\n\tuseEffect(() => {\n\t\t//console.log('STATE LAPIZ:', stateLapiz);\n\t}, []);\n\n\treturn (\n\t\t<article className=\"article__menuLapiz\">\n\t\t\t{<PaletaGrosor title=\"LINEA\" />}\n\t\t\t{<PaletaColor tipo=\"linea\" title=\"Color\" />}\n\t\t</article>\n\t);\n};\n\nexport default MenuLapiz;\n","import React, { useContext, useEffect } from 'react';\n\n// context:\nimport AppContextBorrador from '../context/AppContextBorrador';\n\n// style:\nimport '../styles/MenuBorrador.scss';\n\nconst MenuBorrador = () => {\n\t// useContext:\n\tconst { stateBorrador, updateBorradorGrosor } =\n\t\tuseContext(AppContextBorrador);\n\n\t// LOGICA:\n\tconst updatePaletaGrosor = (grosor) => {\n\t\tdocument.getElementById('grosorBorrador').value = grosor;\n\t};\n\tconst handleGrosor = (opMatematica) => {\n\t\tlet valor = parseInt(document.getElementById('grosorBorrador').value);\n\t\tlet update = true;\n\t\tswitch (opMatematica) {\n\t\t\tcase '+':\n\t\t\t\tvalor + 1 < 20 ? (valor = valor + 1) : (update = false);\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\tvalor - 1 > 0 ? (valor = valor - 1) : (update = false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tif (update) {\n\t\t\tdocument.getElementById('grosorBorrador').value = valor;\n\t\t\tupdateBorradorGrosor(valor); // CONTEXT\n\t\t} else {\n\t\t\tconsole.log('limite');\n\t\t}\n\t};\n\t// LOGICA END.\n\n\t// EFFECT:\n\tuseEffect(() => {\n\t\tupdatePaletaGrosor(stateBorrador.grosor);\n\t}, [stateBorrador, updateBorradorGrosor]);\n\n\treturn (\n\t\t<article className=\"article__menuBorrador\">\n\t\t\t<div className=\"article__menuBorrador__tamano\">\n\t\t\t\t<span htmlFor=\"\">TAMAÑO DEL BORRADOR: </span>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\tid=\"grosorBorrador\"\n\t\t\t\t\tplaceholder=\"2\"\n\t\t\t\t\tdefaultValue=\"4\"\n\t\t\t\t\tdisabled\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\tid=\"button1_txt\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tvalue=\"+\"\n\t\t\t\t\tonClick={() => handleGrosor('+')}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\tid=\"button2_txt\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tvalue=\"-\"\n\t\t\t\t\tonClick={() => handleGrosor('-')}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default MenuBorrador;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\n\n// styles:\nimport '../styles/MenuCuadrado.scss';\n\n// components:\nimport PaletaGrosor from '../components/PaletaGrosor';\nimport PaletaColorBorde from '../components/PaletaColor';\nimport PaletaColorFondo from '../components/PaletaColor';\n\nconst MenuCuadrado = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\tconst {\n\t\tstateCuadrado,\n\t\tupdateCuadradoBordeGrosor,\n\t\tupdateCuadradoBorde_ColorEstado,\n\t\tupdateCuadradoFondo_ColorEstado,\n\t\tupdate_all,\n\t} = useContext(AppContextCuadrado);\n\n\t// LOGICA:\n\t// LOGICA END\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t// solo 1 vez al cargar el componente:\n\t}, []);\n\tuseEffect(() => {\n\t\t// solo cuando se modifica [stateCuadrado]:\n\t}, [stateCuadrado]);\n\n\tuseEffect(() => {\n\t\t// se ejecuta cada vez que se modifica el state.color\n\t\tupdateCuadradoBorde_ColorEstado(state.color, state.color != 'white');\n\t}, [state.color]);\n\n\tuseEffect(() => {\n\t\t// se ejecuta cada vez que se modifica el state\n\t\tupdateCuadradoFondo_ColorEstado(\n\t\t\tstate.colorFondo,\n\t\t\tstate.colorFondo != 'white'\n\t\t);\n\t}, [state.colorFondo]);\n\n\tuseEffect(() => {\n\t\tupdateCuadradoBordeGrosor(state.grosor);\n\t}, [state.grosor]);\n\n\tuseEffect(() => {\n\t\tupdate_all(\n\t\t\tstate.color,\n\t\t\tstate.colorFondo,\n\t\t\tstate.grosor,\n\t\t\tstate.color != 'white',\n\t\t\tstate.colorFondo != 'white'\n\t\t);\n\t}, []);\n\treturn (\n\t\t<article className=\"article__menuCuadrado\">\n\t\t\t{<PaletaGrosor title=\"BORDE\" />}\n\t\t\t{<PaletaColorBorde tipo=\"linea\" title=\"Borde\" />}\n\t\t\t{<PaletaColorFondo tipo=\"fondo\" title=\"Fondo\" />}\n\t\t</article>\n\t);\n};\n\nexport default MenuCuadrado;\n","import React, { useEffect, useContext } from 'react';\n\n// context\nimport AppContextCanvas from '../context/AppContextCanvas';\n\n// styles:\nimport '../styles/MenuCuadricula.scss';\nimport iconCuadricula from '../assets/icons/cuadricula.svg';\nimport iconCuadriculaSin from '../assets/icons/cuadriculaSin.svg';\nimport iconCuadriculaNone from '../assets/icons/lineaNone.svg';\n\nconst MenuCuadricula = () => {\n\t// useContext:\n\tconst { stateCanvas, updateTipoCuadricula, updateCuadriculaWidth } =\n\t\tuseContext(AppContextCanvas);\n\n\t// LOGICA:\n\tconst arrayIconCuadricula = [\n\t\t{\n\t\t\ticonCuadricula: iconCuadricula,\n\t\t\ttipo: 'cuadricula',\n\t\t\tid: 'iconCuadricula',\n\t\t},\n\t\t{\n\t\t\ticonCuadricula: iconCuadriculaSin,\n\t\t\ttipo: 'linea',\n\t\t\tid: 'iconCuadriculaSin',\n\t\t},\n\t\t{\n\t\t\ticonCuadricula: iconCuadriculaNone,\n\t\t\ttipo: 'ninguno',\n\t\t\tid: 'iconCuadriculaNone',\n\t\t},\n\t];\n\tconst updatePaleta_tipoCuadricula = (tipo) => {\n\t\tconst array = document.querySelectorAll('.activeIconCuadricula');\n\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\tarray[i].classList.remove('activeIconCuadricula');\n\t\t}\n\t\tlet elem = arrayIconCuadricula.find((elem) => elem.tipo == tipo);\n\t\tdocument.getElementById(elem.id).classList.add('activeIconCuadricula');\n\t};\n\tconst handleCuadriculaTipo = (tipo) => {\n\t\tupdatePaleta_tipoCuadricula(tipo);\n\t\tupdateTipoCuadricula(tipo);\n\t};\n\tconst handleBtnAncho = (op) => {\n\t\top == '-' && stateCanvas.cuadriculaWidth > 10\n\t\t\t? updateCuadriculaWidth(stateCanvas.cuadriculaWidth - 10)\n\t\t\t: '';\n\t\top == '+' ? updateCuadriculaWidth(stateCanvas.cuadriculaWidth + 10) : '';\n\t};\n\t// LOGICA END.\n\n\t// useEffect\n\tuseEffect(() => {\n\t\tupdatePaleta_tipoCuadricula(stateCanvas.tipoCuadricula);\n\t}, []);\n\n\treturn (\n\t\t<article className=\"article__menuCuadricula\">\n\t\t\t<div className=\"article__menuCuadricula__paletaTipo\">\n\t\t\t\t<div>\n\t\t\t\t\t<span>Cuadricula: </span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"article__menuCuadricula__paletaTipo__icons\">\n\t\t\t\t\t{arrayIconCuadricula.map((elem) => (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName=\"article__menuCuadricula__paletaTipo__icons__icon \"\n\t\t\t\t\t\t\tsrc={elem.iconCuadricula}\n\t\t\t\t\t\t\tid={elem.id}\n\t\t\t\t\t\t\tkey={`key-${elem.id}`}\n\t\t\t\t\t\t\tonClick={() => handleCuadriculaTipo(elem.tipo)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"article__menuCuadricula__paletaAncho\">\n\t\t\t\t<div>\n\t\t\t\t\t<span>Tamaño: </span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputButton\">\n\t\t\t\t\t<input type=\"button\" value=\"-\" onClick={() => handleBtnAncho('-')} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputButton\">\n\t\t\t\t\t<input type=\"button\" value=\"+\" onClick={() => handleBtnAncho('+')} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default MenuCuadricula;\n","import React, { useContext, useEffect } from 'react';\n\n// context\nimport AppContext from '../context/AppContext';\nimport AppContextLinea from '../context/AppContextLinea';\n\n// components:\nimport PaletaColor from '../components/PaletaColor';\nimport PaletaGrosor from '../components/PaletaGrosor';\n\n// styles:\nimport '../styles/MenuLinea.scss';\n\nconst MenuLinea = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\tconst { updateLineaColorGrosor } = useContext(AppContextLinea);\n\n\t// LOGICA:\n\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tupdateLineaColorGrosor(state.color, state.grosor);\n\t}, [state]);\n\tuseEffect(() => {\n\t\t//console.log('STATE Linea:', stateLinea);\n\t}, []);\n\n\treturn (\n\t\t<article className=\"article__menuLinea\">\n\t\t\t{<PaletaGrosor title=\"LINEA\" />}\n\t\t\t{<PaletaColor tipo=\"linea\" title=\"Color\" />}\n\t\t</article>\n\t);\n};\n\nexport default MenuLinea;\n","import React, { useContext, useEffect } from 'react';\n\nimport AppContextText from '../context/AppContextText';\n\nimport '../styles/MenuText.scss';\n\nimport { u_textGrafica } from '../utils/UtilsText';\n\nconst MenuText = () => {\n\t// useContext:\n\tconst { s_textUpdateColor, stateText, s_textUpdateTamano, s_textAddHId } =\n\t\tuseContext(AppContextText);\n\n\t// LOGICA\n\tlet canvas = '';\n\tlet context = '';\n\tconst textoNew = {\n\t\tid: stateText.id,\n\t\ttamano: 11,\n\t\ttexto: 'new text',\n\t\tx_ini: 400,\n\t\ty_ini: 400,\n\t\tcolor: stateText.color,\n\t\tvisible: true,\n\t};\n\tconst arrayColorLinea = [\n\t\t{ colorLine: 'black', id: 'colorBlackText' },\n\t\t{ colorLine: 'red', id: 'colorRedText' },\n\t\t{ colorLine: 'green', id: 'colorGreenText' },\n\t\t{ colorLine: 'blue', id: 'colorBlueText' },\n\t\t{ colorLine: 'yellow', id: 'colorYellowText' },\n\t];\n\tconst graficaTexto = (context, obj) => {\n\t\tcontext.fillStyle = 'red'; //color de relleno\n\t\tcontext.font = `${obj.tamano}px arial`; //estilo de texto\n\t\tcontext.beginPath(); //iniciar ruta\n\t\tcontext.fillText(obj.texto, obj.x_ini, obj.y_ini); //texto con método stroke\n\t\tcontext.closePath();\n\t};\n\tconst graficaTexto2 = () => {\n\t\tcanvas = document.getElementById('canvas-1');\n\t\tcontext = canvas.getContext('2d');\n\t\tcontext.fillStyle = textoNew.color; //color de relleno\n\t\tcontext.font = `${textoNew.tamano}px arial`; //estilo de texto\n\t\tcontext.beginPath(); //iniciar ruta\n\t\tcontext.fillText(textoNew.texto, textoNew.x_ini, textoNew.y_ini); //texto con método stroke\n\t\tcontext.closePath();\n\t};\n\tconst updatePaletaColor = (color) => {\n\t\tconst array = document.querySelectorAll('.activeColorText');\n\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\tarray[i].classList.remove('activeColorText');\n\t\t}\n\t\tlet elem = arrayColorLinea.find((elem) => elem.colorLine == color);\n\t\tlet x = document.getElementById(elem.id);\n\t\tx.classList.add('activeColorText');\n\t\ttextoNew.color = color;\n\t};\n\tconst updatePaletaSize = (size) => {\n\t\tdocument.getElementById('t_inputTamano').value = size;\n\t};\n\tconst updatePaletaTexto = (txt) => {\n\t\tdocument.getElementById('t_inputTexto').value = txt;\n\t};\n\tconst handleColor = (color) => {\n\t\tupdatePaletaColor(color);\n\t\ts_textUpdateColor(color); // CONTEXT\n\t};\n\tconst handleAdd = () => {\n\t\tlet tamano = document.getElementById('t_inputTamano').value;\n\t\tlet texto = document.getElementById('t_inputTexto').value;\n\t\tlet color = stateText.color;\n\t\ttextoNew.texto = texto;\n\t\ttextoNew.color = color;\n\t\ttextoNew.tamano = tamano;\n\t\tgraficaTexto2();\n\t\t//u_textGrafica(context, textoNew);\n\t\ts_textAddHId(textoNew, stateText.id + 1);\n\t};\n\tconst handleSize = (op) => {\n\t\tlet tamano = parseInt(document.getElementById('t_inputTamano').value);\n\t\tif (op == '+') tamano++;\n\t\telse tamano--;\n\t\tdocument.getElementById('t_inputTamano').value = tamano;\n\t\ts_textUpdateTamano(tamano);\n\t};\n\n\t// LOGICA END\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById('canvas-1');\n\t\tcontext = canvas.getContext('2d');\n\t\tupdatePaletaColor(stateText.color);\n\t\tupdatePaletaSize(stateText.tamano);\n\t\tupdatePaletaTexto(stateText.texto);\n\t}, []);\n\treturn (\n\t\t<article className=\"article__menuText\">\n\t\t\t<div className=\"article__menuText__tamano\">\n\t\t\t\t<span htmlFor=\"\">TAMAÑO: </span>\n\t\t\t\t<input type=\"text\" defaultValue=\"11\" id=\"t_inputTamano\" />\n\t\t\t\t<input type=\"button\" value=\"-\" onClick={() => handleSize('-')} />\n\t\t\t\t<input type=\"button\" value=\"+\" onClick={() => handleSize('+')} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input type=\"text\" defaultValue=\"hola daniel\" id=\"t_inputTexto\" />\n\t\t\t\t<input type=\"button\" value=\"ADD\" onClick={() => handleAdd()} />\n\t\t\t</div>\n\t\t\t<div className=\"article__menuText__paletaColor\">\n\t\t\t\t<div>\n\t\t\t\t\t<span>COLOR: </span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"article__menuText__paletaColor__container\">\n\t\t\t\t\t{arrayColorLinea.map((elem) => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`color activeColorText ${elem.colorLine}`}\n\t\t\t\t\t\t\tid={elem.id}\n\t\t\t\t\t\t\tkey={elem.id}\n\t\t\t\t\t\t\tonClick={() => handleColor(elem.colorLine)}\n\t\t\t\t\t\t></div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default MenuText;\n","import React, { useEffect, useContext, useState } from 'react';\n\n// estilos:\nimport '../styles/Header.scss';\n\n// containers:\nimport Menu1 from '../containers/Menu1';\nimport MenuPlano from '../containers/MenuPlano';\nimport MenuMover from '../containers/MenuMover';\nimport MenuLapiz from '../containers/MenuLapiz';\nimport MenuBorrador from '../containers/MenuBorrador';\nimport MenuCuadrado from '../containers/MenuCuadrado';\nimport MenuCuadricula from '../containers/MenuCuadricula';\nimport MenuLinea from '../containers/MenuLinea';\nimport MenuText from '../containers/MenuText';\n\n// context:\nimport AppContext from '../context/AppContext';\n\n// iconos:\n\nconst Header = () => {\n\t// useContext:\n\tconst { state } = useContext(AppContext);\n\n\t// useState:\n\tconst [toggleMenu1, setToggleMenu1] = useState(false);\n\t//const [toggleMenu2, setToggleMenu2] = useState(false);\n\tconst [toggleMenuMover, setToggleMenuMover] = useState(false);\n\tconst [toggleMenuLapiz, setToggleMenuLapiz] = useState(false);\n\tconst [toggleMenuBorrador, setToggleMenuBorrador] = useState(false);\n\tconst [toggleMenuCuadrado, setToggleMenuCuadrado] = useState(false);\n\tconst [toggleMenuCuadricula, setToggleMenuCuadricula] = useState(false);\n\tconst [toggleMenuLinea, setToggleMenuLinea] = useState(false);\n\tconst [toggleMenuPlano, setToggleMenuPlano] = useState(false);\n\tconst [toggleMenuText, setToggleMenuText] = useState(false);\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tswitch (state.active) {\n\t\t\tcase 'moverIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(true);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lapizIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(true);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'borradorIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(true);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadradoIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(true);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lineaIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(true);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'planoIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(true);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadriculaIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(true);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(false);\n\t\t\t\tbreak;\n\t\t\tcase 'textIcon':\n\t\t\t\tsetToggleMenu1(false);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tsetToggleMenuText(true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetToggleMenu1(true);\n\t\t\t\tsetToggleMenuMover(false);\n\t\t\t\tsetToggleMenuLapiz(false);\n\t\t\t\tsetToggleMenuBorrador(false);\n\t\t\t\tsetToggleMenuCuadrado(false);\n\t\t\t\tsetToggleMenuCuadricula(false);\n\t\t\t\tsetToggleMenuLinea(false);\n\t\t\t\tsetToggleMenuPlano(false);\n\t\t\t\tbreak;\n\t\t}\n\t}, [state]);\n\treturn (\n\t\t<nav className=\"header__nav\">\n\t\t\t<div className=\"navbar-left\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"/\">MathBoard</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div className=\"navbar-central\">\n\t\t\t\t{toggleMenu1 && <Menu1 />}\n\t\t\t\t{toggleMenuPlano && <MenuPlano />}\n\t\t\t\t{toggleMenuMover && <MenuMover />}\n\t\t\t\t{toggleMenuLapiz && <MenuLapiz />}\n\t\t\t\t{toggleMenuBorrador && <MenuBorrador />}\n\t\t\t\t{toggleMenuCuadrado && <MenuCuadrado />}\n\t\t\t\t{toggleMenuCuadricula && <MenuCuadricula />}\n\t\t\t\t{toggleMenuLinea && <MenuLinea />}\n\t\t\t\t{toggleMenuText && <MenuText />}\n\t\t\t</div>\n\t\t\t<div className=\"navbar-right\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li className=\"navbar-email\">UMSA / INFORMÁTICA</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\n\nexport default Header;\n","import React from 'react';\n\nimport '../styles/Key.scss';\n\nconst Key = (valor) => {\n\tconst handleClick = (key) => {\n\t\tconsole.log(key);\n\t};\n\n\treturn (\n\t\t<input\n\t\t\ttype=\"button\"\n\t\t\tvalue={valor.element}\n\t\t\tclassName={`key ${valor.element}`}\n\t\t\tonClick={() => handleClick(valor.element)}\n\t\t/>\n\t);\n};\n\nexport default Key;\n","import React, { useState, useContext } from 'react';\n\nimport AppContext from '../context/AppContext';\n\nimport '../styles/KeySvg.scss';\n\nconst KeySvg = (svg) => {\n\tconst [toggleShift, setToggleShift] = useState(false);\n\n\tconst { toLowerCase, toUpperCase } = useContext(AppContext);\n\n\tconst handleClick = (option) => {\n\t\tswitch (option) {\n\t\t\tcase 'shift-fill':\n\t\t\t\tconsole.log(option);\n\t\t\t\tsetToggleShift(!toggleShift);\n\t\t\t\ttoggleShift ? toUpperCase() : toLowerCase();\n\t\t\t\tbreak;\n\t\t\tcase 'DEL':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tcase 'caret-left':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tcase 'caret-right':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tcase 'backspace':\n\t\t\t\tconsole.log(option);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\treturn (\n\t\t<input\n\t\t\ttype=\"button\"\n\t\t\tvalue=\"\"\n\t\t\tclassName={`keySvg ${svg.element}`}\n\t\t\tid={svg.element}\n\t\t\tonClick={() => handleClick(svg.element)}\n\t\t/>\n\t);\n};\n\nexport default KeySvg;\n","import React from 'react';\n\nimport '../styles/KeySvg.scss';\n\nconst KeyTxt = (txt) => {\n\tconst handleClick = (option) => {\n\t\tconsole.log(option);\n\t};\n\n\treturn (\n\t\t<input\n\t\t\ttype=\"button\"\n\t\t\tvalue={txt.element}\n\t\t\tclassName={`keySvg ${txt.element}`}\n\t\t\tid={txt.element}\n\t\t\tonClick={() => handleClick(txt.element)}\n\t\t/>\n\t);\n};\n\nexport default KeyTxt;\n","import React, { useState, useContext } from 'react';\n\nimport AppContext from '../context/AppContext';\n\nimport Key from '../components/key';\nimport KeySvg from '../components/KeySvg';\nimport KeyTxt from '../components/KeyTxt';\n\nimport '../styles/Keyboard.scss';\n\nconst Keyboard = () => {\n\tconst { state } = useContext(AppContext);\n\tconst array = state.alfabeto;\n\n\tconst arrayNumbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n\treturn (\n\t\t<aside className=\"keyboard\">\n\t\t\t<div className=\"keyboard__alfaNumerico\">\n\t\t\t\t<div>\n\t\t\t\t\t{arrayNumbers.map((element) => (\n\t\t\t\t\t\t<Key element={element} key={`key-${element}`} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{array[0].map((elm) => (\n\t\t\t\t\t\t<Key element={elm} key={`key-${elm}`} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{array[1].map((elm) => (\n\t\t\t\t\t\t<Key element={elm} key={`key-${elm}`} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"keyboard__alfaNumerico__flex\">\n\t\t\t\t\t<KeySvg element={'shift-fill'} key={`key-fill`} />\n\t\t\t\t\t{array[2].map((elm) => (\n\t\t\t\t\t\t<Key element={elm} key={`key-${elm}`} />\n\t\t\t\t\t))}\n\t\t\t\t\t<KeySvg element={'backspace'} key={`key-backspace`} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"keyboard__alfaNumerico__flex\">\n\t\t\t\t\t<KeyTxt element={'DEL'} key={`key-del`} />\n\t\t\t\t\t<Key element={'espacio'} key={`key-espacio`} />\n\t\t\t\t\t<KeySvg element={'caret-left'} key={`key-caret-left`} />\n\t\t\t\t\t<KeySvg element={'caret-right'} key={`key-caret-right`} />\n\t\t\t\t\t<KeyTxt element={'INI'} key={`key-ini`} />\n\t\t\t\t\t<KeyTxt element={'FIN'} key={`key-fin`} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"keyboard__simbolos\">simbolos</div>\n\t\t</aside>\n\t);\n};\n\nexport default Keyboard;\n","import React, { useState, useContext, useEffect } from 'react';\n\nimport AppContext from '../context/AppContext';\nimport AppContextMover from '../context/AppContextMover';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextBorrador from '../context/AppContextBorrador';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextCuadricula from '../context/AppContextCanvas';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\nimport Keyboard from '../containers/Keyboard';\n\nimport '../styles/NavIzq.scss';\nimport moverIcon from '../assets/icons/move1.svg';\nimport lapizIcon from '../assets/icons/pen1.svg';\nimport borradorIcon from '../assets/icons/eraser1.svg';\nimport calculadoraIcon from '../assets/icons/calculator.svg';\nimport planoIcon from '../assets/icons/graph-up.svg';\nimport plusIcon from '../assets/icons/plus-square.svg';\nimport textIcon from '../assets/icons/textarea.svg';\nimport zoomInIcon from '../assets/icons/zoom-in.svg';\nimport zoomOutIcon from '../assets/icons/zoom-out.svg';\nimport cuadradoIcon from '../assets/icons/square.svg';\nimport lineaIcon from '../assets/icons/linea.svg';\nimport funcionIcon from '../assets/icons/function1.svg';\nimport sumatoriaIcon from '../assets/icons/sumatoria1.svg';\nimport imageIcon from '../assets/icons/image1.svg';\n\nimport cuadriculaIcon from '../assets/icons/cuadricula.svg';\nimport keyboardIcon from '../assets/icons/keyboard1.svg';\n\nconst NavIzq = () => {\n\t// useContext:\n\tconst { state, updateCanvasPaleta } = useContext(AppContext);\n\tconst { updateMoverActive } = useContext(AppContextMover);\n\tconst { updateLapizActive } = useContext(AppContextLapiz);\n\tconst { updateBorradorActive } = useContext(AppContextBorrador);\n\tconst { updateCuadradoActive } = useContext(AppContextCuadrado);\n\tconst { updateCuadriculaActive } = useContext(AppContextCuadricula);\n\tconst { updateLineaActive } = useContext(AppContextLinea);\n\tconst { updatePlanoActive } = useContext(AppContextPlano);\n\tconst { updateTextActive } = useContext(AppContextText);\n\n\t// useState:\n\tconst [toggleKeyboard, setToggleKeyboard] = useState(false);\n\n\tconst iconosPaleta = [\n\t\t[moverIcon, 'moverIcon'],\n\t\t[lapizIcon, 'lapizIcon'],\n\t\t[borradorIcon, 'borradorIcon'],\n\t\t// [funcionIcon, 'funcionIcon'],\n\t\t// [sumatoriaIcon, 'sumatoriaIcon'],\n\t\t[textIcon, 'textIcon'],\n\t\t[lineaIcon, 'lineaIcon'],\n\t\t[cuadradoIcon, 'cuadradoIcon'],\n\t\t// [calculadoraIcon, 'calculadoraIcon'],\n\t\t[planoIcon, 'planoIcon'],\n\t\t// [imageIcon, 'imageIcon'],\n\t\t// [zoomInIcon, 'zoomInIcon'],\n\t\t// [zoomOutIcon, 'zoomOutIcon'],\n\t\t[cuadriculaIcon, 'cuadriculaIcon'],\n\t];\n\n\tconst handleIcon = (icon) => {\n\t\t// HOOKS - useInitialState:\n\t\tupdateCanvasPaleta(icon);\n\n\t\t// HOOKS - useLapiz:\n\t\tswitch (icon) {\n\t\t\tcase 'moverIcon':\n\t\t\t\tupdateMoverActive(true);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lapizIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(true);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'borradorIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(true);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'lineaIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(true);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadradoIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(true);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'planoIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(true);\n\t\t\t\tupdateCuadriculaActive(true);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'cuadriculaIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(true);\n\t\t\t\tupdateTextActive(false);\n\t\t\t\tbreak;\n\t\t\tcase 'textIcon':\n\t\t\t\tupdateMoverActive(false);\n\t\t\t\tupdateLapizActive(false);\n\t\t\t\tupdateBorradorActive(false);\n\t\t\t\tupdateLineaActive(false);\n\t\t\t\tupdateCuadradoActive(false);\n\t\t\t\tupdatePlanoActive(false);\n\t\t\t\tupdateCuadriculaActive(false);\n\t\t\t\tupdateTextActive(true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('Opcion no registrada!!!');\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\t//console.log('useEffect: [state]');\n\t\ticonosPaleta.map((elem) => {\n\t\t\tif (state.active == elem[1]) {\n\t\t\t\tdocument.getElementById(elem[1]).classList.add('navIzq__nav__active');\n\t\t\t} else {\n\t\t\t\tdocument\n\t\t\t\t\t.getElementById(elem[1])\n\t\t\t\t\t.classList.remove('navIzq__nav__active');\n\t\t\t}\n\t\t});\n\t\treturn () => {\n\t\t\t//console.log('return useEffect: [state]');\n\t\t};\n\t}, [state]);\n\n\treturn (\n\t\t<nav className=\"navIzq__nav\">\n\t\t\t<div className=\"navIzq__nav__top\">\n\t\t\t\t{iconosPaleta.map((elem) => (\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={elem[0]}\n\t\t\t\t\t\tonClick={() => handleIcon(elem[1])}\n\t\t\t\t\t\tkey={elem[1]}\n\t\t\t\t\t\tid={elem[1]}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"navIzq__nav__botton\">\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"navIzq__nav__div__keyboard\"\n\t\t\t\t\tsrc={keyboardIcon}\n\t\t\t\t\tonClick={() => setToggleKeyboard(!toggleKeyboard)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{toggleKeyboard && <Keyboard />}\n\t\t</nav>\n\t);\n};\n\nexport default NavIzq;\n","const utilsCuadricula_graficaCuadricula = (context, canvas) => {\n\tcontext.lineWidth = canvas.lineaGrosor; // lineaGrosor\n\tcontext.strokeStyle = canvas.lineaColor; // lineaColor\n\tcontext.fillStyle = 'white';\n\tcontext.setLineDash([0, 0]);\n\n\tcontext.beginPath();\n\tcontext.moveTo(0, 0); // (x_ini, y_ini)\n\tcontext.lineTo(canvas.width, 0); // (x_fin, y_ini)\n\tcontext.lineTo(canvas.width, canvas.height); // (x_fin, y_ini)\n\tcontext.lineTo(0, canvas.height); // (x_fin, y_ini)\n\tcontext.lineTo(0, 0); // (x_fin, y_ini)\n\tcontext.fill();\n\tcontext.stroke(); // bordeColor = true\n\tcontext.closePath();\n\n\t// VERTICAL: |\n\tif (canvas.tipoCuadricula == 'cuadricula') {\n\t\tlet nroLineasV = canvas.width / canvas.cuadriculaWidth - 1;\n\t\tlet incV = canvas.cuadriculaWidth;\n\t\tlet i = 0;\n\t\tfor (i = 0; i < nroLineasV; i++) {\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(incV, 0); // (x_ini, y_ini)\n\t\t\tcontext.lineTo(incV, canvas.height); // (x_fin, y_ini)\n\t\t\tcontext.stroke(); // bordeColor = true\n\t\t\tincV = incV + canvas.cuadriculaWidth;\n\t\t}\n\t}\n\t// HORIZONTAL: -\n\tif (\n\t\tcanvas.tipoCuadricula == 'cuadricula' ||\n\t\tcanvas.tipoCuadricula == 'linea'\n\t) {\n\t\tlet nroLineasH = canvas.height / canvas.cuadriculaWidth - 1;\n\t\tlet incH = canvas.cuadriculaWidth;\n\t\tlet i = 0;\n\t\tfor (i = 0; i < nroLineasH; i++) {\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(0, incH); // (x_ini, y_ini)\n\t\t\tcontext.lineTo(canvas.width, incH); // (x_fin, y_ini)\n\t\t\tcontext.stroke(); // bordeColor = true\n\t\t\tincH = incH + canvas.cuadriculaWidth;\n\t\t}\n\t}\n};\n\nexport { utilsCuadricula_graficaCuadricula };\n","const Texto = {\n\ttexto: 'Hola mundo', //texto de prueba\n\ttexto_color: 'black', //color externo\n\ttexto_fondo: 'black', //color de relleno\n\ttexto_font: 'bold 20px arial', //estilo de texto\n};\nconst generaRango = (start, stop, step) =>\n\tArray.from({ length: (stop - start) / step + 1 }, (_, i) => start + i * step);\n// ej. let array = generaRango(inicio, fin, salto);\n\nconst uPlano_graficaNumeros = (context, plano) => {\n\tlet arrayX = [];\n\tlet width = plano.x_fin - plano.x_ini;\n\tlet n = parseInt(width / plano.width_cuadricula);\n\tlet x = plano.x_min;\n\tfor (let i = 0; i < n - 1; i++) {\n\t\tarrayX.push(x);\n\t\tx = x + plano.salto;\n\t}\n\tcontext.fillStyle = 'black'; //color de relleno\n\tcontext.font = '11px arial'; //estilo de texto\n\tcontext.beginPath(); //iniciar ruta\n\tlet x1 = plano.x_ini + plano.width_cuadricula - 3;\n\tlet y1 = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula + 11;\n\tarrayX.forEach((x) => {\n\t\tx != 0\n\t\t\t? context.fillText(x, x1, y1) //texto con método stroke\n\t\t\t: context.fillText(x, x1 - 5, y1);\n\t\tx1 = x1 + plano.width_cuadricula;\n\t});\n\tcontext.closePath();\n\n\tlet arrayY = [];\n\tlet heigth = plano.y_fin - plano.y_ini;\n\tn = parseInt(heigth / plano.width_cuadricula);\n\tlet y = plano.y_max;\n\tfor (let i = 0; i < n; i++) {\n\t\tarrayY.push(y);\n\t\ty = y - plano.salto;\n\t}\n\tx1 = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula - 3;\n\ty1 = plano.y_ini + plano.width_cuadricula + 5;\n\n\tcontext.textAlign = 'end';\n\tcontext.beginPath(); //iniciar ruta\n\tarrayY.forEach((y) => {\n\t\tif (y != 0) context.fillText(y, x1, y1); //texto con método stroke\n\t\ty1 = y1 + plano.width_cuadricula;\n\t});\n\tcontext.closePath();\n\n\tcontext.textAlign = 'start';\n\tcontext.beginPath(); //iniciar ruta\n\tx1 = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula + 8;\n\ty1 = plano.y_ini + 12;\n\tcontext.fillText('Y', x1, y1);\n\tx1 = plano.x_fin - 12;\n\ty1 = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula - 10;\n\tcontext.fillText('X', x1, y1);\n\tcontext.closePath();\n};\nconst utilsPlano_graficaCuadricula = (context, plano) => {\n\tcontext.lineWidth = 1; // lineaGrosor\n\t//context.strokeStyle = plano.color_cuadricula; // lineaColor\n\tcontext.strokeStyle = '#d5dbdb'; // lineaColor\n\tcontext.setLineDash([0, 0]);\n\tlet width = plano.x_fin - plano.x_ini;\n\tlet width_cuadricula = plano.width_cuadricula;\n\t// VERTICAL: |\n\tlet nroLineasV = width / width_cuadricula - 1;\n\tlet incV = width_cuadricula;\n\tlet x1 = plano.x_ini + incV;\n\tlet y1 = plano.y_ini;\n\tlet y2 = plano.y_fin;\n\tlet i = 0;\n\tfor (i = 0; i < nroLineasV; i++) {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(x1, y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(x1, y2); // (x_fin, y_ini)\n\t\tcontext.stroke(); // bordeColor = true\n\t\tx1 = x1 + incV;\n\t}\n\t// HORIZONTAL: -\n\tlet height = plano.y_fin - plano.y_ini;\n\tlet nroLineasH = height / width_cuadricula - 1;\n\tlet incH = width_cuadricula;\n\tx1 = plano.x_ini;\n\tlet x2 = plano.x_fin;\n\ty1 = plano.y_ini + incH;\n\n\tfor (i = 0; i < nroLineasH; i++) {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(x1, y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(x2, y1); // (x_fin, y_ini)\n\t\tcontext.stroke(); // bordeColor = true\n\t\ty1 = y1 + incH;\n\t}\n};\n// PLANO SIN EJES:\nconst uPlano_graficaCuadrado = (context, cuadrado) => {\n\tcontext.strokeStyle = cuadrado.bordeColor; // bordeColor\n\tcontext.fillStyle = cuadrado.fondoColor; // fondoColor\n\tcontext.lineWidth = cuadrado.bordeGrosor; // bordeGrosor\n\tcontext.setLineDash([0, 0]); // lineas no segmentadas\n\n\tcontext.beginPath();\n\tcontext.moveTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\n\tcuadrado.fondoEstado ? context.fill() : ''; // fondoColor = true\n\tcuadrado.bordeEstado ? context.stroke() : ''; // bordeColor = true\n\tcontext.closePath();\n};\n// LINEA:\nconst utilsLinea_graficaLinea = (context, linea) => {\n\tcontext.lineWidth = linea.grosor;\n\tcontext.strokeStyle = linea.color;\n\tcontext.setLineDash([0, 0]);\n\n\tcontext.beginPath();\n\tcontext.moveTo(linea.x_ini, linea.y_ini);\n\tcontext.lineTo(linea.x_fin, linea.y_fin);\n\tcontext.stroke();\n\tcontext.closePath();\n};\n// TRIANGULO:\nconst utilsPlano_graficaTriangulo = (context, plano) => {\n\tlet x1 = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula;\n\tlet y1 = plano.y_ini + 2;\n\tlet x2 = x1 - 5;\n\tlet y2 = y1 + 5;\n\tlet x3 = x1 + 5;\n\tlet y3 = y1 + 5;\n\tcontext.beginPath();\n\tcontext.fillStyle = 'black';\n\tcontext.moveTo(x1, y1);\n\tcontext.lineTo(x2, y2);\n\tcontext.lineTo(x3, y3);\n\tcontext.closePath();\n\tcontext.stroke();\n\tcontext.fill();\n\n\tx1 = plano.x_fin - 2;\n\ty1 = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula;\n\tx2 = x1 - 5;\n\ty2 = y1 - 5;\n\tx3 = x1 - 5;\n\ty3 = y1 + 5;\n\tcontext.beginPath();\n\tcontext.fillStyle = 'black';\n\tcontext.moveTo(x1, y1);\n\tcontext.lineTo(x2, y2);\n\tcontext.lineTo(x3, y3);\n\tcontext.closePath();\n\tcontext.stroke();\n\tcontext.fill();\n};\nconst uPlano_graficaCuadradoConEjes = (context, plano) => {\n\tif (plano.visible) {\n\t\tcontext.strokeStyle = plano.bordeColor; // bordeColor\n\t\tcontext.fillStyle = plano.fondoColor; // fondoColor\n\t\tcontext.lineWidth = plano.bordeGrosor; // bordeGrosor\n\t\tcontext.setLineDash([0, 0]); // lineas no segmentadas\n\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(plano.x_ini, plano.y_ini); // (x_ini, y_ini)\n\t\tcontext.lineTo(plano.x_fin, plano.y_ini); // (x_fin, y_ini)\n\t\tcontext.lineTo(plano.x_fin, plano.y_fin); // (x_fin, y_fin)\n\t\tcontext.lineTo(plano.x_ini, plano.y_fin); // (x_ini, y_fin)\n\t\tcontext.lineTo(plano.x_ini, plano.y_ini); // (x_ini, y_ini)\n\n\t\tplano.fondoEstado ? context.fill() : ''; // fondoColor = true\n\t\tplano.bordeEstado ? context.stroke() : ''; // bordeColor = true\n\t\tcontext.closePath();\n\n\t\tutilsPlano_graficaCuadricula(context, plano);\n\t\tlet Linea = {\n\t\t\tid: 0,\n\t\t\tgrosor: 1,\n\t\t\tcolor: 'black',\n\t\t\tx_ini: 0,\n\t\t\ty_ini: 0,\n\t\t\tx_fin: 0,\n\t\t\ty_fin: 0,\n\t\t};\n\t\tLinea.x_ini = plano.x_ini + (plano.x_min * -1 + 1) * plano.width_cuadricula;\n\t\tLinea.x_fin = Linea.x_ini;\n\t\tLinea.y_ini = plano.y_ini;\n\t\tLinea.y_fin = plano.y_fin;\n\t\tutilsLinea_graficaLinea(context, Linea); // VERTICAL\n\t\tLinea.x_ini = plano.x_ini;\n\t\tLinea.x_fin = plano.x_fin;\n\t\tLinea.y_ini = plano.y_ini + (plano.y_max + 1) * plano.width_cuadricula;\n\t\tLinea.y_fin = Linea.y_ini;\n\t\tutilsLinea_graficaLinea(context, Linea); // HORIZONTAL\n\n\t\tutilsPlano_graficaTriangulo(context, plano);\n\t\t// NUMEROS:\n\t\tuPlano_graficaNumeros(context, plano);\n\t}\n};\n\n// GRAFICA PLANOS - HISORIA:\nconst uPlano_graficaCuadradoHistoria = (context, array) => {\n\tarray.forEach((element) => uPlano_graficaCuadrado(context, element));\n};\nconst uPlano_graficaCuadradoHistoriaConEjes = (context, array) => {\n\tarray.forEach((element) => uPlano_graficaCuadradoConEjes(context, element));\n};\n// PLANO: GET\nconst u_planoGet = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((plano) => {\n\t\tif (plano.visible) {\n\t\t\tplano.x_ini < x && x < plano.x_fin && plano.y_ini < y && y < plano.y_fin\n\t\t\t\t? (resp = plano)\n\t\t\t\t: '';\n\t\t}\n\t});\n\treturn resp;\n};\n// PLANO: GRAFICA PLANO\nconst u_planoGraficaH = (context, array) => {\n\tarray.forEach((element) => uPlano_graficaCuadradoConEjes(context, element));\n};\n// PLANO: DELETE POR ID\nconst u_planoDeleteById = (array, id) => {\n\tarray.forEach((element) => {\n\t\telement.id == id ? (element.visible = false) : '';\n\t});\n};\n// PLANO: CUADRADOS PEQUEÑOS REDIMENCIONAR PLANO\nconst u_planoGetPtsRedimencion = (cuadrado) => {\n\tlet width_p = 10;\n\tlet width_c = 2;\n\n\tlet x_ini = cuadrado.x_ini - width_c;\n\tlet y_ini = cuadrado.y_ini - width_c;\n\tlet x_fin = cuadrado.x_fin + width_c;\n\tlet y_fin = cuadrado.y_fin + width_c;\n\n\tlet vectorPuntosCuadrado = [\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_ini - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_ini + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_fin - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_fin + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_fin - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_fin + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_ini + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t];\n\treturn vectorPuntosCuadrado;\n};\n// PLANO: SEGMENTADO:\nconst u_planoSegmentado = (context, cuadrado) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 2; // borde grosor de linea\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet x_ini = cuadrado.x_ini - 2;\n\tlet y_ini = cuadrado.y_ini - 2;\n\tlet x_fin = cuadrado.x_fin + 2;\n\tlet y_fin = cuadrado.y_fin + 2;\n\n\tcontext.beginPath();\n\tcontext.moveTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(x_fin, y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(x_fin, y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(x_ini, y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.stroke();\n\tcontext.closePath();\n\n\tcontext.fillStyle = 'red'; // borde Color\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet array = u_planoGetPtsRedimencion(cuadrado);\n\tarray.forEach((elem) => {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y1); // (x_fin, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y2); // (x_fin, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y2); // (x_ini, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.fill();\n\t\tcontext.closePath();\n\t});\n};\n// PLANO: MOVER\nconst u_planoMover = (plano, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tplano.x_ini = plano.x_ini + recorrido_x;\n\tplano.y_ini = plano.y_ini + recorrido_y;\n\tplano.x_fin = plano.x_fin + recorrido_x;\n\tplano.y_fin = plano.y_fin + recorrido_y;\n\treturn plano;\n};\n// PLANO: UPDATE ZISE\nconst u_planoUpdateZise = (plano, mouse) => {\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tswitch (mouse.plano_pto) {\n\t\tcase 'top':\n\t\t\tplano.y_ini = plano.y_ini + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'right':\n\t\t\tplano.x_fin = plano.x_fin + recorrido_x;\n\t\t\tbreak;\n\t\tcase 'button':\n\t\t\tplano.y_fin = plano.y_fin + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'lefth':\n\t\t\tplano.x_ini = plano.x_ini + recorrido_x;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log('ocurrio un error');\n\t\t\tbreak;\n\t}\n\treturn plano;\n};\nexport {\n\tuPlano_graficaCuadrado,\n\tuPlano_graficaCuadradoConEjes,\n\tuPlano_graficaCuadradoHistoria,\n\tuPlano_graficaCuadradoHistoriaConEjes,\n\tu_planoGet,\n\tu_planoGraficaH,\n\tu_planoDeleteById,\n\tu_planoSegmentado,\n\tu_planoMover,\n\tu_planoGetPtsRedimencion,\n\tu_planoUpdateZise,\n};\n","// cuadrado segmentado:\nconst utilsCuadrado_graficaCuadradoSegmentado = (context, cuadrado) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.fillStyle = 'yellow'; // fondo Color\n\tcontext.lineWidth = 1; // borde grosor de linea\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\tlet width = cuadrado.x_fin - cuadrado.x_ini;\n\tlet height = cuadrado.y_fin - cuadrado.y_ini;\n\n\tcontext.beginPath();\n\tcontext.strokeRect(cuadrado.x_ini, cuadrado.y_ini, width, height);\n\tcontext.fillRect(cuadrado.x_ini, cuadrado.y_ini, width, height);\n\tcontext.closePath();\n};\n\n// limpia el canvas:\nconst utilsCuadrado_LimpiaCuadrado = (context, cuadrado) => {\n\tlet width = cuadrado.x_fin - cuadrado.x_ini;\n\tlet height = cuadrado.y_fin - cuadrado.y_ini;\n\tcontext.clearRect(cuadrado.x_ini, cuadrado.y_ini, width, height);\n};\n\n// cuadrado:\nconst utilsCuadrado_graficaCuadrado = (context, cuadrado) => {\n\tcontext.strokeStyle = cuadrado.bordeColor; // bordeColor\n\tcontext.fillStyle = cuadrado.fondoColor; // fondoColor\n\tcontext.lineWidth = cuadrado.bordeGrosor; // bordeGrosor\n\tcontext.setLineDash([0, 0]); // lineas no segmentadas\n\n\tcontext.beginPath();\n\tcontext.moveTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\n\tcuadrado.fondoEstado ? context.fill() : ''; // fondoColor = true\n\tcuadrado.bordeEstado ? context.stroke() : ''; // bordeColor = true\n\tcontext.closePath();\n};\n\n// GRAFICA CUADRADOS - HISORIA:\nconst utilsCuadrado_graficaCuadradoHistoria = (context, array) => {\n\tarray.forEach((element) => utilsCuadrado_graficaCuadrado(context, element));\n};\n\n// GRAFICA CUADRADOS - HISORIA MENOS EL I-ESIMO id:\nconst UC_graficaCuadradoHistoria_menosI = (context, array, i) => {\n\tarray.forEach((element) =>\n\t\telement.id != i ? utilsCuadrado_graficaCuadrado(context, element) : ''\n\t);\n};\n\n// CUADRADO: GET\nconst u_cuadradoGet = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((elem) => {\n\t\tif (elem.visible) {\n\t\t\telem.x_ini < x && x < elem.x_fin && elem.y_ini < y && y < elem.y_fin\n\t\t\t\t? (resp = elem)\n\t\t\t\t: '';\n\t\t}\n\t});\n\treturn resp;\n};\n// CUADRADO: DELETE POR ID\nconst u_cuadradoDeleteById = (array, cuadradoId) => {\n\tconsole.log('id:', cuadradoId);\n\tlet arrayNew = [];\n\tarray.forEach((element) => {\n\t\telement.id != cuadradoId ? arrayNew.push(element) : '';\n\t});\n\treturn arrayNew;\n};\n// CUADRADO: REPOSICIONA SI EL CUADRADO SE VOLTEA\nconst u_cuadradoValidaPosicion = (cuadrado) => {\n\tif (cuadrado.x_ini > cuadrado.x_fin) {\n\t\tlet aux = cuadrado.x_ini;\n\t\tcuadrado.x_ini = cuadrado.x_fin;\n\t\tcuadrado.x_fin = aux;\n\t}\n\tif (cuadrado.y_ini > cuadrado.y_fin) {\n\t\tlet aux = cuadrado.y_ini;\n\t\tcuadrado.y_ini = cuadrado.y_fin;\n\t\tcuadrado.y_fin = aux;\n\t}\n\treturn cuadrado;\n};\n// CUADRADO: GRAFICA\nconst u_cuadradoGrafica = (context, cuadrado) => {\n\tcontext.strokeStyle = cuadrado.bordeColor; // bordeColor\n\tcontext.fillStyle = cuadrado.fondoColor; // fondoColor\n\tcontext.lineWidth = cuadrado.bordeGrosor; // bordeGrosor\n\tcontext.setLineDash([0, 0]); // lineas no segmentadas\n\n\tcontext.beginPath();\n\tcontext.moveTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(cuadrado.x_fin, cuadrado.y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(cuadrado.x_ini, cuadrado.y_ini); // (x_ini, y_ini)\n\n\tcuadrado.fondoEstado ? context.fill() : ''; // fondoColor = true\n\tcuadrado.bordeEstado ? context.stroke() : ''; // bordeColor = true\n\tcontext.closePath();\n};\nconst u_cuadradoGraficaH = (context, array) => {\n\tarray.forEach((element) => u_cuadradoGrafica(context, element));\n};\n\n// CUADRADO: MOVER\nconst u_cuadradoMover = (cuadrado, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tcuadrado.x_ini = cuadrado.x_ini + recorrido_x;\n\tcuadrado.y_ini = cuadrado.y_ini + recorrido_y;\n\tcuadrado.x_fin = cuadrado.x_fin + recorrido_x;\n\tcuadrado.y_fin = cuadrado.y_fin + recorrido_y;\n\treturn cuadrado;\n};\n// CUADRADOS PEQUEÑOS PAR UPDATE DEL CUADRADO:\nconst u_cuadradoGetPtsRedimencion = (cuadrado) => {\n\tlet width_p = 10;\n\tlet width_c = 2;\n\n\tlet x_ini = cuadrado.x_ini - width_c;\n\tlet y_ini = cuadrado.y_ini - width_c;\n\tlet x_fin = cuadrado.x_fin + width_c;\n\tlet y_fin = cuadrado.y_fin + width_c;\n\n\tlet vectorPuntosCuadrado = [\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_ini - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_ini + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_fin - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_fin + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini + (x_fin - x_ini) / width_c - width_p,\n\t\t\ty1: y_fin - width_p,\n\t\t\tx2: x_ini + (x_fin - x_ini) / width_c + width_p,\n\t\t\ty2: y_fin + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_ini - width_p,\n\t\t\ty1: y_ini + (y_fin - y_ini) / width_c - width_p,\n\t\t\tx2: x_ini + width_p,\n\t\t\ty2: y_ini + (y_fin - y_ini) / width_c + width_p,\n\t\t},\n\t];\n\treturn vectorPuntosCuadrado;\n};\n// CUADRADO: GRAFICA BORDE SEGMENTADO\nconst u_cuadradoSegmentado = (context, cuadrado) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 2; // borde grosor de linea\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet x_ini = cuadrado.x_ini - 2;\n\tlet y_ini = cuadrado.y_ini - 2;\n\tlet x_fin = cuadrado.x_fin + 2;\n\tlet y_fin = cuadrado.y_fin + 2;\n\n\tcontext.beginPath();\n\tcontext.moveTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.lineTo(x_fin, y_ini); // (x_fin, y_ini)\n\tcontext.lineTo(x_fin, y_fin); // (x_fin, y_fin)\n\tcontext.lineTo(x_ini, y_fin); // (x_ini, y_fin)\n\tcontext.lineTo(x_ini, y_ini); // (x_ini, y_ini)\n\tcontext.stroke();\n\tcontext.closePath();\n\n\tcontext.fillStyle = 'red'; // borde Color\n\tcontext.setLineDash([14, 4]); // lineas segmentadas\n\n\tlet array = u_cuadradoGetPtsRedimencion(cuadrado);\n\tarray.forEach((elem) => {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y1); // (x_fin, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y2); // (x_fin, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y2); // (x_ini, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.fill();\n\t\tcontext.closePath();\n\t});\n};\n// UPDATE ZISE CUADRADO SELECT:\nconst u_cuadradoUpdateZise = (cuadrado, mouse) => {\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tswitch (mouse.cuadrado_pto) {\n\t\tcase 'top':\n\t\t\tcuadrado.y_ini = cuadrado.y_ini + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'right':\n\t\t\tcuadrado.x_fin = cuadrado.x_fin + recorrido_x;\n\t\t\tbreak;\n\t\tcase 'button':\n\t\t\tcuadrado.y_fin = cuadrado.y_fin + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'lefth':\n\t\t\tcuadrado.x_ini = cuadrado.x_ini + recorrido_x;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log('ocurrio un error');\n\t\t\tbreak;\n\t}\n\treturn cuadrado;\n};\nexport {\n\tutilsCuadrado_graficaCuadrado,\n\tutilsCuadrado_graficaCuadradoHistoria,\n\tutilsCuadrado_graficaCuadradoSegmentado,\n\tutilsCuadrado_LimpiaCuadrado,\n\tUC_graficaCuadradoHistoria_menosI,\n\tu_cuadradoGet,\n\tu_cuadradoDeleteById,\n\tu_cuadradoGraficaH,\n\tu_cuadradoValidaPosicion,\n\tu_cuadradoGrafica,\n\tu_cuadradoMover,\n\tu_cuadradoSegmentado,\n\tu_cuadradoGetPtsRedimencion,\n\tu_cuadradoUpdateZise,\n};\n","// LINEA:\nconst utilsLinea_graficaLinea = (context, linea) => {\n\tif (linea.visible) {\n\t\tcontext.lineWidth = linea.grosor;\n\t\tcontext.strokeStyle = linea.color;\n\t\tcontext.setLineDash([0, 0]);\n\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(linea.x_ini, linea.y_ini);\n\t\tcontext.lineTo(linea.x_fin, linea.y_fin);\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t}\n};\n\n// LAPIZ - HISORIA:\nconst utilsLinea_graficaLineaHistoria = (context, array) => {\n\tarray.forEach((element) => {\n\t\tutilsLinea_graficaLinea(context, element);\n\t});\n};\n// DISTANCIA ENTRE 2 PUNTOS\nconst distancia_p1_p2 = (x1, y1, x2, y2) => {\n\tlet dp = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\treturn dp;\n};\n// LINEA: GET\nconst u_lineaGet = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((elem) => {\n\t\tif (elem.visible) {\n\t\t\tlet x1 = elem.x_ini;\n\t\t\tlet y1 = elem.y_ini;\n\t\t\tlet x2 = elem.x_fin;\n\t\t\tlet y2 = elem.y_fin;\n\t\t\t// parte 1:\n\t\t\tlet a = y1 - y2;\n\t\t\tlet b = x2 - x1;\n\t\t\tlet c = y1 * (x1 - x2) - x1 * (y1 - y2);\n\t\t\tlet dnum = a * x + b * y + c;\n\t\t\tdnum < 0 ? (dnum = dnum * -1) : '';\n\t\t\tlet dden = Math.sqrt(a * a + b * b);\n\t\t\tlet d = dnum / dden;\n\t\t\t// parte 2:\n\t\t\tlet px = x1 + (x2 - x1) / 2;\n\t\t\tlet py = y1 + (y2 - y1) / 2;\n\t\t\tlet dis_valido = distancia_p1_p2(px, py, x2, y2);\n\t\t\tlet dis = distancia_p1_p2(px, py, x, y);\n\t\t\t// sol:\n\t\t\tif (d < 20 && dis < dis_valido) resp = elem;\n\t\t}\n\t});\n\treturn resp;\n};\n// LINEA: GRAFICA HISOTORIA\nconst u_lineaGraficaH = (context, array) => {\n\tarray.forEach((element) => {\n\t\tutilsLinea_graficaLinea(context, element);\n\t});\n};\n// LINEA: DELETE POR ID\nconst u_lineaDeleteById = (array, linea_id) => {\n\tarray.forEach((element) => {\n\t\telement.id == linea_id ? (element.visible = false) : '';\n\t});\n\treturn array;\n};\n// LINEA: GRAFICA\nconst u_lineaGrafica = (context, linea) => {\n\tif (linea.visible) {\n\t\tcontext.lineWidth = linea.grosor;\n\t\tcontext.strokeStyle = linea.color;\n\t\tcontext.setLineDash([0, 0]);\n\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(linea.x_ini, linea.y_ini);\n\t\tcontext.lineTo(linea.x_fin, linea.y_fin);\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t}\n};\n// CUADRADOS PARA UPDATE LINEA:\nconst u_lineaGetPtsRedimencion = (linea) => {\n\tlet width_p = 10;\n\n\tlet x_ini = linea.x_ini;\n\tlet y_ini = linea.y_ini;\n\tlet x_fin = linea.x_fin;\n\tlet y_fin = linea.y_fin;\n\n\tlet vectorPuntosLinea = [\n\t\t{\n\t\t\tx1: x_ini - width_p,\n\t\t\ty1: y_ini - width_p,\n\t\t\tx2: x_ini + width_p,\n\t\t\ty2: y_ini + width_p,\n\t\t},\n\t\t{\n\t\t\tx1: x_fin - width_p,\n\t\t\ty1: y_fin - width_p,\n\t\t\tx2: x_fin + width_p,\n\t\t\ty2: y_fin + width_p,\n\t\t},\n\t];\n\treturn vectorPuntosLinea;\n};\n// LINEA SEGMENTADO:\nconst u_lineaSegmentado = (context, linea) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 1; // borde grosor de linea\n\tcontext.setLineDash([10, 4]); // lineas segmentadas\n\tlet x_ini = linea.x_ini;\n\tlet y_ini = linea.y_ini;\n\tlet x_fin = linea.x_fin;\n\tlet y_fin = linea.y_fin;\n\tlet inc = 20;\n\t// ANGULO DE INCLINACION:\n\t// P1(X1,Y1) Y P2(X2,Y2)\n\t// ANGULO = TAN-1(m), M = PENDIENTE.\n\t// m = (y2-y1)/(x2-x1)\n\tlet x1 = linea.x_ini;\n\tlet y1 = linea.y_ini;\n\tlet x2 = linea.x_fin;\n\tlet y2 = linea.y_fin;\n\tlet m = (y2 - y1) / (x2 - x1);\n\tlet alfa = Math.atan(m);\n\n\tcontext.beginPath();\n\tif ((0.5 < alfa && alfa < 2) || (-2 < alfa && alfa < -0.5)) {\n\t\tcontext.moveTo(x_ini - inc, y_ini);\n\t\tcontext.lineTo(x_ini + inc, y_ini);\n\t\tcontext.lineTo(x_fin + inc, y_fin);\n\t\tcontext.lineTo(x_fin - inc, y_fin);\n\t\tcontext.lineTo(x_ini - inc, y_ini);\n\t} else {\n\t\tcontext.moveTo(x_ini, y_ini - inc);\n\t\tcontext.lineTo(x_fin, y_fin - inc);\n\t\tcontext.lineTo(x_fin, y_fin + inc);\n\t\tcontext.lineTo(x_ini, y_ini + inc);\n\t\tcontext.lineTo(x_ini, y_ini) - inc;\n\t}\n\tcontext.stroke();\n\tcontext.closePath();\n\n\tcontext.fillStyle = 'red'; // borde Color\n\tcontext.setLineDash([10, 4]); // lineas segmentadas\n\n\tlet array = u_lineaGetPtsRedimencion(linea);\n\tarray.forEach((elem) => {\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y1); // (x_fin, y_ini)\n\t\tcontext.lineTo(elem.x2, elem.y2); // (x_fin, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y2); // (x_ini, y_fin)\n\t\tcontext.lineTo(elem.x1, elem.y1); // (x_ini, y_ini)\n\t\tcontext.fill();\n\t\tcontext.closePath();\n\t});\n};\n// LINEA: MOVER\nconst u_lineaMover = (linea, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tlinea.x_ini = linea.x_ini + recorrido_x;\n\tlinea.y_ini = linea.y_ini + recorrido_y;\n\tlinea.x_fin = linea.x_fin + recorrido_x;\n\tlinea.y_fin = linea.y_fin + recorrido_y;\n\treturn linea;\n};\n// LINEA: UPDATE ZISE\nconst u_lineaUpdateZise = (linea, mouse) => {\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tswitch (mouse.linea_pto) {\n\t\tcase 'ini':\n\t\t\tlinea.x_ini = linea.x_ini + recorrido_x;\n\t\t\tlinea.y_ini = linea.y_ini + recorrido_y;\n\t\t\tbreak;\n\t\tcase 'fin':\n\t\t\tlinea.x_fin = linea.x_fin + recorrido_x;\n\t\t\tlinea.y_fin = linea.y_fin + recorrido_y;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log('ocurrio un error');\n\t\t\tbreak;\n\t}\n\treturn linea;\n};\n\nexport {\n\tutilsLinea_graficaLinea,\n\tutilsLinea_graficaLineaHistoria,\n\tu_lineaDeleteById,\n\tu_lineaGraficaH,\n\tu_lineaGet,\n\tu_lineaGrafica,\n\tu_lineaGetPtsRedimencion,\n\tu_lineaSegmentado,\n\tu_lineaMover,\n\tu_lineaUpdateZise,\n};\n","// LAPIZ: GRAFICA\nconst utilsLapiz_graficaLapiz = (context, lapiz) => {\n\tif (lapiz.visible) {\n\t\tcontext.lineWidth = lapiz.grosor;\n\t\tcontext.strokeStyle = lapiz.color;\n\t\tcontext.setLineDash([0, 0]);\n\t\tcontext.beginPath();\n\t\tlet sw = true;\n\t\tlapiz.historiaLinea.forEach((element) => {\n\t\t\tsw ? context.moveTo(element[0], element[1]) : '';\n\t\t\tsw = false;\n\t\t\tcontext.lineTo(element[2], element[3]);\n\t\t});\n\t\tcontext.stroke();\n\t\tcontext.closePath();\n\t}\n};\n// LAPIZ: GRAFICA HISORIA:\nconst utilsLapiz_graficaLapizHistoria = (context, array) => {\n\tarray.forEach((element) => utilsLapiz_graficaLapiz(context, element));\n};\n\n// LAPIZ: GET\nconst u_lapizGet = (array, x, y) => {\n\tlet resp = '';\n\tarray.forEach((lapiz) => {\n\t\tif (lapiz.visible) {\n\t\t\tlet x1 = lapiz.x_min;\n\t\t\tlet y1 = lapiz.y_min;\n\t\t\tlet x2 = lapiz.x_may;\n\t\t\tlet y2 = lapiz.y_may;\n\t\t\tif (x1 - 20 < x && x < x2 + 20 && y1 - 20 < y && y < y2 + 20) {\n\t\t\t\tresp = lapiz;\n\t\t\t}\n\t\t}\n\t});\n\treturn resp;\n};\n// LAPIZ: ELIMINA LAPIZ POR ID\nconst u_lapizDeleteById = (array, lapiz_id) => {\n\tarray.forEach((element) => {\n\t\telement.id == lapiz_id ? (element.visible = false) : '';\n\t});\n};\nconst u_lapizGraficaH = (context, array) => {\n\tarray.forEach((element) => utilsLapiz_graficaLapiz(context, element));\n};\n// LAPIZ: GRAFICA LINEA\nconst u_lapizGraficaLinea = (context, linea, lapiz) => {\n\tcontext.strokeStyle = linea.color;\n\tcontext.lineWidth = linea.grosor;\n\tcontext.setLineDash([0, 0]);\n\tcontext.beginPath();\n\tcontext.moveTo(linea.x_ini, linea.y_ini);\n\tcontext.lineTo(linea.x_fin, linea.y_fin);\n\tcontext.stroke();\n\tcontext.closePath();\n\t// busca cotas minimas X:\n\tlinea.x_ini < lapiz.x_min ? (lapiz.x_min = linea.x_ini) : '';\n\tlinea.x_fin < lapiz.x_min ? (lapiz.x_min = linea.x_fin) : '';\n\t// busca cotas maximas X:\n\tlinea.x_ini > lapiz.x_may ? (lapiz.x_may = linea.x_ini) : '';\n\tlinea.x_fin > lapiz.x_may ? (lapiz.x_may = linea.x_fin) : '';\n\t// busca cotas minimas Y:\n\tlinea.y_ini < lapiz.y_min ? (lapiz.y_min = linea.y_ini) : '';\n\tlinea.y_fin < lapiz.y_min ? (lapiz.y_min = linea.y_fin) : '';\n\t// busca cotas maximas Y:\n\tlinea.y_ini > lapiz.y_may ? (lapiz.y_may = linea.y_ini) : '';\n\tlinea.y_fin > lapiz.y_may ? (lapiz.y_may = linea.y_fin) : '';\n\treturn linea;\n};\n// LAPIZ: SEGMENTADO:\nconst u_lapizSegmentado = (context, lapiz) => {\n\tcontext.strokeStyle = 'red'; // borde Color\n\tcontext.lineWidth = 1; // borde grosor de linea\n\tcontext.setLineDash([10, 4]); // lineas segmentadas\n\n\tcontext.beginPath();\n\tcontext.moveTo(lapiz.x_min - 20, lapiz.y_min - 20); // (x_ini, y_ini)\n\tcontext.lineTo(lapiz.x_may + 20, lapiz.y_min - 20); // (x_fin, y_ini)\n\tcontext.lineTo(lapiz.x_may + 20, lapiz.y_may + 20); // (x_fin, y_fin)\n\tcontext.lineTo(lapiz.x_min - 20, lapiz.y_may + 20); // (x_ini, y_fin)\n\tcontext.lineTo(lapiz.x_min - 20, lapiz.y_min - 20); // (x_ini, y_ini)\n\tcontext.stroke();\n\tcontext.closePath();\n};\n// MUEVE LAPIZ SELECT:\nconst u_lapizMover = (lapiz, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\tlapiz.historiaLinea.forEach((linea) => {\n\t\tlinea[0] = linea[0] + recorrido_x;\n\t\tlinea[1] = linea[1] + recorrido_y;\n\t\tlinea[2] = linea[2] + recorrido_x;\n\t\tlinea[3] = linea[3] + recorrido_y;\n\t});\n\tlapiz.x_min = lapiz.x_min + recorrido_x;\n\tlapiz.x_may = lapiz.x_may + recorrido_x;\n\tlapiz.y_min = lapiz.y_min + recorrido_y;\n\tlapiz.y_may = lapiz.y_may + recorrido_y;\n\treturn lapiz;\n};\n\nexport {\n\tutilsLapiz_graficaLapiz,\n\tutilsLapiz_graficaLapizHistoria,\n\tu_lapizGet,\n\tu_lapizDeleteById,\n\tu_lapizGraficaH,\n\tu_lapizGraficaLinea,\n\tu_lapizSegmentado,\n\tu_lapizMover,\n};\n","// TEXTO: GRAFICA\nconst u_textGrafica = (context, obj) => {\n\tcontext.fillStyle = obj.color;\n\tcontext.font = `${obj.tamano}px arial`;\n\tcontext.beginPath();\n\tcontext.fillText(obj.texto, obj.x_ini, obj.y_ini);\n\tcontext.stroke(); // quit\n\tcontext.closePath();\n};\n// TEXTO: GRAFICA HISORIA\nconst u_textGraficaH = (context, array) => {\n\tarray.forEach((element) => {\n\t\tif (element.visible) {\n\t\t\tu_textGrafica(context, element);\n\t\t}\n\t});\n};\n// TEXTO: GET\nconst u_getText = (array, x, y) => {\n\tconsole.log(array, x, y);\n\tlet resp = '';\n\tarray.forEach((texto) => {\n\t\tlet x1 = texto.x_ini;\n\t\tlet x2 = x1 + 100;\n\t\tlet y1 = texto.y_ini - 50;\n\t\tlet y2 = texto.y_ini;\n\t\tif (texto.visible) {\n\t\t\tx1 < x && x < x2 && y1 < y && y < y2 ? (resp = texto) : '';\n\t\t}\n\t});\n\tconsole.log('resp:', resp);\n\treturn resp;\n};\n// TEXTO: MOVER\nconst u_textMover = (texto, mouse) => {\n\tconst recorrido_x = mouse.pos.x - mouse.pos_prev.x;\n\tconst recorrido_y = mouse.pos.y - mouse.pos_prev.y;\n\ttexto.x_ini = texto.x_ini + recorrido_x;\n\ttexto.y_ini = texto.y_ini + recorrido_y;\n\treturn texto;\n};\n// TEXTO: DELETE POR ID\nconst u_textDeleteById = (array, id) => {\n\tarray.forEach((element) => {\n\t\telement.id == id ? (element.visible = false) : '';\n\t});\n};\nexport {\n\tu_textGraficaH,\n\tu_textGrafica,\n\tu_getText,\n\tu_textMover,\n\tu_textDeleteById,\n};\n","import { useContext, useEffect } from 'react';\n\n// CONTEXT:\nimport AppContextMover from '../context/AppContextMover';\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport {\n\tu_planoGraficaH,\n\tu_planoGet,\n\tu_planoSegmentado,\n\tu_planoMover,\n\tu_planoGetPtsRedimencion,\n\tu_planoUpdateZise,\n} from '../utils/UtilsPlano';\nimport {\n\tu_cuadradoGraficaH,\n\tu_cuadradoGet,\n\tu_cuadradoMover,\n\tu_cuadradoSegmentado,\n\tu_cuadradoGetPtsRedimencion,\n\tu_cuadradoUpdateZise,\n} from '../utils/UtilsCuadrado';\nimport {\n\tu_lineaGraficaH,\n\tu_lineaGet,\n\tu_lineaSegmentado,\n\tu_lineaMover,\n\tu_lineaGetPtsRedimencion,\n\tu_lineaUpdateZise,\n} from '../utils/UtilsLinea';\nimport { u_lapizGraficaH } from '../utils/UtilsLapiz';\nimport {} from '../utils/UtilsMover';\nimport {\n\tu_lapizGet,\n\tu_lapizSegmentado,\n\tu_lapizMover,\n} from '../utils/UtilsLapiz';\nimport { u_textGraficaH, u_getText, u_textMover } from '../utils/UtilsText';\n\nconst PaintMover = (id_canvas) => {\n\t// useContext\n\tconst { stateMover } = useContext(AppContextMover);\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\tconst { stateText } = useContext(AppContextText);\n\n\t// LOGICA:\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tu_planoGraficaH(context, statePlano.historiaPlano); // plano cartesiano\n\t\tu_cuadradoGraficaH(context, stateCuadrado.historiaCuadrado);\n\t\tu_lineaGraficaH(context, stateLinea.historiaLinea);\n\t\tu_lapizGraficaH(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t\tu_textGraficaH(context, stateText.historiaText);\n\t};\n\tlet canvas = '';\n\tlet context = '';\n\tlet cuadradoSelect = {};\n\tlet lineaSelect = {};\n\tlet lapizSelect = {};\n\tlet planoSelect = {};\n\tlet textSelect = {};\n\n\tconst mouse = {\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t\tclick: false,\n\t\t// CUADRADO\n\t\tmover_cuadrado: false,\n\t\tseleccionar_cuadrado_pts: false,\n\t\tcuadrado_punto_mover: false,\n\t\tcuadrado_pto: '',\n\t\t// LINEA\n\t\tmover_linea: false,\n\t\tseleccionar_linea_pts: false,\n\t\tlinea_punto_mover: false,\n\t\tlinea_pto: '',\n\t\t// LAPIZ\n\t\tactive: true,\n\t\tmover_lapiz: false,\n\t\t// PLANO:\n\t\tplano_mover: false,\n\t\tplano_seleccionar_pts: false,\n\t\tplano_pto_mover: false,\n\t\tplano_pto: '',\n\t\t// TEXTO\n\t\ttexo_active: true,\n\t\ttexto_mover: false,\n\t};\n\tconst canvasMoverDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\tconst x_real = x - canvasMoverDatos.left;\n\t\tconst y_real = y - canvasMoverDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\t};\n\tconst busca_cuadrado_ptoClick = (x, y, array) => {\n\t\tlet resp = '';\n\t\tif (\n\t\t\tarray[0].x1 < x &&\n\t\t\tx < array[0].x2 &&\n\t\t\tarray[0].y1 < y &&\n\t\t\ty < array[0].y2\n\t\t)\n\t\t\tresp = 'top';\n\t\telse if (\n\t\t\tarray[1].x1 < x &&\n\t\t\tx < array[1].x2 &&\n\t\t\tarray[1].y1 < y &&\n\t\t\ty < array[1].y2\n\t\t)\n\t\t\tresp = 'right';\n\t\telse if (\n\t\t\tarray[2].x1 < x &&\n\t\t\tx < array[2].x2 &&\n\t\t\tarray[2].y1 < y &&\n\t\t\ty < array[2].y2\n\t\t)\n\t\t\tresp = 'button';\n\t\telse if (\n\t\t\tarray[3].x1 < x &&\n\t\t\tx < array[3].x2 &&\n\t\t\tarray[3].y1 < y &&\n\t\t\ty < array[3].y2\n\t\t)\n\t\t\tresp = 'lefth';\n\t\treturn resp;\n\t};\n\tconst busca_linea_ptoClick = (x, y, array) => {\n\t\tlet resp = '';\n\t\tif (\n\t\t\tarray[0].x1 < x &&\n\t\t\tx < array[0].x2 &&\n\t\t\tarray[0].y1 < y &&\n\t\t\ty < array[0].y2\n\t\t)\n\t\t\tresp = 'ini';\n\t\telse if (\n\t\t\tarray[1].x1 < x &&\n\t\t\tx < array[1].x2 &&\n\t\t\tarray[1].y1 < y &&\n\t\t\ty < array[1].y2\n\t\t)\n\t\t\tresp = 'fin';\n\t\treturn resp;\n\t};\n\tconst clickSobreLapiz = () => {\n\t\tlapizSelect || cuadradoSelect || lineaSelect ? paint() : '';\n\t\tlapizSelect = u_lapizGet(\n\t\t\tstateLapiz.historiaLapiz,\n\t\t\tmouse.pos.x,\n\t\t\tmouse.pos.y\n\t\t);\n\t\tif (lapizSelect) {\n\t\t\tu_lapizSegmentado(context, lapizSelect);\n\t\t\tmouse.mover_lapiz = true;\n\t\t}\n\t};\n\t// 1:\n\tconst mouseDownMover = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\n\t\t// LAPIZ:\n\t\tclickSobreLapiz();\n\t\tif (!lapizSelect) {\n\t\t\t// no se hizo click sobre el lapiz.\n\t\t\t// LINEA:\n\t\t\tif (mouse.seleccionar_linea_pts) {\n\t\t\t\t// selecciono previamente una linea\n\t\t\t\tlet arrayPts = u_lineaGetPtsRedimencion(lineaSelect);\n\t\t\t\tmouse.linea_pto = busca_linea_ptoClick(\n\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\tmouse.pos.y,\n\t\t\t\t\tarrayPts\n\t\t\t\t);\n\t\t\t\tif (mouse.linea_pto != '') {\n\t\t\t\t\t// hizo click sobre uno de los puntos de la linea\n\t\t\t\t\tmouse.linea_punto_mover = true;\n\t\t\t\t\tmouse.mover_linea = false;\n\t\t\t\t} else {\n\t\t\t\t\t// no hizo click sobre los puntos de la linea\n\t\t\t\t\tmouse.linea_punto_mover = false;\n\t\t\t\t\tmouse.mover_linea = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!mouse.linea_punto_mover) {\n\t\t\t\t// no tiene seleccionado una linea previamente\n\t\t\t\tlineaSelect = u_lineaGet(\n\t\t\t\t\tstateLinea.historiaLinea,\n\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\tmouse.pos.y\n\t\t\t\t);\n\t\t\t\tif (lineaSelect) {\n\t\t\t\t\t// selecciono una linea\n\t\t\t\t\tmouse.seleccionar_linea_pts = true;\n\t\t\t\t\tmouse.mover_linea = true;\n\t\t\t\t\tmouse.linea_punto_mover = false;\n\t\t\t\t\tu_lineaSegmentado(context, lineaSelect);\n\t\t\t\t} else {\n\t\t\t\t\t// no selecciono una linea\n\t\t\t\t\tmouse.seleccionar_linea_pts = false;\n\t\t\t\t\tmouse.mover_linea = false;\n\t\t\t\t\tmouse.linea_punto_mover = false;\n\t\t\t\t\t//paint();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!lineaSelect) {\n\t\t\t\t// no hizo click sobre una linea\n\t\t\t\t// CUADRADO:\n\t\t\t\tif (mouse.seleccionar_cuadrado_pts) {\n\t\t\t\t\t// ya tiene seleccionado un cuadrado previamente\n\t\t\t\t\tlet arrayPts = u_cuadradoGetPtsRedimencion(cuadradoSelect);\n\t\t\t\t\tmouse.cuadrado_pto = busca_cuadrado_ptoClick(\n\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\tmouse.pos.y,\n\t\t\t\t\t\tarrayPts\n\t\t\t\t\t);\n\t\t\t\t\tif (mouse.cuadrado_pto != '') {\n\t\t\t\t\t\tconsole.log(mouse.cuadrado_pto);\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = true; // se movera el lado seleccionado\n\t\t\t\t\t\tmouse.mover_cuadrado = false; // no se movera el cuadrado\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = false; // move_size\n\t\t\t\t\t\tmouse.mover_cuadrado = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!mouse.cuadrado_punto_mover) {\n\t\t\t\t\t// no tiene seleccionando un cuadrado aun\n\t\t\t\t\tcuadradoSelect = u_cuadradoGet(\n\t\t\t\t\t\tstateCuadrado.historiaCuadrado,\n\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\tmouse.pos.y\n\t\t\t\t\t);\n\t\t\t\t\tif (cuadradoSelect) {\n\t\t\t\t\t\t// encontro un cuadrado donde hizo click\n\t\t\t\t\t\tmouse.seleccionar_cuadrado_pts = true;\n\t\t\t\t\t\tmouse.mover_cuadrado = true;\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = false;\n\t\t\t\t\t\tu_cuadradoSegmentado(context, cuadradoSelect);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// no encontro un cuadrado donde hizo click\n\t\t\t\t\t\tmouse.seleccionar_cuadrado_pts = false;\n\t\t\t\t\t\tmouse.mover_cuadrado = false;\n\t\t\t\t\t\tmouse.cuadrado_punto_mover = false;\n\t\t\t\t\t\t//paint();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!cuadradoSelect) {\n\t\t\t\t\t// no hizo click sobre un cuadrado.\n\t\t\t\t\t// PLANO:\n\t\t\t\t\tif (mouse.plano_seleccionar_pts) {\n\t\t\t\t\t\tconsole.log('selection plano preview');\n\t\t\t\t\t\t// ya tiene seleccionado un plano previamente\n\t\t\t\t\t\tlet arrayPts = u_planoGetPtsRedimencion(planoSelect);\n\t\t\t\t\t\tmouse.plano_pto = busca_cuadrado_ptoClick(\n\t\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\t\tmouse.pos.y,\n\t\t\t\t\t\t\tarrayPts\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (mouse.plano_pto != '') {\n\t\t\t\t\t\t\tconsole.log(mouse.plano_pto);\n\t\t\t\t\t\t\tmouse.plano_pto_mover = true; // se movera el lado seleccionado\n\t\t\t\t\t\t\tmouse.plano_mover = false; // no se movera el cuadrado\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmouse.plano_pto_mover = false; // move_size\n\t\t\t\t\t\t\tmouse.plano_mover = false;\n\t\t\t\t\t\t\tmouse.plano_seleccionar_pts = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!mouse.plano_seleccionar_pts) {\n\t\t\t\t\t\t// no tiene seleccionado un plano aun\n\t\t\t\t\t\tplanoSelect = u_planoGet(\n\t\t\t\t\t\t\tstatePlano.historiaPlano,\n\t\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\t\tmouse.pos.y\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (planoSelect) {\n\t\t\t\t\t\t\tconsole.log('selection plano');\n\t\t\t\t\t\t\t// hizo click sobre un plano\n\t\t\t\t\t\t\tmouse.plano_seleccionar_pts = true;\n\t\t\t\t\t\t\tmouse.plano_mover = true;\n\t\t\t\t\t\t\tmouse.plano_pto_mover = false;\n\t\t\t\t\t\t\tu_planoSegmentado(context, planoSelect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// TEXTO\n\t\t\t\t\t\t\tconsole.log('busca texto');\n\t\t\t\t\t\t\ttextSelect = u_getText(\n\t\t\t\t\t\t\t\tstateText.historiaText,\n\t\t\t\t\t\t\t\tmouse.pos.x,\n\t\t\t\t\t\t\t\tmouse.pos.y\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (textSelect) {\n\t\t\t\t\t\t\t\tconsole.log('selection texto');\n\t\t\t\t\t\t\t\t// hizo click sobre un plano\n\t\t\t\t\t\t\t\tmouse.texto_mover = true;\n\t\t\t\t\t\t\t\t//mouse.plano_pto_mover = false;\n\t\t\t\t\t\t\t\t//u_planoSegmentado(context, planoSelect);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!lapizSelect && !lineaSelect && !cuadradoSelect && !planoSelect) {\n\t\t\tconsole.log('paint');\n\t\t\tpaint();\n\t\t}\n\t};\n\t// 2:\n\tconst mouseMoveMover = (e) => {\n\t\tif (mouse.click) {\n\t\t\tif (mouse.mover_cuadrado) {\n\t\t\t\t// CUADRADO:\n\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\tcuadradoSelect = u_cuadradoMover(cuadradoSelect, mouse);\n\t\t\t\tpaint();\n\t\t\t\tu_cuadradoSegmentado(context, cuadradoSelect);\n\t\t\t} else {\n\t\t\t\t// CUADRADO PTOS:\n\t\t\t\tif (mouse.cuadrado_punto_mover) {\n\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\tcuadradoSelect = u_cuadradoUpdateZise(cuadradoSelect, mouse);\n\t\t\t\t\tpaint();\n\t\t\t\t\tu_cuadradoSegmentado(context, cuadradoSelect);\n\t\t\t\t} else {\n\t\t\t\t\t// LINEA:\n\t\t\t\t\tif (mouse.mover_linea) {\n\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\tlineaSelect = u_lineaMover(lineaSelect, mouse);\n\t\t\t\t\t\tpaint();\n\t\t\t\t\t\tu_lineaSegmentado(context, lineaSelect);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// LINEA PTOS:\n\t\t\t\t\t\tif (mouse.linea_punto_mover) {\n\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\tlineaSelect = u_lineaUpdateZise(lineaSelect, mouse);\n\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\tu_lineaSegmentado(context, lineaSelect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// LAPIZ:\n\t\t\t\t\t\t\tif (mouse.mover_lapiz) {\n\t\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\t\tlapizSelect = u_lapizMover(lapizSelect, mouse);\n\t\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\t\tu_lapizSegmentado(context, lapizSelect);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// PLANO:\n\t\t\t\t\t\t\t\tif (mouse.plano_mover) {\n\t\t\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\t\t\tplanoSelect = u_planoMover(planoSelect, mouse);\n\t\t\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\t\t\tu_planoSegmentado(context, planoSelect);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// PLANO PTOS:\n\t\t\t\t\t\t\t\t\tif (mouse.plano_pto_mover) {\n\t\t\t\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\t\t\t\tplanoSelect = u_planoUpdateZise(planoSelect, mouse);\n\t\t\t\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\t\t\t\tu_planoSegmentado(context, planoSelect);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// TEXTO\n\t\t\t\t\t\t\t\t\t\tif (mouse.texto_mover) {\n\t\t\t\t\t\t\t\t\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t\t\t\t\t\t\t\t\ttextSelect = u_textMover(textSelect, mouse);\n\t\t\t\t\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t// 3:\n\tconst mouseUpMover = (e) => {\n\t\tif (mouse.cuadrado_punto_mover) {\n\t\t\tif (cuadradoSelect.x_fin < cuadradoSelect.x_ini) {\n\t\t\t\tlet aux = cuadradoSelect.x_fin;\n\t\t\t\tcuadradoSelect.x_fin = cuadradoSelect.x_ini;\n\t\t\t\tcuadradoSelect.x_ini = aux;\n\t\t\t}\n\t\t\tif (cuadradoSelect.y_fin < cuadradoSelect.y_ini) {\n\t\t\t\tlet aux = cuadradoSelect.y_fin;\n\t\t\t\tcuadradoSelect.y_fin = cuadradoSelect.y_ini;\n\t\t\t\tcuadradoSelect.y_ini = aux;\n\t\t\t}\n\t\t}\n\t\tmouse.click = false;\n\t\t// CUADRADO:\n\t\tmouse.mover_cuadrado = false;\n\t\tmouse.cuadrado_punto_mover = false;\n\t\tmouse.cuadrado_pto = '';\n\t\t// LINEA:\n\t\tmouse.mover_linea = false;\n\t\tmouse.linea_punto_mover = false;\n\t\tmouse.linea_pto = '';\n\t\t// LAPIZ:\n\t\tmouse.mover_lapiz = false;\n\t\t// PLANO:\n\t\tmouse.plano_mover = false;\n\t\tmouse.plano_pto_mover = false;\n\t\tmouse.plano_pto = '';\n\t\tmouse.texto_mover = false;\n\t};\n\tconst update_canvasMoverDatos = () => {\n\t\tcanvasMoverDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasMoverDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasMoverDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasMoverDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (stateMover.active) {\n\t\t\tupdate_canvasMoverDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownMover);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveMover);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpMover);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownMover);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveMover);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpMover);\n\t\t};\n\t}, [stateCuadrado, stateLinea]);\n\n\t// RENDER:\n\t// return console.log('paint mover');\n};\n\nexport default PaintMover;\n","import React, { useEffect, useContext } from 'react';\n\n// CONTEXT:\nimport AppContextBorrador from '../context/AppContextBorrador';\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// UTILS:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport {\n\tu_cuadradoGet,\n\tu_cuadradoDeleteById,\n\tu_cuadradoGraficaH,\n} from '../utils/UtilsCuadrado';\nimport {\n\tu_lapizGet,\n\tu_lapizDeleteById,\n\tu_lapizGraficaH,\n} from '../utils/UtilsLapiz';\nimport {\n\tu_lineaGet,\n\tu_lineaDeleteById,\n\tu_lineaGraficaH,\n} from '../utils/UtilsLinea';\nimport {\n\tu_planoGet,\n\tu_planoDeleteById,\n\tu_planoGraficaH,\n} from '../utils/UtilsPlano';\nimport {\n\tu_textGraficaH,\n\tu_textDeleteById,\n\tu_getText,\n} from '../utils/UtilsText';\n\nconst PaintBorrador = (id_canvas) => {\n\t// useContext:\n\tconst { stateBorrador } = useContext(AppContextBorrador);\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { statePlano } = useContext(AppContextPlano);\n\tconst { stateText } = useContext(AppContextText);\n\n\t// LOGICA:\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tu_planoGraficaH(context, statePlano.historiaPlano);\n\t\tu_cuadradoGraficaH(context, stateCuadrado.historiaCuadrado);\n\t\tu_lineaGraficaH(context, stateLinea.historiaLinea);\n\t\tu_lapizGraficaH(context, stateLapiz.historiaLapiz);\n\t\tu_textGraficaH(context, stateText.historiaText);\n\t};\n\tlet canvas = '';\n\tlet context = '';\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst capturaPosPosprev = (e) => {\n\t\tlet x = e.clientX;\n\t\tlet y = e.clientY;\n\t\tlet x_real = x - canvasBorradorDatos.left;\n\t\tlet y_real = y - canvasBorradorDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\t};\n\tconst cuadradoDelete = () => {\n\t\tlet res = false;\n\t\tlet array = stateCuadrado.historiaCuadrado;\n\t\tlet cuadrado = u_cuadradoGet(array, mouse.pos.x, mouse.pos.y);\n\t\tif (cuadrado) {\n\t\t\tstateCuadrado.historiaCuadrado = u_cuadradoDeleteById(array, cuadrado.id);\n\t\t\t// paint();\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst lapizDelete = () => {\n\t\tlet res = false;\n\t\tlet array = stateLapiz.historiaLapiz;\n\t\tlet lapiz = u_lapizGet(array, mouse.pos.x, mouse.pos.y);\n\t\tif (lapiz) {\n\t\t\tu_lapizDeleteById(array, lapiz.id);\n\t\t\t// paint();\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst lineaDelete = () => {\n\t\tlet res = false;\n\t\tlet array = stateLinea.historiaLinea;\n\t\tlet linea = u_lineaGet(array, mouse.pos.x, mouse.pos.y);\n\t\tif (linea) {\n\t\t\tu_lineaDeleteById(array, linea.id);\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst planoDelete = () => {\n\t\tlet res = false;\n\t\tlet array = statePlano.historiaPlano;\n\t\tlet plano = u_planoGet(array, mouse.pos.x, mouse.pos.y);\n\t\tif (plano) {\n\t\t\tu_planoDeleteById(array, plano.id);\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst textDelete = () => {\n\t\tlet res = false;\n\t\tlet array = stateText.historiaText;\n\t\tlet text = u_getText(array, mouse.pos.x, mouse.pos.y);\n\t\tif (text) {\n\t\t\tu_textDeleteById(array, text.id);\n\t\t\tres = true;\n\t\t}\n\t\treturn res;\n\t};\n\tconst mouseDownBorrador = (e) => {\n\t\tconsole.log('click borrador');\n\t\tcapturaPosPosprev(e);\n\t\t// TEXTO\n\t\tlet res = textDelete();\n\t\tif (res) {\n\t\t\tpaint();\n\t\t} else {\n\t\t\t// LAPIZ:\n\t\t\tres = lapizDelete();\n\t\t\tif (res) {\n\t\t\t\tpaint();\n\t\t\t} else {\n\t\t\t\t// LINEA:\n\t\t\t\tres = lineaDelete();\n\t\t\t\tif (res) {\n\t\t\t\t\tpaint();\n\t\t\t\t} else {\n\t\t\t\t\t// CUADRADO\n\t\t\t\t\tres = cuadradoDelete();\n\t\t\t\t\tif (res) {\n\t\t\t\t\t\tpaint();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// plano\n\t\t\t\t\t\tres = planoDelete();\n\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\tpaint();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tconst canvasBorradorDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst update_canvasBorradorDatos = () => {\n\t\tcanvasBorradorDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasBorradorDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasBorradorDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasBorradorDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (stateBorrador.active) {\n\t\t\tupdate_canvasBorradorDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownBorrador);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownBorrador);\n\t\t};\n\t}, [stateBorrador]);\n\t// RENDER:\n\t// return console.log('hola soy el borrador');\n};\n\nexport default PaintBorrador;\n","import React, { useState, useEffect, useContext } from 'react';\n\n// context:\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextCanvas from '../context/AppContextCanvas';\n\n// styles:\nimport '../styles/Canvas.scss';\n\n// components:\nimport PaintMover from './PaintMover';\nimport PainLapiz from '../components/PaintLapiz';\nimport PaintBorrador from './PaintBorrador';\nimport PaintLinea from './PaintLinea';\nimport PaintCuadrado from './PaintCuadrado';\nimport PaintCuadricula from './PaintCuadricula';\nimport PaintPlano from './PaintPlano';\n\nconst Canvas = () => {\n\t// useContext:\n\tconst { update_width_height } = useContext(AppContextCanvas);\n\n\t// useState:\n\tconst [canvasWidth, setCanvasWidth] = useState(window.innerWidth - 75);\n\tconst [canvasHeight, setCanvasHeight] = useState(window.innerHeight - 90);\n\n\t// LOGICA:\n\t// update_width_height;\n\n\tPaintCuadricula('canvas-1');\n\tPaintMover('canvas-1');\n\tPainLapiz('canvas-1');\n\tPaintBorrador('canvas-1');\n\tPaintCuadrado('canvas-1');\n\tPaintLinea('canvas-1');\n\tPaintPlano('canvas-1');\n\n\tconst updateCanvasWidth = () => setCanvasWidth(window.innerWidth - 75);\n\tconst updateCanvasHeight = () => setCanvasHeight(window.innerHeight - 90);\n\t// LOGICA END.\n\n\t// useEfect:\n\tuseEffect(() => {\n\t\t// redimencionamos el canvas la primera vez:\n\t\twindow.addEventListener('resize', updateCanvasWidth);\n\t\twindow.addEventListener('resize', updateCanvasHeight);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', updateCanvasWidth);\n\t\t\twindow.removeEventListener('resize', updateCanvasHeight);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tupdate_width_height(canvasWidth, canvasHeight);\n\t}, [canvasWidth, canvasHeight]);\n\n\treturn (\n\t\t<canvas\n\t\t\tclassName=\"canvas\"\n\t\t\twidth={canvasWidth}\n\t\t\theight={canvasHeight}\n\t\t\tid=\"canvas-1\"\n\t\t></canvas>\n\t);\n};\n\nexport default Canvas;\n","import { useEffect, useContext } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport { utilsCuadrado_graficaCuadradoHistoria } from '../utils/UtilsCuadrado';\nimport { utilsLinea_graficaLineaHistoria } from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\nimport { uPlano_graficaCuadradoHistoriaConEjes } from '../utils/UtilsPlano';\nimport { u_textGraficaH } from '../utils/UtilsText';\n\nconst PaintCuadricula = (canvasId) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\tconst { stateText } = useContext(AppContextText);\n\n\t// LOGICA:\n\tlet context = '';\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas);\n\t\tuPlano_graficaCuadradoHistoriaConEjes(context, statePlano.historiaPlano);\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz);\n\t\tu_textGraficaH(context, stateText.historiaText);\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcontext = document.getElementById(canvasId).getContext('2d');\n\t\tpaint();\n\t}, [\n\t\tstateCanvas.width,\n\t\tstateCanvas.height,\n\t\tstateCanvas.tipoCuadricula,\n\t\tstateCanvas.cuadriculaWidth,\n\t]);\n};\n//const saludar = () => console.log('hola daniel');\n\nexport default PaintCuadricula;\n","import React, { useEffect, useContext } from 'react';\n\n// useContext:\nimport AppContextLapiz from '../context/AppContextLapiz';\n\n// UTILS:\nimport { u_lapizGraficaLinea } from '../utils/UtilsLapiz';\n\nconst PaintLapiz = (id_canvas) => {\n\t// useContext:\n\tconst { stateLapiz, s_lapizAddHId } = useContext(AppContextLapiz);\n\n\t// LOGICA:\n\tlet canvas = '';\n\tlet context = '';\n\tconst lapizNew = {\n\t\tid: stateLapiz.id,\n\t\tvisible: true,\n\t\tgrosor: stateLapiz.grosor,\n\t\tcolor: stateLapiz.color,\n\t\thistoriaLinea: [],\n\t\tx_min: 2000,\n\t\tx_may: 0,\n\t\ty_min: 2000,\n\t\ty_may: 0,\n\t};\n\tlet linea = {\n\t\tgrosor: stateLapiz.grosor,\n\t\tcolor: stateLapiz.color,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\t};\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\tconst x_real = x - canvasLapizDatos.left;\n\t\tconst y_real = y - canvasLapizDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\t\tlinea.x_ini = mouse.pos_prev.x;\n\t\tlinea.y_ini = mouse.pos_prev.y;\n\t\tlinea.x_fin = mouse.pos.x;\n\t\tlinea.y_fin = mouse.pos.y;\n\t};\n\t// 1\n\tconst mouseDownLapiz = (e) => {\n\t\tstateLapiz.grosor > 0\n\t\t\t? (mouse.click = true)\n\t\t\t: console.log('el grosor es 0.');\n\t\tcaptura_Pos_Posprev(e);\n\t};\n\t// 2\n\tconst mouseMoveLapiz = (e) => {\n\t\tif (mouse.click) {\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\t//graficaLinea(linea);\n\t\t\tlinea = u_lapizGraficaLinea(context, linea, lapizNew);\n\t\t\tlapizNew.historiaLinea.push([\n\t\t\t\tlinea.x_ini,\n\t\t\t\tlinea.y_ini,\n\t\t\t\tlinea.x_fin,\n\t\t\t\tlinea.y_fin,\n\t\t\t]);\n\t\t}\n\t};\n\t// 3\n\tconst mouseUpLapiz = (e) => {\n\t\tif (mouse.click && mouse.pos_prev.x != 0 && mouse.pos_prev.y != 0) {\n\t\t\ts_lapizAddHId(lapizNew, stateLapiz.id + 1);\n\t\t}\n\t\tmouse.click = false;\n\t};\n\tconst canvasLapizDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst update_canvasLapizDatos = () => {\n\t\tcanvasLapizDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasLapizDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasLapizDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasLapizDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\n\t\tif (stateLapiz.active) {\n\t\t\tupdate_canvasLapizDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownLapiz);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveLapiz);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpLapiz);\n\t\t}\n\t\treturn () => {\n\t\t\t//canvasLapiz.removeEventListener('click', saludar);\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownLapiz);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveLapiz);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpLapiz);\n\t\t};\n\t}, [stateLapiz]);\n\t// return console.log('hola soy lapiz');\n};\n\nexport default PaintLapiz;\n","import React, { useContext, useEffect } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport {\n\tu_cuadradoGrafica,\n\tu_cuadradoGraficaH,\n\tu_cuadradoValidaPosicion,\n} from '../utils/UtilsCuadrado';\nimport { u_lineaGraficaH } from '../utils/UtilsLinea';\nimport { u_lapizGraficaH } from '../utils/UtilsLapiz';\nimport { u_planoGraficaH } from '../utils/UtilsPlano';\nimport { u_textGraficaH } from '../utils/UtilsText';\n\nconst PaintCuadrado = (id_canvas) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado, s_cuadradoAddH } = useContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\tconst { stateText } = useContext(AppContextText);\n\n\t// LOGICA:\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tu_planoGraficaH(context, statePlano.historiaPlano); // plano cartesiano\n\t\tu_cuadradoGraficaH(context, stateCuadrado.historiaCuadrado);\n\t\tu_lineaGraficaH(context, stateLinea.historiaLinea);\n\t\tu_lapizGraficaH(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t\tu_textGraficaH(context, stateText.historiaText);\n\t};\n\tlet canvas = '';\n\tlet context = '';\n\tlet cuadrado = {\n\t\tid: stateCuadrado.id,\n\t\tvisible: true,\n\t\tbordeEstado: stateCuadrado.bordeEstado,\n\t\tbordeGrosor: stateCuadrado.bordeGrosor,\n\t\tbordeColor: stateCuadrado.bordeColor,\n\t\tfondoEstado: stateCuadrado.fondoEstado,\n\t\tfondoColor: stateCuadrado.fondoColor,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\t};\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst mouseReinicia = () => {\n\t\tmouse.click = false;\n\t\tmouse.move = false;\n\t\tmouse.pos.x = 0;\n\t\tmouse.pos_prev.x = 0;\n\t\tmouse.pos.y = 0;\n\t\tmouse.pos_prev.y = 0;\n\t};\n\n\tconst canvasCuadradoDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\tconst x_real = x - canvasCuadradoDatos.left;\n\t\tconst y_real = y - canvasCuadradoDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\t};\n\t// 1\n\tconst mouseDownCuadrado = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\t\tcuadrado.x_ini = mouse.pos.x;\n\t\tcuadrado.y_ini = mouse.pos.y;\n\t};\n\t// 2\n\tconst mouseMoveCuadrado = (e) => {\n\t\tif (mouse.click) {\n\t\t\tmouse.move = true;\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\tcuadrado.x_fin = mouse.pos.x;\n\t\t\tcuadrado.y_fin = mouse.pos.y;\n\t\t\tpaint();\n\t\t\tu_cuadradoGrafica(context, cuadrado);\n\t\t}\n\t};\n\t// 3\n\tconst mouseUpCuadrado = () => {\n\t\tif (mouse.click && mouse.pos_prev.x != 0 && mouse.pos_prev.y != 0) {\n\t\t\tcuadrado = u_cuadradoValidaPosicion(cuadrado);\n\t\t\ts_cuadradoAddH(cuadrado);\n\t\t}\n\t\tmouseReinicia();\n\t};\n\tconst update_canvasCuadradoDatos = () => {\n\t\tcanvasCuadradoDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasCuadradoDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasCuadradoDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasCuadradoDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (stateCuadrado.active) {\n\t\t\tupdate_canvasCuadradoDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownCuadrado);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveCuadrado);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpCuadrado);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownCuadrado);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveCuadrado);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpCuadrado);\n\t\t};\n\t}, [stateCuadrado]);\n\tuseEffect(() => {\n\t\tconsole.log('se agrego un cuadrado...');\n\t\tpaint();\n\t}, [stateCuadrado.historiaCuadrado]);\n};\n\nexport default PaintCuadrado;\n","import { useContext, useEffect } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport { utilsCuadrado_graficaCuadradoHistoria } from '../utils/UtilsCuadrado';\nimport {\n\tu_lineaGrafica,\n\tutilsLinea_graficaLineaHistoria,\n} from '../utils/UtilsLinea';\nimport { utilsLapiz_graficaLapizHistoria } from '../utils/UtilsLapiz';\nimport { uPlano_graficaCuadradoHistoriaConEjes } from '../utils/UtilsPlano';\nimport { u_textGraficaH } from '../utils/UtilsText';\n\nconst PaintLinea = (id_canvas) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea, s_lineaAddHId } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano } = useContext(AppContextPlano);\n\tconst { stateText } = useContext(AppContextText);\n\n\t// LOGICA:\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tuPlano_graficaCuadradoHistoriaConEjes(context, statePlano.historiaPlano); // plano cartesiano\n\t\tutilsCuadrado_graficaCuadradoHistoria(\n\t\t\tcontext,\n\t\t\tstateCuadrado.historiaCuadrado\n\t\t);\n\t\tutilsLinea_graficaLineaHistoria(context, stateLinea.historiaLinea);\n\t\tutilsLapiz_graficaLapizHistoria(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t\tu_textGraficaH(context, stateText.historiaText);\n\t};\n\tlet canvas = '';\n\tlet context = '';\n\tconst mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst mouseReinicia = () => {\n\t\tmouse.click = false;\n\t\tmouse.move = false;\n\t\tmouse.pos.x = 0;\n\t\tmouse.pos_prev.x = 0;\n\t\tmouse.pos.y = 0;\n\t\tmouse.pos_prev.y = 0;\n\t};\n\tconst Linea = {\n\t\tid: stateLinea.id,\n\t\tvisible: true,\n\t\tgrosor: stateLinea.grosor,\n\t\tcolor: stateLinea.color,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\t};\n\tconst captura_Pos_Posprev = (e) => {\n\t\tconst x = e.clientX;\n\t\tconst y = e.clientY;\n\t\tconst x_real = x - canvasLineaDatos.left;\n\t\tconst y_real = y - canvasLineaDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\t};\n\t// 1\n\tconst mouseDownLinea = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\t\tLinea.x_ini = mouse.pos.x;\n\t\tLinea.y_ini = mouse.pos.y;\n\t};\n\t// 2\n\tconst mouseMoveLinea = (e) => {\n\t\tif (mouse.click) {\n\t\t\tmouse.move = true;\n\t\t\tcaptura_Pos_Posprev(e);\n\t\t\tLinea.x_fin = mouse.pos.x;\n\t\t\tLinea.y_fin = mouse.pos.y;\n\t\t\tpaint();\n\t\t\tu_lineaGrafica(context, Linea); // utilsPaint_graficaLinea\n\t\t}\n\t};\n\t// 3\n\tconst mouseUpLinea = () => {\n\t\tif (mouse.click && mouse.pos_prev.x != 0 && mouse.pos_prev.y != 0) {\n\t\t\ts_lineaAddHId(Linea, stateLinea.id + 1);\n\t\t}\n\t\tmouseReinicia();\n\t};\n\tconst canvasLineaDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst update_canvasLineaDatos = () => {\n\t\tcanvasLineaDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasLineaDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasLineaDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasLineaDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// useEffect:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (stateLinea.active) {\n\t\t\tupdate_canvasLineaDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownLinea);\n\t\t\tcanvas.addEventListener('mousemove', mouseMoveLinea);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpLinea);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownLinea);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMoveLinea);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpLinea);\n\t\t};\n\t}, [stateLinea]);\n\tuseEffect(() => {\n\t\tconsole.log('se agrego una linea...');\n\t\tpaint();\n\t}, [stateLinea.historiaLinea]);\n};\n\nexport default PaintLinea;\n","import React, { useEffect, useContext } from 'react';\n\n// CONTEXT:\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// utils:\nimport { utilsCuadricula_graficaCuadricula } from '../utils/UtilsCuadricula';\nimport { u_cuadradoGraficaH } from '../utils/UtilsCuadrado';\nimport { u_lineaGraficaH } from '../utils/UtilsLinea';\nimport { u_lapizGraficaH } from '../utils/UtilsLapiz';\nimport { u_planoGraficaH } from '../utils/UtilsPlano';\nimport { u_textGraficaH } from '../utils/UtilsText';\n\nconst PaintPlano = (id_canvas) => {\n\t// useContext:\n\tconst { stateCanvas } = useContext(AppContextCanvas);\n\tconst { stateCuadrado } = useContext(AppContextCuadrado);\n\tconst { stateLinea } = useContext(AppContextLinea);\n\tconst { stateLapiz } = useContext(AppContextLapiz);\n\tconst { statePlano, s_planoAddHId } = useContext(AppContextPlano);\n\tconst { stateText } = useContext(AppContextText);\n\n\t// LOGICA:\n\tconst paint = () => {\n\t\tutilsCuadricula_graficaCuadricula(context, stateCanvas); // grafica cuadricula\n\t\tu_planoGraficaH(context, statePlano.historiaPlano);\n\t\tu_cuadradoGraficaH(context, stateCuadrado.historiaCuadrado);\n\t\tu_lineaGraficaH(context, stateLinea.historiaLinea);\n\t\tu_lapizGraficaH(context, stateLapiz.historiaLapiz); // grafica historia de lapiz\n\t\tu_textGraficaH(context, stateText.historiaText);\n\t};\n\tlet canvas = '';\n\tlet context = '';\n\tlet mouse = {\n\t\tclick: false,\n\t\tmove: false,\n\t\tprimerClick: false,\n\t\tpos: { x: 0, y: 0 },\n\t\tpos_prev: { x: 0, y: 0 },\n\t};\n\tconst mouseReinicia = () => {\n\t\tmouse.click = false;\n\t\tmouse.move = false;\n\t\tmouse.primerClick = false;\n\t\tmouse.pos.x = 0;\n\t\tmouse.pos_prev.x = 0;\n\t\tmouse.pos.y = 0;\n\t\tmouse.pos_prev.y = 0;\n\t};\n\tconst plano = {\n\t\tid: statePlano.id,\n\t\tvisible: true,\n\t\tbordeEstado: true,\n\t\tbordeGrosor: 2,\n\t\tbordeColor: statePlano.color_cuadricula,\n\t\tfondoEstado: true,\n\t\tfondoColor: 'white',\n\t\twidth_cuadricula: statePlano.width_cuadricula,\n\t\tx_ini: 0,\n\t\ty_ini: 0,\n\t\tx_fin: 0,\n\t\ty_fin: 0,\n\n\t\tx_min: statePlano.x_min,\n\t\ty_max: statePlano.y_max,\n\t\tsalto: statePlano.salto,\n\t};\n\tlet captura_Pos_Posprev = (e) => {\n\t\tlet x = e.clientX;\n\t\tlet y = e.clientY;\n\t\tlet x_real = x - canvasPlanoDatos.left;\n\t\tlet y_real = y - canvasPlanoDatos.top;\n\t\tmouse.pos_prev.x = mouse.pos.x;\n\t\tmouse.pos_prev.y = mouse.pos.y;\n\t\tmouse.pos.x = x_real;\n\t\tmouse.pos.y = y_real;\n\t};\n\t// 1:\n\tconst mouseDownPlano = (e) => {\n\t\tmouse.click = true;\n\t\tcaptura_Pos_Posprev(e);\n\t};\n\t// 2:\n\tconst mouseMovePlano = (e) => {};\n\t// 3:\n\tlet mouseUpPlano = (e) => {\n\t\tcaptura_Pos_Posprev(e);\n\t\tif (mouse.click && mouse.pos_prev.x != 0 && mouse.pos_prev.y != 0) {\n\t\t\tplano.x_ini = mouse.pos.x - 150;\n\t\t\tplano.y_ini = mouse.pos.y - 150;\n\t\t\tplano.x_fin = mouse.pos.x + 150;\n\t\t\tplano.y_fin = mouse.pos.y + 150;\n\t\t\ts_planoAddHId(plano, statePlano.id + 1);\n\t\t}\n\t\tmouseReinicia();\n\t};\n\tconst canvasPlanoDatos = {\n\t\ttop: 0,\n\t\tleft: 0,\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\tconst update_canvasPlanoDatos = () => {\n\t\tcanvasPlanoDatos.top = canvas.getBoundingClientRect().top;\n\t\tcanvasPlanoDatos.left = canvas.getBoundingClientRect().left;\n\t\tcanvasPlanoDatos.width = canvas.getBoundingClientRect().width;\n\t\tcanvasPlanoDatos.height = canvas.getBoundingClientRect().height;\n\t};\n\t// LOGICA END.\n\n\t// EFFECT:\n\tuseEffect(() => {\n\t\tcanvas = document.getElementById(id_canvas);\n\t\tcontext = canvas.getContext('2d');\n\t\tif (statePlano.active) {\n\t\t\tupdate_canvasPlanoDatos();\n\t\t\tcanvas.addEventListener('mousedown', mouseDownPlano);\n\t\t\tcanvas.addEventListener('mousemove', mouseMovePlano);\n\t\t\tcanvas.addEventListener('mouseup', mouseUpPlano);\n\t\t}\n\t\treturn () => {\n\t\t\tcanvas.removeEventListener('mousedown', mouseDownPlano);\n\t\t\tcanvas.removeEventListener('mousemove', mouseMovePlano);\n\t\t\tcanvas.removeEventListener('mouseup', mouseUpPlano);\n\t\t};\n\t}, [statePlano]);\n\tuseEffect(() => {\n\t\tpaint();\n\t}, [statePlano.historiaPlano]);\n};\n\nexport default PaintPlano;\n","import React from 'react';\nimport Canvas from '../components/Canvas';\n\nimport '../styles/Home.scss';\n\nconst Home = () => {\n\t// const heightPantalla = screen.height - 180;\n\t// const widthPantalla = screen.width - 55;\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t<Canvas />\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import React from 'react';\nimport Header from '../components/Header';\nimport NavIzq from '../components/NavIzq';\nimport Home from '../pages/Home';\n\nconst Layout = ({ children }) => {\n\treturn (\n\t\t<div className=\"Layout\">\n\t\t\t<Header />\n\t\t\t<NavIzq />\n\t\t\t<Home />\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nexport default Layout;\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\n// CONTEXT:\nimport AppContext from '../context/AppContext';\nimport AppContextLapiz from '../context/AppContextLapiz';\nimport AppContextBorrador from '../context/AppContextBorrador';\nimport AppContextCuadrado from '../context/AppContextCuadrado';\nimport AppContextMover from '../context/AppContextMover';\nimport AppContextCanvas from '../context/AppContextCanvas';\nimport AppContextLinea from '../context/AppContextLinea';\nimport AppContextPlano from '../context/AppContextPlano';\nimport AppContextText from '../context/AppContextText';\n\n// HOOKS:\nimport useInitialState from '../hooks/useInitialState';\nimport useMover from '../hooks/useMover';\nimport useLapiz from '../hooks/useLapiz';\nimport useBorrador from '../hooks/useBorrador';\nimport useCuadrado from '../hooks/useCuadrado';\nimport useCanvas from '../hooks/useCanvas';\nimport useLinea from '../hooks/useLinea';\nimport usePlano from '../hooks/usePlano';\nimport useText from '../hooks/useText';\n\nimport Layout from '../containers/Layout';\nimport Home from '../pages/Home';\nimport '../styles/global.css';\n\nconst App = () => {\n\tconst initialState = useInitialState();\n\tconst initialStateMover = useMover();\n\tconst initialStateLapiz = useLapiz();\n\tconst initialStateBorrador = useBorrador();\n\tconst initialStateCuadrado = useCuadrado();\n\tconst initialStateCanvas = useCanvas();\n\tconst initialStateLinea = useLinea();\n\tconst initialStatePlano = usePlano();\n\tconst initialStateText = useText();\n\n\treturn (\n\t\t<AppContext.Provider value={initialState}>\n\t\t\t<AppContextCanvas.Provider value={initialStateCanvas}>\n\t\t\t\t<AppContextMover.Provider value={initialStateMover}>\n\t\t\t\t\t<AppContextLapiz.Provider value={initialStateLapiz}>\n\t\t\t\t\t\t<AppContextBorrador.Provider value={initialStateBorrador}>\n\t\t\t\t\t\t\t<AppContextCuadrado.Provider value={initialStateCuadrado}>\n\t\t\t\t\t\t\t\t<AppContextLinea.Provider value={initialStateLinea}>\n\t\t\t\t\t\t\t\t\t<AppContextPlano.Provider value={initialStatePlano}>\n\t\t\t\t\t\t\t\t\t\t<AppContextText.Provider value={initialStateText}>\n\t\t\t\t\t\t\t\t\t\t\t<BrowserRouter>\n\t\t\t\t\t\t\t\t\t\t\t\t<Layout>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <Routes>\n\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/\" element={<Home />} />\n\t\t\t\t\t\t\t\t\t</Routes> */}\n\t\t\t\t\t\t\t\t\t\t\t\t</Layout>\n\t\t\t\t\t\t\t\t\t\t\t</BrowserRouter>\n\t\t\t\t\t\t\t\t\t\t</AppContextText.Provider>\n\t\t\t\t\t\t\t\t\t</AppContextPlano.Provider>\n\t\t\t\t\t\t\t\t</AppContextLinea.Provider>\n\t\t\t\t\t\t\t</AppContextCuadrado.Provider>\n\t\t\t\t\t\t</AppContextBorrador.Provider>\n\t\t\t\t\t</AppContextLapiz.Provider>\n\t\t\t\t</AppContextMover.Provider>\n\t\t\t</AppContextCanvas.Provider>\n\t\t</AppContext.Provider>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './routes/App';\n\nReactDom.render(<App />, document.getElementById('app'));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmathboard\"] = self[\"webpackChunkmathboard\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [829], function() { return __webpack_require__(3436); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","React","initialState","alfabetoMay","split","alfabetoMin","alfabeto","active","color","colorFondo","grosor","state","setState","useState","toLowerCase","auxArray","toUpperCase","updateCanvasPaleta","optionIcon","console","log","updateColor","valor","updateColorFondo","updateGrosor","initialStateMover","stateMover","setStateMover","updateMoverActive","initialStateLapiz","id","historiaLapiz","stateLapiz","setStateLapiz","updateLapizActive","updateLapizColor","updateLapizGrosor","updateLapizColorGrosor","valor1","valor2","s_lapizAddHId","lapiz","initialStateBorrador","historialBorrador","stateBorrador","setStateBorrador","updateBorradorActive","updateBorradorColor","updateBorradorGrosor","initialStateCuadrado","bordeEstado","bordeGrosor","bordeColor","fondoEstado","fondoColor","x_ini","y_ini","width","height","historiaCuadrado","stateCuadrado","setStateCuadrado","updateCuadradoActive","updateCuadradoBordeGrosor","updateCuadradoBordeEstado","updateCuadradoBorde_ColorEstado","estado","updateCuadradoFondoEstado","updateCuadradoFondo_ColorEstado","add_cuadrado_en_historia","cuadrado","update_cuadrado_en_historia","array","update_all","colorBorde","bordeEstadoIn","fondoEstadoIn","update_cuadradoH","s_cuadradoAddH","initialStateCanvas","cuadriculaWidth","lineaColor","lineaGrosor","tipoCuadricula","stateCanvas","setStateCanvas","updateCuadriculaActive","updateCuadriculaWidth","update_width_height","updateTipoCuadricula","initialStateLinea","historiaLinea","stateLinea","setStateLinea","updateLineaActive","updateLineaColor","updateLineaGrosor","add_historiaLinea","updateLineaColorGrosor","s_lineaUpdateH","s_lineaAddHId","initialStatePlano","x_min","y_max","salto","color_cuadricula","width_cuadricula","historiaPlano","statePlano","setStatePlano","updatePlanoActive","add_plano_en_historia","s_planoAddHId","initialStateText","tamano","texto","historiaText","stateText","setStateText","updateTextActive","s_textAddH","s_textUpdateColor","s_textUpdateTamano","s_textUpdateText","txt","s_textAddHId","useContext","AppContextPlano","useEffect","className","type","defaultValue","value","onClick","AppContext","arrayPaletaColor","colorLine","tipo","updatePaletaColor","forEach","dato","document","getElementById","classList","remove","elem","find","add","title","map","handleColor","handlePaletaColor","src","iconLineaNone","arrayIconLinea","iconLine","iconLineaS","iconLineaM","iconLineaL","iconLineaXL","iconLineaXXL","updatePaletaGrosor","querySelectorAll","i","length","htmlFor","handleLineaGrosor","AppContextLapiz","AppContextBorrador","handleGrosor","opMatematica","parseInt","update","placeholder","disabled","AppContextCuadrado","AppContextCanvas","arrayIconCuadricula","iconCuadricula","iconCuadriculaSin","iconCuadriculaNone","updatePaleta_tipoCuadricula","handleBtnAncho","op","handleCuadriculaTipo","AppContextLinea","AppContextText","canvas","context","textoNew","visible","arrayColorLinea","handleSize","size","getContext","fillStyle","font","beginPath","fillText","closePath","handleAdd","toggleMenu1","setToggleMenu1","toggleMenuMover","setToggleMenuMover","toggleMenuLapiz","setToggleMenuLapiz","toggleMenuBorrador","setToggleMenuBorrador","toggleMenuCuadrado","setToggleMenuCuadrado","toggleMenuCuadricula","setToggleMenuCuadricula","toggleMenuLinea","setToggleMenuLinea","toggleMenuPlano","setToggleMenuPlano","toggleMenuText","setToggleMenuText","href","Menu1","element","key","handleClick","svg","toggleShift","setToggleShift","option","elm","AppContextMover","AppContextCuadricula","toggleKeyboard","setToggleKeyboard","iconosPaleta","moverIcon","lapizIcon","borradorIcon","textIcon","lineaIcon","cuadradoIcon","planoIcon","cuadriculaIcon","icon","handleIcon","keyboardIcon","utilsCuadricula_graficaCuadricula","lineWidth","strokeStyle","setLineDash","moveTo","lineTo","fill","stroke","nroLineasV","incV","nroLineasH","incH","utilsLinea_graficaLinea","linea","x_fin","y_fin","uPlano_graficaCuadradoConEjes","plano","x1","y1","y2","x2","utilsPlano_graficaCuadricula","Linea","x3","y3","utilsPlano_graficaTriangulo","arrayX","n","x","push","arrayY","heigth","y","textAlign","uPlano_graficaNumeros","uPlano_graficaCuadradoHistoriaConEjes","u_planoGet","resp","u_planoGraficaH","u_planoGetPtsRedimencion","width_p","u_planoSegmentado","utilsCuadrado_graficaCuadradoHistoria","utilsCuadrado_graficaCuadrado","u_cuadradoGet","u_cuadradoGrafica","u_cuadradoGraficaH","u_cuadradoGetPtsRedimencion","u_cuadradoSegmentado","utilsLinea_graficaLineaHistoria","distancia_p1_p2","Math","sqrt","pow","u_lineaGet","a","b","dnum","d","px","py","dis_valido","dis","u_lineaGraficaH","u_lineaGetPtsRedimencion","u_lineaSegmentado","inc","m","alfa","atan","utilsLapiz_graficaLapiz","sw","utilsLapiz_graficaLapizHistoria","u_lapizGet","y_min","x_may","y_may","u_lapizGraficaH","u_lapizSegmentado","u_textGraficaH","obj","u_textGrafica","u_getText","id_canvas","paint","mouse","click","move","pos","pos_prev","mouseDownBorrador","e","clientX","clientY","x_real","canvasBorradorDatos","left","y_real","top","capturaPosPosprev","res","text","u_textDeleteById","textDelete","lapiz_id","u_lapizDeleteById","lapizDelete","linea_id","u_lineaDeleteById","lineaDelete","cuadradoId","arrayNew","u_cuadradoDeleteById","cuadradoDelete","u_planoDeleteById","planoDelete","getBoundingClientRect","addEventListener","removeEventListener","canvasWidth","setCanvasWidth","window","innerWidth","canvasHeight","setCanvasHeight","innerHeight","canvasId","PaintCuadricula","cuadradoSelect","lineaSelect","lapizSelect","planoSelect","textSelect","mover_cuadrado","seleccionar_cuadrado_pts","cuadrado_punto_mover","cuadrado_pto","mover_linea","seleccionar_linea_pts","linea_punto_mover","linea_pto","mover_lapiz","plano_mover","plano_seleccionar_pts","plano_pto_mover","plano_pto","texo_active","texto_mover","canvasMoverDatos","captura_Pos_Posprev","busca_cuadrado_ptoClick","mouseDownMover","arrayPts","busca_linea_ptoClick","mouseMoveMover","recorrido_x","recorrido_y","u_cuadradoMover","u_cuadradoUpdateZise","u_lineaMover","u_lineaUpdateZise","u_lapizMover","u_planoMover","u_planoUpdateZise","u_textMover","mouseUpMover","aux","PaintMover","lapizNew","canvasLapizDatos","mouseDownLapiz","mouseMoveLapiz","u_lapizGraficaLinea","mouseUpLapiz","PainLapiz","PaintBorrador","canvasCuadradoDatos","mouseDownCuadrado","mouseMoveCuadrado","mouseUpCuadrado","u_cuadradoValidaPosicion","PaintCuadrado","canvasLineaDatos","mouseDownLinea","mouseMoveLinea","u_lineaGrafica","mouseUpLinea","PaintLinea","primerClick","canvasPlanoDatos","mouseDownPlano","mouseMovePlano","mouseUpPlano","PaintPlano","updateCanvasWidth","updateCanvasHeight","children","useInitialState","useMover","useLapiz","useBorrador","useCuadrado","useCanvas","useLinea","usePlano","useText","ReactDom","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}